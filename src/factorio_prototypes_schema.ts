/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

/**
 * https://lua-api.factorio.com/stable/prototypes/AmmoItemPrototype.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "AmmoItemPrototype".
 */
export type AmmoItemPrototype = ItemPrototype & {
  ammo_type: AmmoType | AmmoType[] | {}
  magazine_size?: Float
  reload_time?: Float
  ammo_category: AmmoCategoryID
  shoot_protected?: Bool
}
/**
 * https://lua-api.factorio.com/stable/prototypes/ItemPrototype.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "ItemPrototype".
 */
export type ItemPrototype = Prototype & {
  stack_size: ItemCountType
  icons?: IconData[] | {}
  icon?: FileName
  icon_size?: SpriteSizeType
  dark_background_icons?: IconData[] | {}
  dark_background_icon?: FileName
  dark_background_icon_size?: SpriteSizeType
  place_result?: EntityID
  place_as_equipment_result?: EquipmentID
  fuel_category?: FuelCategoryID
  burnt_result?: ItemID
  spoil_result?: ItemID
  plant_result?: EntityID
  place_as_tile?: {
    result: TileID
    condition: CollisionMaskConnector
    invert?: Bool
    condition_size: Uint32
    tile_condition?: TileID[] | {}
  }
  pictures?: SpriteVariations
  flags?: ItemPrototypeFlags
  spoil_ticks?: Uint32
  fuel_value?: Energy
  fuel_acceleration_multiplier?: Double
  fuel_top_speed_multiplier?: Double
  fuel_emissions_multiplier?: Double
  fuel_acceleration_multiplier_quality_bonus?: Double
  fuel_top_speed_multiplier_quality_bonus?: Double
  weight?: Weight
  ingredient_to_weight_coefficient?: Double
  fuel_glow_color?: Color
  open_sound?: Sound
  close_sound?: Sound
  pick_sound?: Sound
  drop_sound?: Sound
  inventory_move_sound?: Sound
  default_import_location?: SpaceLocationID
  color_hint?: ColorHintSpecification
  has_random_tint?: Bool
  spoil_to_trigger_result?: SpoilToTriggerResult
  destroyed_by_dropping_trigger?: Trigger
  rocket_launch_products?: ItemProductPrototype[] | {}
  send_to_orbit_mode?: SendToOrbitMode
  random_tint_color?: Color
  spoil_level?: Uint8
}
/**
 * https://lua-api.factorio.com/stable/prototypes/Prototype.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "Prototype".
 */
export type Prototype = PrototypeBase & {
  factoriopedia_alternative?: String
}
/**
 * https://lua-api.factorio.com/stable/types/string.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "string".
 */
export type String = string
/**
 * https://lua-api.factorio.com/stable/types/Order.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "Order".
 */
export type Order = String
/**
 * https://lua-api.factorio.com/stable/types/LocalisedString.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "LocalisedString".
 */
export type LocalisedString = String | LocalisedString[] | {}
/**
 * https://lua-api.factorio.com/stable/types/ItemSubGroupID.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "ItemSubGroupID".
 */
export type ItemSubGroupID = String
/**
 * https://lua-api.factorio.com/stable/types/bool.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "bool".
 */
export type Bool = boolean
/**
 * https://lua-api.factorio.com/stable/types/SpaceLocationID.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "SpaceLocationID".
 */
export type SpaceLocationID = String
/**
 * https://lua-api.factorio.com/stable/types/FileName.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "FileName".
 */
export type FileName = String
/**
 * https://lua-api.factorio.com/stable/types/uint32.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "uint32".
 */
export type Uint32 = number
/**
 * https://lua-api.factorio.com/stable/types/float.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "float".
 */
export type Float = number
/**
 * https://lua-api.factorio.com/stable/types/ItemCountType.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "ItemCountType".
 */
export type ItemCountType = Uint32
/**
 * https://lua-api.factorio.com/stable/types/SpriteSizeType.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "SpriteSizeType".
 */
export type SpriteSizeType = Int16
/**
 * https://lua-api.factorio.com/stable/types/int16.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "int16".
 */
export type Int16 = number
/**
 * https://lua-api.factorio.com/stable/types/Color.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "Color".
 */
export type Color =
  | {
      r?: Float
      g?: Float
      b?: Float
      a?: Float
    }
  | [Float, Float, Float]
  | [Float, Float, Float, Float]
/**
 * https://lua-api.factorio.com/stable/types/Vector.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "Vector".
 */
export type Vector =
  | {
      x: Double
      y: Double
    }
  | [Double, Double]
/**
 * https://lua-api.factorio.com/stable/types/double.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "double".
 */
export type Double = number
/**
 * https://lua-api.factorio.com/stable/types/EntityID.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "EntityID".
 */
export type EntityID = String
/**
 * https://lua-api.factorio.com/stable/types/EquipmentID.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "EquipmentID".
 */
export type EquipmentID = String
/**
 * https://lua-api.factorio.com/stable/types/FuelCategoryID.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "FuelCategoryID".
 */
export type FuelCategoryID = String
/**
 * https://lua-api.factorio.com/stable/types/ItemID.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "ItemID".
 */
export type ItemID = String
/**
 * https://lua-api.factorio.com/stable/types/TileID.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "TileID".
 */
export type TileID = String
/**
 * https://lua-api.factorio.com/stable/types/SpriteVariations.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "SpriteVariations".
 */
export type SpriteVariations =
  | {
      sheet: SpriteSheet
    }
  | SpriteSheet
  | Sprite[]
  | {}
/**
 * https://lua-api.factorio.com/stable/types/SpriteSheet.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "SpriteSheet".
 */
export type SpriteSheet = SpriteParameters & {
  layers?: SpriteSheet[] | {}
  variation_count?: Uint32
  repeat_count?: Uint32
  line_length?: Uint32
  filenames?: FileName[] | {}
  lines_per_file?: Uint32
  dice?: SpriteSizeType
  dice_x?: SpriteSizeType
  dice_y?: SpriteSizeType
}
/**
 * https://lua-api.factorio.com/stable/types/SpriteParameters.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "SpriteParameters".
 */
export type SpriteParameters = SpriteSource & {
  priority?: SpritePriority
  flags?: SpriteFlags
  shift?: Vector
  rotate_shift?: Bool
  apply_special_effect?: Bool
  scale?: Double
  draw_as_shadow?: Bool
  draw_as_glow?: Bool
  draw_as_light?: Bool
  mipmap_count?: Uint8
  apply_runtime_tint?: Bool
  tint_as_overlay?: Bool
  invert_colors?: Bool
  tint?: Color
  blend_mode?: BlendMode
  generate_sdf?: Bool
  surface?: SpriteUsageSurfaceHint
  usage?: SpriteUsageHint
}
/**
 * https://lua-api.factorio.com/stable/types/SpritePriority.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "SpritePriority".
 */
export type SpritePriority =
  | 'extra-high-no-scale'
  | 'extra-high'
  | 'high'
  | 'medium'
  | 'low'
  | 'very-low'
  | 'no-atlas'
/**
 * https://lua-api.factorio.com/stable/types/SpriteFlags.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "SpriteFlags".
 */
export type SpriteFlags =
  | (
      | 'no-crop'
      | 'not-compressed'
      | 'always-compressed'
      | 'mipmap'
      | 'linear-minification'
      | 'linear-magnification'
      | 'linear-mip-level'
      | 'alpha-mask'
      | 'no-scale'
      | 'mask'
      | 'icon'
      | 'gui'
      | 'gui-icon'
      | 'light'
      | 'terrain'
      | 'terrain-effect-map'
      | 'reflection-effect-map'
      | 'shadow'
      | 'smoke'
      | 'decal'
      | 'low-object'
      | 'corpse-decay'
      | 'trilinear-filtering'
      | 'group=none'
      | 'group=terrain'
      | 'group=shadow'
      | 'group=smoke'
      | 'group=decal'
      | 'group=low-object'
      | 'group=gui'
      | 'group=icon'
      | 'group=icon-background'
      | 'group=effect-texture'
    )[]
  | {}
/**
 * https://lua-api.factorio.com/stable/types/uint8.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "uint8".
 */
export type Uint8 = number
/**
 * https://lua-api.factorio.com/stable/types/BlendMode.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "BlendMode".
 */
export type BlendMode =
  | 'normal'
  | 'additive'
  | 'additive-soft'
  | 'multiplicative'
  | 'multiplicative-with-alpha'
  | 'overwrite'
/**
 * https://lua-api.factorio.com/stable/types/SpriteUsageSurfaceHint.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "SpriteUsageSurfaceHint".
 */
export type SpriteUsageSurfaceHint =
  | 'any'
  | 'nauvis'
  | 'vulcanus'
  | 'gleba'
  | 'fulgora'
  | 'aquilo'
  | 'space'
/**
 * https://lua-api.factorio.com/stable/types/SpriteUsageHint.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "SpriteUsageHint".
 */
export type SpriteUsageHint =
  | 'any'
  | 'mining'
  | 'tile-artifical'
  | 'corpse-decay'
  | 'enemy'
  | 'player'
  | 'train'
  | 'vehicle'
  | 'explosion'
  | 'rail'
  | 'elevated-rail'
  | 'air'
  | 'remnant'
  | 'decorative'
/**
 * https://lua-api.factorio.com/stable/types/Sprite.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "Sprite".
 */
export type Sprite = SpriteParameters & {
  layers?: Sprite[] | {}
  dice?: SpriteSizeType
  dice_x?: SpriteSizeType
  dice_y?: SpriteSizeType
}
/**
 * https://lua-api.factorio.com/stable/types/ItemPrototypeFlags.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "ItemPrototypeFlags".
 */
export type ItemPrototypeFlags =
  | (
      | 'draw-logistic-overlay'
      | 'excluded-from-trash-unrequested'
      | 'always-show'
      | 'hide-from-bonus-gui'
      | 'hide-from-fuel-tooltip'
      | 'not-stackable'
      | 'primary-place-result'
      | 'mod-openable'
      | 'only-in-cursor'
      | 'spawnable'
      | 'spoil-result'
      | 'ignore-spoil-time-modifier'
    )[]
  | {}
/**
 * https://lua-api.factorio.com/stable/types/Energy.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "Energy".
 */
export type Energy = String
/**
 * https://lua-api.factorio.com/stable/types/Weight.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "Weight".
 */
export type Weight = Double
/**
 * https://lua-api.factorio.com/stable/types/Trigger.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "Trigger".
 */
export type Trigger =
  | (DirectTriggerItem | AreaTriggerItem | LineTriggerItem | ClusterTriggerItem)
  | (DirectTriggerItem | AreaTriggerItem | LineTriggerItem | ClusterTriggerItem)[]
  | {}
/**
 * https://lua-api.factorio.com/stable/types/DirectTriggerItem.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "DirectTriggerItem".
 */
export type DirectTriggerItem = TriggerItem & {
  type: 'direct'
  filter_enabled?: Bool
}
/**
 * https://lua-api.factorio.com/stable/types/EntityPrototypeFlags.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "EntityPrototypeFlags".
 */
export type EntityPrototypeFlags =
  | (
      | 'not-rotatable'
      | 'placeable-neutral'
      | 'placeable-player'
      | 'placeable-enemy'
      | 'placeable-off-grid'
      | 'player-creation'
      | 'building-direction-8-way'
      | 'filter-directions'
      | 'get-by-unit-number'
      | 'breaths-air'
      | 'not-repairable'
      | 'not-on-map'
      | 'not-deconstructable'
      | 'not-blueprintable'
      | 'hide-alt-info'
      | 'no-gap-fill-while-building'
      | 'not-flammable'
      | 'no-automated-item-removal'
      | 'no-automated-item-insertion'
      | 'no-copy-paste'
      | 'not-selectable-in-game'
      | 'not-upgradable'
      | 'not-in-kill-statistics'
      | 'building-direction-16-way'
      | 'snap-to-rail-support-spot'
      | 'not-in-made-in'
    )[]
  | {}
/**
 * https://lua-api.factorio.com/stable/types/TriggerTargetMask.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "TriggerTargetMask".
 */
export type TriggerTargetMask = String[] | {}
/**
 * https://lua-api.factorio.com/stable/types/TriggerDelivery.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "TriggerDelivery".
 */
export type TriggerDelivery =
  | InstantTriggerDelivery
  | ProjectileTriggerDelivery
  | BeamTriggerDelivery
  | StreamTriggerDelivery
  | ArtilleryTriggerDelivery
  | ChainTriggerDelivery
  | DelayedTriggerDelivery
/**
 * https://lua-api.factorio.com/stable/types/InstantTriggerDelivery.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "InstantTriggerDelivery".
 */
export type InstantTriggerDelivery = TriggerDeliveryItem & {
  type: 'instant'
}
/**
 * https://lua-api.factorio.com/stable/types/ProjectileTriggerDelivery.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "ProjectileTriggerDelivery".
 */
export type ProjectileTriggerDelivery = TriggerDeliveryItem & {
  type: 'projectile'
  projectile: EntityID
  starting_speed: Float
  starting_speed_deviation?: Float
  direction_deviation?: Float
  range_deviation?: Float
  max_range?: Double
  min_range?: Double
}
/**
 * https://lua-api.factorio.com/stable/types/BeamTriggerDelivery.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "BeamTriggerDelivery".
 */
export type BeamTriggerDelivery = TriggerDeliveryItem & {
  type: 'beam'
  beam: EntityID
  add_to_shooter?: Bool
  max_length?: Uint32
  duration?: Uint32
  source_offset?: Vector
  destroy_with_source_or_target?: Bool
}
/**
 * https://lua-api.factorio.com/stable/types/StreamTriggerDelivery.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "StreamTriggerDelivery".
 */
export type StreamTriggerDelivery = TriggerDeliveryItem & {
  type: 'stream'
  stream: EntityID
  source_offset?: Vector
}
/**
 * https://lua-api.factorio.com/stable/types/ArtilleryTriggerDelivery.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "ArtilleryTriggerDelivery".
 */
export type ArtilleryTriggerDelivery = TriggerDeliveryItem & {
  type: 'artillery'
  projectile: EntityID
  starting_speed: Float
  starting_speed_deviation?: Float
  direction_deviation?: Float
  range_deviation?: Float
  trigger_fired_artillery?: Bool
}
/**
 * https://lua-api.factorio.com/stable/types/ChainTriggerDelivery.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "ChainTriggerDelivery".
 */
export type ChainTriggerDelivery = TriggerDeliveryItem & {
  type: 'chain'
  chain: ActiveTriggerID
}
/**
 * https://lua-api.factorio.com/stable/types/ActiveTriggerID.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "ActiveTriggerID".
 */
export type ActiveTriggerID = String
/**
 * https://lua-api.factorio.com/stable/types/DelayedTriggerDelivery.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "DelayedTriggerDelivery".
 */
export type DelayedTriggerDelivery = TriggerDeliveryItem & {
  type: 'delayed'
  delayed_trigger: ActiveTriggerID
}
/**
 * https://lua-api.factorio.com/stable/types/ForceCondition.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "ForceCondition".
 */
export type ForceCondition =
  | 'all'
  | 'enemy'
  | 'ally'
  | 'friend'
  | 'not-friend'
  | 'same'
  | 'not-same'
/**
 * https://lua-api.factorio.com/stable/types/AreaTriggerItem.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "AreaTriggerItem".
 */
export type AreaTriggerItem = TriggerItem & {
  type: 'area'
  radius: Double
  trigger_from_target?: Bool
  target_entities?: Bool
  target_enemies?: Bool
  show_in_tooltip?: Bool
  collision_mode?: 'distance-from-collision-box' | 'distance-from-center'
}
/**
 * https://lua-api.factorio.com/stable/types/LineTriggerItem.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "LineTriggerItem".
 */
export type LineTriggerItem = TriggerItem & {
  type: 'line'
  range: Double
  width: Double
  range_effects?: TriggerEffect
}
/**
 * https://lua-api.factorio.com/stable/types/ClusterTriggerItem.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "ClusterTriggerItem".
 */
export type ClusterTriggerItem = TriggerItem & {
  type: 'cluster'
  cluster_count: Uint32
  distance: Float
  distance_deviation?: Float
}
/**
 * https://lua-api.factorio.com/stable/types/uint16.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "uint16".
 */
export type Uint16 = number
/**
 * https://lua-api.factorio.com/stable/types/SendToOrbitMode.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "SendToOrbitMode".
 */
export type SendToOrbitMode = 'not-sendable' | 'manual' | 'automated'
/**
 * https://lua-api.factorio.com/stable/types/AmmoSourceType.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "AmmoSourceType".
 */
export type AmmoSourceType = 'default' | 'player' | 'turret' | 'vehicle'
/**
 * https://lua-api.factorio.com/stable/types/AmmoCategoryID.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "AmmoCategoryID".
 */
export type AmmoCategoryID = String
/**
 * https://lua-api.factorio.com/stable/prototypes/ArmorPrototype.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "ArmorPrototype".
 */
export type ArmorPrototype = ToolPrototype & {
  equipment_grid?: EquipmentGridID
  resistances?: Resistance[] | {}
  inventory_size_bonus?: ItemStackIndex
  provides_flight?: Bool
  collision_box?: BoundingBox
  drawing_box?: BoundingBox
  takeoff_sound?: Sound
  flight_sound?: InterruptibleSound
  landing_sound?: Sound
  steps_sound?: Sound
  moving_sound?: Sound
}
/**
 * https://lua-api.factorio.com/stable/prototypes/ToolPrototype.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "ToolPrototype".
 */
export type ToolPrototype = ItemPrototype & {
  durability?: Double
  durability_description_key?: String
  durability_description_value?: String
  infinite?: Bool
}
/**
 * https://lua-api.factorio.com/stable/types/EquipmentGridID.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "EquipmentGridID".
 */
export type EquipmentGridID = String
/**
 * https://lua-api.factorio.com/stable/types/DamageTypeID.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "DamageTypeID".
 */
export type DamageTypeID = String
/**
 * https://lua-api.factorio.com/stable/types/ItemStackIndex.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "ItemStackIndex".
 */
export type ItemStackIndex = Uint16 | 'dynamic'
/**
 * https://lua-api.factorio.com/stable/types/BoundingBox.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "BoundingBox".
 */
export type BoundingBox =
  | {
      left_top: MapPosition
      right_bottom: MapPosition
      orientation?: RealOrientation
    }
  | [MapPosition, MapPosition]
/**
 * https://lua-api.factorio.com/stable/types/MapPosition.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "MapPosition".
 */
export type MapPosition =
  | {
      x: Double
      y: Double
    }
  | [Double, Double]
/**
 * https://lua-api.factorio.com/stable/types/RealOrientation.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "RealOrientation".
 */
export type RealOrientation = Float
/**
 * https://lua-api.factorio.com/stable/prototypes/AssemblingMachinePrototype.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "AssemblingMachinePrototype".
 */
export type AssemblingMachinePrototype = CraftingMachinePrototype & {
  fixed_recipe?: RecipeID
  fixed_quality?: QualityID
  gui_title_key?: String
  circuit_wire_max_distance?: Double
  draw_copper_wires?: Bool
  draw_circuit_wires?: Bool
  default_recipe_finished_signal?: SignalIDConnector
  default_working_signal?: SignalIDConnector
  enable_logistic_control_behavior?: Bool
  ingredient_count?: Uint8
  /**
   * @minItems 4
   * @maxItems 4
   */
  circuit_connector?: [
    CircuitConnectorDefinition,
    CircuitConnectorDefinition,
    CircuitConnectorDefinition,
    CircuitConnectorDefinition,
  ]
  fluid_boxes_off_when_no_fluid_recipe?: Bool
  disabled_when_recipe_not_researched?: Bool
}
/**
 * https://lua-api.factorio.com/stable/prototypes/CraftingMachinePrototype.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "CraftingMachinePrototype".
 */
export type CraftingMachinePrototype = EntityWithOwnerPrototype & {
  energy_usage: Energy
  crafting_speed: Double
  crafting_categories: RecipeCategoryID[] | {}
  energy_source: EnergySource
  fluid_boxes?: FluidBox[] | {}
  effect_receiver?: EffectReceiver
  module_slots?: ItemStackIndex
  allowed_effects?: EffectTypeLimitation
  allowed_module_categories?: ModuleCategoryID[] | {}
  show_recipe_icon?: Bool
  return_ingredients_on_change?: Bool
  draw_entity_info_icon_background?: Bool
  match_animation_speed_to_activity?: Bool
  show_recipe_icon_on_map?: Bool
  fast_transfer_modules_into_module_slots_only?: Bool
  ignore_output_full?: Bool
  graphics_set?: CraftingMachineGraphicsSet
  graphics_set_flipped?: CraftingMachineGraphicsSet
  perceived_performance?: PerceivedPerformance
  production_health_effect?: ProductionHealthEffect
  trash_inventory_size?: ItemStackIndex
  vector_to_place_result?: Vector
  forced_symmetry?: Mirroring
}
/**
 * https://lua-api.factorio.com/stable/prototypes/EntityWithOwnerPrototype.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "EntityWithOwnerPrototype".
 */
export type EntityWithOwnerPrototype = EntityWithHealthPrototype & {
  is_military_target?: Bool
  allow_run_time_change_of_is_military_target?: Bool
  quality_indicator_scale?: Double
}
/**
 * https://lua-api.factorio.com/stable/prototypes/EntityWithHealthPrototype.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "EntityWithHealthPrototype".
 */
export type EntityWithHealthPrototype = EntityPrototype & {
  max_health?: Float
  healing_per_tick?: Float
  repair_speed_modifier?: Float
  dying_explosion?: ExplosionDefinition | ExplosionDefinition[] | {}
  dying_trigger_effect?: TriggerEffect
  damaged_trigger_effect?: TriggerEffect
  loot?: LootItem[] | {}
  resistances?: Resistance[] | {}
  attack_reaction?: AttackReactionItem | AttackReactionItem[] | {}
  repair_sound?: Sound
  alert_when_damaged?: Bool
  hide_resistances?: Bool
  create_ghost_on_death?: Bool
  random_corpse_variation?: Bool
  integration_patch_render_layer?: RenderLayer
  corpse?: EntityID | EntityID[] | {}
  integration_patch?: Sprite4Way
  overkill_fraction?: Float
}
/**
 * https://lua-api.factorio.com/stable/prototypes/EntityPrototype.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "EntityPrototype".
 */
export type EntityPrototype = Prototype & {
  icons?: IconData[] | {}
  icon?: FileName
  icon_size?: SpriteSizeType
  collision_box?: BoundingBox
  collision_mask?: CollisionMaskConnector
  map_generator_bounding_box?: BoundingBox
  selection_box?: BoundingBox
  drawing_box_vertical_extension?: Double
  sticker_box?: BoundingBox
  hit_visualization_box?: BoundingBox
  trigger_target_mask?: TriggerTargetMask
  flags?: EntityPrototypeFlags
  tile_buildability_rules?: TileBuildabilityRule[] | {}
  minable?: MinableProperties
  surface_conditions?: SurfaceCondition[] | {}
  deconstruction_alternative?: EntityID
  selection_priority?: Uint8
  build_grid_size?: Uint8
  remove_decoratives?: 'automatic' | 'true' | 'false'
  emissions_per_second?: {
    [k: string]: Double
  }
  shooting_cursor_size?: Double
  created_smoke?: CreateTrivialSmokeEffectItem
  working_sound?: WorkingSound
  created_effect?: Trigger
  build_sound?: Sound
  mined_sound?: Sound
  mining_sound?: Sound
  rotated_sound?: Sound
  impact_category?: String
  open_sound?: Sound
  close_sound?: Sound
  placeable_position_visualization?: Sprite
  radius_visualisation_specification?: RadiusVisualisationSpecification
  stateless_visualisation?: StatelessVisualisations
  build_base_evolution_requirement?: Double
  alert_icon_shift?: Vector
  alert_icon_scale?: Float
  fast_replaceable_group?: String
  next_upgrade?: EntityID
  protected_from_tile_building?: Bool
  heating_energy?: Energy
  allow_copy_paste?: Bool
  selectable_in_game?: Bool
  placeable_by?: ItemToPlace | ItemToPlace[] | {}
  remains_when_mined?: EntityID | EntityID[] | {}
  additional_pastable_entities?: EntityID[] | {}
  tile_width?: Int32
  tile_height?: Int32
  diagonal_tile_grid_size?: TilePosition
  autoplace?: AutoplaceSpecification
  map_color?: Color
  friendly_map_color?: Color
  enemy_map_color?: Color
  water_reflection?: WaterReflectionDefinition
  ambient_sounds_group?: EntityID
  ambient_sounds?: WorldAmbientSoundDefinition | WorldAmbientSoundDefinition[] | {}
  icon_draw_specification?: IconDrawSpecification
  icons_positioning?: IconSequencePositioning[] | {}
}
/**
 * https://lua-api.factorio.com/stable/types/SimpleBoundingBox.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "SimpleBoundingBox".
 */
export type SimpleBoundingBox =
  | {
      left_top: MapPosition
      right_bottom: MapPosition
    }
  | [MapPosition, MapPosition]
/**
 * https://lua-api.factorio.com/stable/types/ProductPrototype.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "ProductPrototype".
 */
export type ProductPrototype =
  | ItemProductPrototype
  | FluidProductPrototype
  | ResearchProgressProductPrototype
/**
 * https://lua-api.factorio.com/stable/types/FluidID.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "FluidID".
 */
export type FluidID = String
/**
 * https://lua-api.factorio.com/stable/types/FluidAmount.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "FluidAmount".
 */
export type FluidAmount = Double
/**
 * https://lua-api.factorio.com/stable/types/ParticleID.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "ParticleID".
 */
export type ParticleID = String
/**
 * https://lua-api.factorio.com/stable/types/SurfacePropertyID.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "SurfacePropertyID".
 */
export type SurfacePropertyID = String
/**
 * https://lua-api.factorio.com/stable/types/CreateTrivialSmokeEffectItem.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "CreateTrivialSmokeEffectItem".
 */
export type CreateTrivialSmokeEffectItem = TriggerEffectItem & {
  type: 'create-trivial-smoke'
  smoke_name: TrivialSmokeID
  offset_deviation?: BoundingBox
  offsets?: Vector[] | {}
  initial_height?: Float
  max_radius?: Float
  speed?: Vector
  speed_multiplier?: Float
  speed_multiplier_deviation?: Float
  starting_frame?: Float
  starting_frame_deviation?: Float
  speed_from_center?: Float
  speed_from_center_deviation?: Float
}
/**
 * https://lua-api.factorio.com/stable/types/DamageTypeFilters.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "DamageTypeFilters".
 */
export type DamageTypeFilters =
  | {
      types: DamageTypeID | DamageTypeID[] | {}
      whitelist?: Bool
    }
  | DamageTypeID
  | DamageTypeID[]
  | {}
/**
 * https://lua-api.factorio.com/stable/types/TrivialSmokeID.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "TrivialSmokeID".
 */
export type TrivialSmokeID = String
/**
 * https://lua-api.factorio.com/stable/types/StatelessVisualisations.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "StatelessVisualisations".
 */
export type StatelessVisualisations = StatelessVisualisation | StatelessVisualisation[] | {}
/**
 * https://lua-api.factorio.com/stable/types/AnimationVariations.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "AnimationVariations".
 */
export type AnimationVariations =
  | {
      sheet?: AnimationSheet
      sheets?: AnimationSheet[] | {}
    }
  | Animation
  | Animation[]
  | {}
/**
 * https://lua-api.factorio.com/stable/types/AnimationSheet.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "AnimationSheet".
 */
export type AnimationSheet = AnimationParameters & {
  variation_count: Uint32
  filenames?: FileName[] | {}
  lines_per_file?: Uint32
}
/**
 * https://lua-api.factorio.com/stable/types/AnimationParameters.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "AnimationParameters".
 */
export type AnimationParameters = SpriteParameters & {
  run_mode?: AnimationRunMode
  frame_count?: Uint32
  line_length?: Uint32
  animation_speed?: Float
  max_advance?: Float
  repeat_count?: Uint8
  dice?: Uint8
  dice_x?: Uint8
  dice_y?: Uint8
  frame_sequence?: AnimationFrameSequence
}
/**
 * https://lua-api.factorio.com/stable/types/AnimationRunMode.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "AnimationRunMode".
 */
export type AnimationRunMode = 'forward' | 'backward' | 'forward-then-backward'
/**
 * https://lua-api.factorio.com/stable/types/AnimationFrameSequence.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "AnimationFrameSequence".
 */
export type AnimationFrameSequence = Uint16[] | {}
/**
 * https://lua-api.factorio.com/stable/types/Animation.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "Animation".
 */
export type Animation = AnimationParameters & {
  layers?: Animation[] | {}
  stripes?: Stripe[] | {}
  filenames?: FileName[] | {}
  slice?: Uint32
  lines_per_file?: Uint32
}
/**
 * https://lua-api.factorio.com/stable/types/LightDefinition.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "LightDefinition".
 */
export type LightDefinition =
  | {
      type?: 'basic' | 'oriented'
      picture?: Sprite
      rotation_shift?: RealOrientation
      intensity: Float
      size: Float
      source_orientation_offset?: RealOrientation
      add_perspective?: Bool
      flicker_interval?: Uint8
      flicker_min_modifier?: Float
      flicker_max_modifier?: Float
      offset_flicker?: Bool
      shift?: Vector
      color?: Color
      minimum_darkness?: Float
    }
  | {
      type?: 'basic' | 'oriented'
      picture?: Sprite
      rotation_shift?: RealOrientation
      intensity: Float
      size: Float
      source_orientation_offset?: RealOrientation
      add_perspective?: Bool
      flicker_interval?: Uint8
      flicker_min_modifier?: Float
      flicker_max_modifier?: Float
      offset_flicker?: Bool
      shift?: Vector
      color?: Color
      minimum_darkness?: Float
    }[]
  | {}
/**
 * https://lua-api.factorio.com/stable/types/RangedValue.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "RangedValue".
 */
export type RangedValue = [Float, Float] | Float
/**
 * https://lua-api.factorio.com/stable/types/RenderLayer.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "RenderLayer".
 */
export type RenderLayer =
  | 'zero'
  | 'background-transitions'
  | 'under-tiles'
  | 'decals'
  | 'above-tiles'
  | 'ground-layer-1'
  | 'ground-layer-2'
  | 'ground-layer-3'
  | 'ground-layer-4'
  | 'ground-layer-5'
  | 'lower-radius-visualization'
  | 'radius-visualization'
  | 'transport-belt-integration'
  | 'resource'
  | 'building-smoke'
  | 'rail-stone-path-lower'
  | 'rail-stone-path'
  | 'rail-tie'
  | 'decorative'
  | 'ground-patch'
  | 'ground-patch-higher'
  | 'ground-patch-higher2'
  | 'rail-chain-signal-metal'
  | 'rail-screw'
  | 'rail-metal'
  | 'remnants'
  | 'floor'
  | 'transport-belt'
  | 'transport-belt-endings'
  | 'floor-mechanics-under-corpse'
  | 'corpse'
  | 'floor-mechanics'
  | 'item'
  | 'transport-belt-reader'
  | 'lower-object'
  | 'transport-belt-circuit-connector'
  | 'lower-object-above-shadow'
  | 'lower-object-overlay'
  | 'object-under'
  | 'object'
  | 'cargo-hatch'
  | 'higher-object-under'
  | 'higher-object-above'
  | 'train-stop-top'
  | 'item-in-inserter-hand'
  | 'above-inserters'
  | 'wires'
  | 'under-elevated'
  | 'elevated-rail-stone-path-lower'
  | 'elevated-rail-stone-path'
  | 'elevated-rail-tie'
  | 'elevated-rail-screw'
  | 'elevated-rail-metal'
  | 'elevated-lower-object'
  | 'elevated-object'
  | 'elevated-higher-object'
  | 'fluid-visualization'
  | 'wires-above'
  | 'entity-info-icon'
  | 'entity-info-icon-above'
  | 'explosion'
  | 'projectile'
  | 'smoke'
  | 'air-object'
  | 'air-entity-info-icon'
  | 'light-effect'
  | 'selection-box'
  | 'higher-selection-box'
  | 'collision-selection-box'
  | 'arrow'
  | 'cursor'
/**
 * https://lua-api.factorio.com/stable/types/int32.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "int32".
 */
export type Int32 = number
/**
 * https://lua-api.factorio.com/stable/types/TilePosition.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "TilePosition".
 */
export type TilePosition =
  | {
      x: Int32
      y: Int32
    }
  | [Int32, Int32]
/**
 * https://lua-api.factorio.com/stable/types/AutoplaceControlID.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "AutoplaceControlID".
 */
export type AutoplaceControlID = String
/**
 * https://lua-api.factorio.com/stable/types/NoiseExpression.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "NoiseExpression".
 */
export type NoiseExpression = String | Bool | Double
/**
 * https://lua-api.factorio.com/stable/types/WorldAmbientSoundDefinition.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "WorldAmbientSoundDefinition".
 */
export type WorldAmbientSoundDefinition =
  | {
      sound?: Sound
      radius?: Double
      min_entity_count?: Uint32
      max_entity_count?: Uint32
      entity_to_sound_ratio?: Float
      average_pause_seconds?: Double
    }
  | Sound
/**
 * https://lua-api.factorio.com/stable/types/ExplosionDefinition.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "ExplosionDefinition".
 */
export type ExplosionDefinition =
  | EntityID
  | {
      name: EntityID
      offset?: Vector
    }
/**
 * https://lua-api.factorio.com/stable/types/RecipeCategoryID.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "RecipeCategoryID".
 */
export type RecipeCategoryID = String
/**
 * https://lua-api.factorio.com/stable/types/EnergySource.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "EnergySource".
 */
export type EnergySource =
  | ElectricEnergySource
  | BurnerEnergySource
  | HeatEnergySource
  | FluidEnergySource
  | VoidEnergySource
/**
 * https://lua-api.factorio.com/stable/types/ElectricEnergySource.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "ElectricEnergySource".
 */
export type ElectricEnergySource = BaseEnergySource & {
  type: 'electric'
  buffer_capacity?: Energy
  usage_priority: ElectricUsagePriority
  input_flow_limit?: Energy
  output_flow_limit?: Energy
  drain?: Energy
}
/**
 * https://lua-api.factorio.com/stable/types/ElectricUsagePriority.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "ElectricUsagePriority".
 */
export type ElectricUsagePriority =
  | 'primary-input'
  | 'primary-output'
  | 'secondary-input'
  | 'secondary-output'
  | 'tertiary'
  | 'solar'
  | 'lamp'
/**
 * https://lua-api.factorio.com/stable/types/BurnerEnergySource.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "BurnerEnergySource".
 */
export type BurnerEnergySource = BaseEnergySource & {
  type: 'burner'
  fuel_inventory_size: ItemStackIndex
  burnt_inventory_size?: ItemStackIndex
  smoke?: SmokeSource[] | {}
  light_flicker?: LightFlickeringDefinition
  effectivity?: Double
  burner_usage?: BurnerUsageID
  fuel_categories?: FuelCategoryID[] | {}
  initial_fuel?: ItemID
  initial_fuel_percent?: Double
}
/**
 * https://lua-api.factorio.com/stable/types/BurnerUsageID.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "BurnerUsageID".
 */
export type BurnerUsageID = String
/**
 * https://lua-api.factorio.com/stable/types/HeatEnergySource.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "HeatEnergySource".
 */
export type HeatEnergySource = BaseEnergySource & {
  type: 'heat'
  max_temperature: Double
  specific_heat: Energy
  max_transfer: Energy
  default_temperature?: Double
  min_temperature_gradient?: Double
  min_working_temperature?: Double
  minimum_glow_temperature?: Float
  pipe_covers?: Sprite4Way
  heat_pipe_covers?: Sprite4Way
  heat_picture?: Sprite4Way
  heat_glow?: Sprite4Way
  connections?: HeatConnection[] | {}
}
/**
 * https://lua-api.factorio.com/stable/types/Direction.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "Direction".
 */
export type Direction = 0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10 | 11 | 12 | 13 | 14 | 15
/**
 * https://lua-api.factorio.com/stable/types/FluidEnergySource.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "FluidEnergySource".
 */
export type FluidEnergySource = BaseEnergySource & {
  type: 'fluid'
  fluid_box: FluidBox
  smoke?: SmokeSource[] | {}
  light_flicker?: LightFlickeringDefinition
  effectivity?: Double
  burns_fluid?: Bool
  scale_fluid_usage?: Bool
  destroy_non_fuel_fluid?: Bool
  fluid_usage_per_tick?: FluidAmount
  maximum_temperature?: Float
}
/**
 * https://lua-api.factorio.com/stable/types/FluidBoxLinkedConnectionID.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "FluidBoxLinkedConnectionID".
 */
export type FluidBoxLinkedConnectionID = Uint32
/**
 * https://lua-api.factorio.com/stable/types/int8.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "int8".
 */
export type Int8 = number
/**
 * https://lua-api.factorio.com/stable/types/VoidEnergySource.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "VoidEnergySource".
 */
export type VoidEnergySource = BaseEnergySource & {
  type: 'void'
}
/**
 * https://lua-api.factorio.com/stable/types/EffectValue.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "EffectValue".
 */
export type EffectValue = Float
/**
 * https://lua-api.factorio.com/stable/types/EffectTypeLimitation.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "EffectTypeLimitation".
 */
export type EffectTypeLimitation =
  | ('speed' | 'productivity' | 'consumption' | 'pollution' | 'quality')
  | ('speed' | 'productivity' | 'consumption' | 'pollution' | 'quality')[]
  | {}
/**
 * https://lua-api.factorio.com/stable/types/ModuleCategoryID.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "ModuleCategoryID".
 */
export type ModuleCategoryID = String
/**
 * https://lua-api.factorio.com/stable/types/CraftingMachineGraphicsSet.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "CraftingMachineGraphicsSet".
 */
export type CraftingMachineGraphicsSet = WorkingVisualisations & {
  frozen_patch?: Sprite4Way
  circuit_connector_layer?: RenderLayer | CircuitConnectorLayer
  circuit_connector_secondary_draw_order?: Int8 | CircuitConnectorSecondaryDrawOrder
  animation_progress?: Float
  reset_animation_when_frozen?: Bool
}
/**
 * https://lua-api.factorio.com/stable/types/Mirroring.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "Mirroring".
 */
export type Mirroring = 'horizontal' | 'vertical' | 'diagonal-pos' | 'diagonal-neg'
/**
 * https://lua-api.factorio.com/stable/types/RecipeID.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "RecipeID".
 */
export type RecipeID = String
/**
 * https://lua-api.factorio.com/stable/types/QualityID.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "QualityID".
 */
export type QualityID = String
/**
 * https://lua-api.factorio.com/stable/types/VirtualSignalID.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "VirtualSignalID".
 */
export type VirtualSignalID = String
/**
 * https://lua-api.factorio.com/stable/types/AsteroidChunkID.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "AsteroidChunkID".
 */
export type AsteroidChunkID = String
/**
 * https://lua-api.factorio.com/stable/prototypes/BlueprintItemPrototype.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "BlueprintItemPrototype".
 */
export type BlueprintItemPrototype = SelectionToolPrototype
/**
 * https://lua-api.factorio.com/stable/prototypes/SelectionToolPrototype.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "SelectionToolPrototype".
 */
export type SelectionToolPrototype = ItemWithLabelPrototype & {
  select: SelectionModeData
  alt_select: SelectionModeData
  super_forced_select?: SelectionModeData
  reverse_select?: SelectionModeData
  alt_reverse_select?: SelectionModeData
  always_include_tiles?: Bool
  mouse_cursor?: MouseCursorID
  skip_fog_of_war?: Bool
}
/**
 * https://lua-api.factorio.com/stable/prototypes/ItemWithLabelPrototype.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "ItemWithLabelPrototype".
 */
export type ItemWithLabelPrototype = ItemPrototype & {
  default_label_color?: Color
  draw_label_for_cursor_render?: Bool
}
/**
 * https://lua-api.factorio.com/stable/types/CursorBoxType.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "CursorBoxType".
 */
export type CursorBoxType =
  | 'entity'
  | 'multiplayer-entity'
  | 'electricity'
  | 'copy'
  | 'not-allowed'
  | 'pair'
  | 'logistics'
  | 'train-visualization'
  | 'blueprint-snap-rectangle'
  | 'spidertron-remote-selected'
  | 'spidertron-remote-to-be-selected'
/**
 * https://lua-api.factorio.com/stable/types/SelectionModeFlags.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "SelectionModeFlags".
 */
export type SelectionModeFlags =
  | (
      | 'blueprint'
      | 'deconstruct'
      | 'cancel-deconstruct'
      | 'items'
      | 'trees'
      | 'buildable-type'
      | 'nothing'
      | 'items-to-place'
      | 'any-entity'
      | 'any-tile'
      | 'same-force'
      | 'not-same-force'
      | 'friend'
      | 'enemy'
      | 'upgrade'
      | 'cancel-upgrade'
      | 'downgrade'
      | 'entity-with-health'
      | 'is-military-target'
      | 'entity-with-owner'
      | 'avoid-rolling-stock'
      | 'avoid-vehicle'
      | 'controllable'
      | 'controllable-add'
      | 'controllable-remove'
      | 'entity-ghost'
      | 'tile-ghost'
    )
  | (
      | 'blueprint'
      | 'deconstruct'
      | 'cancel-deconstruct'
      | 'items'
      | 'trees'
      | 'buildable-type'
      | 'nothing'
      | 'items-to-place'
      | 'any-entity'
      | 'any-tile'
      | 'same-force'
      | 'not-same-force'
      | 'friend'
      | 'enemy'
      | 'upgrade'
      | 'cancel-upgrade'
      | 'downgrade'
      | 'entity-with-health'
      | 'is-military-target'
      | 'entity-with-owner'
      | 'avoid-rolling-stock'
      | 'avoid-vehicle'
      | 'controllable'
      | 'controllable-add'
      | 'controllable-remove'
      | 'entity-ghost'
      | 'tile-ghost'
    )[]
  | {}
/**
 * https://lua-api.factorio.com/stable/types/MouseCursorID.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "MouseCursorID".
 */
export type MouseCursorID = String
/**
 * https://lua-api.factorio.com/stable/prototypes/BlueprintBookPrototype.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "BlueprintBookPrototype".
 */
export type BlueprintBookPrototype = ItemWithInventoryPrototype
/**
 * https://lua-api.factorio.com/stable/prototypes/ItemWithInventoryPrototype.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "ItemWithInventoryPrototype".
 */
export type ItemWithInventoryPrototype = ItemWithLabelPrototype & {
  inventory_size: ItemStackIndex
  item_filters?: ItemID[] | {}
  item_group_filters?: ItemGroupID[] | {}
  item_subgroup_filters?: ItemSubGroupID[] | {}
  filter_mode?: 'blacklist' | 'whitelist'
  filter_message_key?: String
}
/**
 * https://lua-api.factorio.com/stable/types/ItemGroupID.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "ItemGroupID".
 */
export type ItemGroupID = String
/**
 * https://lua-api.factorio.com/stable/prototypes/CapsulePrototype.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "CapsulePrototype".
 */
export type CapsulePrototype = ItemPrototype & {
  capsule_action: CapsuleAction
  radius_color?: Color
}
/**
 * https://lua-api.factorio.com/stable/types/CapsuleAction.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "CapsuleAction".
 */
export type CapsuleAction =
  | ThrowCapsuleAction
  | ActivateEquipmentCapsuleAction
  | UseOnSelfCapsuleAction
  | DestroyCliffsCapsuleAction
  | ArtilleryRemoteCapsuleAction
/**
 * https://lua-api.factorio.com/stable/types/AttackParameters.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "AttackParameters".
 */
export type AttackParameters =
  | ProjectileAttackParameters
  | BeamAttackParameters
  | StreamAttackParameters
/**
 * https://lua-api.factorio.com/stable/types/ProjectileAttackParameters.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "ProjectileAttackParameters".
 */
export type ProjectileAttackParameters = BaseAttackParameters & {
  type: 'projectile'
  apply_projection_to_projectile_creation_position?: Bool
  projectile_center?: Vector
  projectile_creation_distance?: Float
  shell_particle?: CircularParticleCreationSpecification
  projectile_creation_parameters?: CircularProjectileCreationSpecification
  projectile_orientation_offset?: RealOrientation
  projectile_creation_offsets?: Vector[] | {}
}
/**
 * https://lua-api.factorio.com/stable/types/RangeMode.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "RangeMode".
 */
export type RangeMode =
  | 'center-to-center'
  | 'bounding-box-to-bounding-box'
  | 'center-to-bounding-box'
/**
 * https://lua-api.factorio.com/stable/types/LayeredSound.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "LayeredSound".
 */
export type LayeredSound =
  | {
      layers: Sound[] | {}
    }
  | Sound
/**
 * https://lua-api.factorio.com/stable/types/RotatedAnimation.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "RotatedAnimation".
 */
export type RotatedAnimation = AnimationParameters & {
  layers?: RotatedAnimation[] | {}
  direction_count?: Uint32
  filenames?: FileName[] | {}
  lines_per_file?: Uint32
  slice?: Uint32
  still_frame?: Uint32
  axially_symmetrical?: Bool
  counterclockwise?: Bool
  middle_orientation?: RealOrientation
  orientation_range?: Float
  apply_projection?: Bool
  stripes?: Stripe[] | {}
}
/**
 * https://lua-api.factorio.com/stable/types/CircularProjectileCreationSpecification.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "CircularProjectileCreationSpecification".
 */
export type CircularProjectileCreationSpecification = [RealOrientation, Vector][] | {}
/**
 * https://lua-api.factorio.com/stable/types/BeamAttackParameters.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "BeamAttackParameters".
 */
export type BeamAttackParameters = BaseAttackParameters & {
  type: 'beam'
  source_direction_count?: Uint32
  source_offset?: Vector
}
/**
 * https://lua-api.factorio.com/stable/types/StreamAttackParameters.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "StreamAttackParameters".
 */
export type StreamAttackParameters = BaseAttackParameters & {
  type: 'stream'
  fluid_consumption?: FluidAmount
  gun_barrel_length?: Float
  projectile_creation_parameters?: CircularProjectileCreationSpecification
  gun_center_shift?:
    | Vector
    | {
        north: Vector
        east?: Vector
        south?: Vector
        west?: Vector
      }
  fluids?:
    | {
        type: FluidID
        damage_modifier?: Double
      }[]
    | {}
}
/**
 * https://lua-api.factorio.com/stable/prototypes/CharacterPrototype.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "CharacterPrototype".
 */
export type CharacterPrototype = EntityWithOwnerPrototype & {
  mining_speed: Double
  running_speed: Double
  distance_per_frame: Double
  maximum_corner_sliding_distance: Double
  heartbeat: Sound
  eat: Sound
  inventory_size: ItemStackIndex
  guns_inventory_size?: ItemStackIndex
  build_distance: Uint32
  drop_item_distance: Uint32
  reach_distance: Uint32
  reach_resource_distance: Double
  item_pickup_distance: Double
  loot_pickup_distance: Double
  ticks_to_keep_gun: Uint32
  ticks_to_keep_aiming_direction: Uint32
  ticks_to_stay_in_combat: Uint32
  damage_hit_tint: Color
  mining_with_tool_particles_animation_positions: Float[] | {}
  running_sound_animation_positions: Float[] | {}
  moving_sound_animation_positions: Float[] | {}
  animations: CharacterArmorAnimation[] | {}
  crafting_categories?: RecipeCategoryID[] | {}
  mining_categories?: ResourceCategoryID[] | {}
  light?: LightDefinition
  flying_bob_speed?: Float
  grounded_landing_search_radius?: Double
  enter_vehicle_distance?: Double
  tool_attack_distance?: Double
  respawn_time?: Uint32
  has_belt_immunity?: Bool
  character_corpse?: EntityID
  flying_collision_mask?: CollisionMaskConnector
  tool_attack_result?: Trigger
  footstep_particle_triggers?: FootstepTriggerEffectList
  synced_footstep_particle_triggers?: unknown
  footprint_particles?: FootprintParticle[] | {}
  left_footprint_offset?: Vector
  right_footprint_offset?: Vector
  right_footprint_frames?: Float[] | {}
  left_footprint_frames?: Float[] | {}
}
/**
 * https://lua-api.factorio.com/stable/types/ResourceCategoryID.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "ResourceCategoryID".
 */
export type ResourceCategoryID = String
/**
 * https://lua-api.factorio.com/stable/types/FootstepTriggerEffectList.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "FootstepTriggerEffectList".
 */
export type FootstepTriggerEffectList = FootstepTriggerEffectItem[] | {}
/**
 * https://lua-api.factorio.com/stable/types/FootstepTriggerEffectItem.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "FootstepTriggerEffectItem".
 */
export type FootstepTriggerEffectItem = CreateParticleTriggerEffectItem & {
  tiles: TileID[] | {}
  actions?: CreateParticleTriggerEffectItem[] | {}
  use_as_default?: Bool
}
/**
 * https://lua-api.factorio.com/stable/types/CreateParticleTriggerEffectItem.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "CreateParticleTriggerEffectItem".
 */
export type CreateParticleTriggerEffectItem = TriggerEffectItem & {
  type: 'create-particle'
  particle_name: ParticleID
  initial_height: Float
  offset_deviation?: SimpleBoundingBox
  tile_collision_mask?: CollisionMaskConnector
  offsets?: Vector[] | {}
  initial_height_deviation?: Float
  initial_vertical_speed?: Float
  initial_vertical_speed_deviation?: Float
  speed_from_center?: Float
  speed_from_center_deviation?: Float
  frame_speed?: Float
  frame_speed_deviation?: Float
  movement_multiplier?: Float
  tail_length?: Uint8
  tail_length_deviation?: Uint8
  tail_width?: Float
  rotate_offsets?: Bool
  only_when_visible?: Bool
  apply_tile_tint?: 'primary' | 'secondary'
  tint?: Color
}
/**
 * https://lua-api.factorio.com/stable/prototypes/CopyPasteToolPrototype.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "CopyPasteToolPrototype".
 */
export type CopyPasteToolPrototype = SelectionToolPrototype & {
  cuts?: Bool
}
/**
 * https://lua-api.factorio.com/stable/prototypes/DeconstructionItemPrototype.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "DeconstructionItemPrototype".
 */
export type DeconstructionItemPrototype = SelectionToolPrototype & {
  entity_filter_count?: ItemStackIndex
  tile_filter_count?: ItemStackIndex
}
/**
 * https://lua-api.factorio.com/stable/prototypes/FluidPrototype.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "FluidPrototype".
 */
export type FluidPrototype = Prototype & {
  icons?: IconData[] | {}
  icon?: FileName
  icon_size?: SpriteSizeType
  default_temperature: Float
  base_color: Color
  flow_color: Color
  visualization_color?: Color
  max_temperature?: Float
  heat_capacity?: Energy
  fuel_value?: Energy
  emissions_multiplier?: Double
  gas_temperature?: Float
  auto_barrel?: Bool
}
/**
 * https://lua-api.factorio.com/stable/prototypes/FurnacePrototype.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "FurnacePrototype".
 */
export type FurnacePrototype = CraftingMachinePrototype & {
  result_inventory_size: ItemStackIndex
  source_inventory_size: ItemStackIndex
  cant_insert_at_source_message_key?: String
  custom_input_slot_tooltip_key?: String
}
/**
 * https://lua-api.factorio.com/stable/prototypes/GunPrototype.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "GunPrototype".
 */
export type GunPrototype = ItemPrototype & {
  attack_parameters: AttackParameters
}
/**
 * https://lua-api.factorio.com/stable/prototypes/ItemWithEntityDataPrototype.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "ItemWithEntityDataPrototype".
 */
export type ItemWithEntityDataPrototype = ItemPrototype & {
  icon_tintable_masks?: IconData[] | {}
  icon_tintable_mask?: FileName
  icon_tintable_mask_size?: SpriteSizeType
  icon_tintables?: IconData[] | {}
  icon_tintable?: FileName
  icon_tintable_size?: SpriteSizeType
}
/**
 * https://lua-api.factorio.com/stable/prototypes/ModulePrototype.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "ModulePrototype".
 */
export type ModulePrototype = ItemPrototype & {
  category: ModuleCategoryID
  tier: Uint32
  effect: Effect
  requires_beacon_alt_mode?: Bool
  art_style?: String
  beacon_tint?: {
    primary?: Color
    secondary?: Color
    tertiary?: Color
    quaternary?: Color
  }
}
/**
 * https://lua-api.factorio.com/stable/prototypes/RailPlannerPrototype.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "RailPlannerPrototype".
 */
export type RailPlannerPrototype = ItemPrototype & {
  rails: EntityID[] | {}
  support?: EntityID
  manual_length_limit?: Double
}
/**
 * https://lua-api.factorio.com/stable/prototypes/RecipePrototype.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "RecipePrototype".
 */
export type RecipePrototype = Prototype & {
  category?: RecipeCategoryID
  crafting_machine_tint?: RecipeTints
  icons?: IconData[] | {}
  icon?: FileName
  icon_size?: SpriteSizeType
  ingredients?: IngredientPrototype[] | {}
  results?: ProductPrototype[] | {}
  main_product?: String
  energy_required?: Double
  emissions_multiplier?: Double
  maximum_productivity?: Double
  requester_paste_multiplier?: Uint32
  overload_multiplier?: Uint32
  allow_inserter_overload?: Bool
  enabled?: Bool
  hide_from_stats?: Bool
  hide_from_player_crafting?: Bool
  allow_decomposition?: Bool
  allow_as_intermediate?: Bool
  allow_intermediates?: Bool
  always_show_made_in?: Bool
  show_amount_in_title?: Bool
  always_show_products?: Bool
  unlock_results?: Bool
  preserve_products_in_machine_output?: Bool
  result_is_always_fresh?: Bool
  allow_consumption_message?: LocalisedString
  allow_speed_message?: LocalisedString
  allow_productivity_message?: LocalisedString
  allow_pollution_message?: LocalisedString
  allow_quality_message?: LocalisedString
  surface_conditions?: SurfaceCondition[] | {}
  hide_from_signal_gui?: Bool
  allow_consumption?: Bool
  allow_speed?: Bool
  allow_productivity?: Bool
  allow_pollution?: Bool
  allow_quality?: Bool
  allowed_module_categories?: ModuleCategoryID[] | {}
  alternative_unlock_methods?: TechnologyID[] | {}
}
/**
 * https://lua-api.factorio.com/stable/types/IngredientPrototype.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "IngredientPrototype".
 */
export type IngredientPrototype = ItemIngredientPrototype | FluidIngredientPrototype
/**
 * https://lua-api.factorio.com/stable/types/TechnologyID.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "TechnologyID".
 */
export type TechnologyID = String
/**
 * https://lua-api.factorio.com/stable/prototypes/RepairToolPrototype.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "RepairToolPrototype".
 */
export type RepairToolPrototype = ToolPrototype & {
  speed: Float
}
/**
 * https://lua-api.factorio.com/stable/prototypes/RocketSiloPrototype.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "RocketSiloPrototype".
 */
export type RocketSiloPrototype = AssemblingMachinePrototype & {
  active_energy_usage: Energy
  lamp_energy_usage: Energy
  rocket_entity: EntityID
  arm_02_right_animation?: Animation
  arm_01_back_animation?: Animation
  arm_03_front_animation?: Animation
  shadow_sprite?: Sprite
  hole_sprite?: Sprite
  hole_light_sprite?: Sprite
  rocket_shadow_overlay_sprite?: Sprite
  rocket_glow_overlay_sprite?: Sprite
  door_back_sprite?: Sprite
  door_front_sprite?: Sprite
  base_day_sprite?: Sprite
  base_front_sprite?: Sprite
  red_lights_back_sprites?: Sprite
  red_lights_front_sprites?: Sprite
  base_frozen?: Sprite
  base_front_frozen?: Sprite
  hole_frozen?: Sprite
  door_back_frozen?: Sprite
  door_front_frozen?: Sprite
  hole_clipping_box: BoundingBox
  door_back_open_offset: Vector
  door_front_open_offset: Vector
  silo_fade_out_start_distance: Double
  silo_fade_out_end_distance: Double
  times_to_blink: Uint8
  light_blinking_speed: Double
  door_opening_speed: Double
  rocket_parts_required: Uint32
  rocket_quick_relaunch_start_offset: Double
  satellite_animation?: Animation
  satellite_shadow_animation?: Animation
  base_night_sprite?: Sprite
  base_light?: LightDefinition
  base_engine_light?: LightDefinition
  rocket_rising_delay?: Uint8
  launch_wait_time?: Uint8
  render_not_in_network_icon?: Bool
  rocket_parts_storage_cap?: Uint32
  alarm_trigger?: TriggerEffect
  clamps_on_trigger?: TriggerEffect
  clamps_off_trigger?: TriggerEffect
  doors_trigger?: TriggerEffect
  raise_rocket_trigger?: TriggerEffect
  alarm_sound?: Sound
  quick_alarm_sound?: Sound
  clamps_on_sound?: Sound
  clamps_off_sound?: Sound
  doors_sound?: Sound
  raise_rocket_sound?: Sound
  to_be_inserted_to_rocket_inventory_size?: ItemStackIndex
  rocket_supply_inventory_size?: ItemStackIndex
  logistic_trash_inventory_size?: ItemStackIndex
  cargo_station_parameters: CargoStationParameters
  launch_to_space_platforms?: Bool
}
/**
 * https://lua-api.factorio.com/stable/prototypes/SpacePlatformStarterPackPrototype.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "SpacePlatformStarterPackPrototype".
 */
export type SpacePlatformStarterPackPrototype = ItemPrototype & {
  trigger?: Trigger
  surface?: SurfaceID
  create_electric_network?: Bool
  tiles?: SpacePlatformTileDefinition[] | {}
  initial_items?: ItemProductPrototype[] | {}
}
/**
 * https://lua-api.factorio.com/stable/types/SurfaceID.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "SurfaceID".
 */
export type SurfaceID = String
/**
 * https://lua-api.factorio.com/stable/prototypes/SpidertronRemotePrototype.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "SpidertronRemotePrototype".
 */
export type SpidertronRemotePrototype = SelectionToolPrototype
/**
 * https://lua-api.factorio.com/stable/prototypes/UpgradeItemPrototype.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "UpgradeItemPrototype".
 */
export type UpgradeItemPrototype = SelectionToolPrototype
/**
 * https://lua-api.factorio.com/stable/types/ActivateImpactTriggerEffectItem.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "ActivateImpactTriggerEffectItem".
 */
export type ActivateImpactTriggerEffectItem = TriggerEffectItem & {
  type: 'activate-impact'
  deliver_category?: String
}
/**
 * https://lua-api.factorio.com/stable/types/ActivatePasteTipTrigger.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "ActivatePasteTipTrigger".
 */
export type ActivatePasteTipTrigger = CountBasedTipTrigger & {
  type: 'activate-paste'
}
/**
 * https://lua-api.factorio.com/stable/types/ActivityBarStyleSpecification.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "ActivityBarStyleSpecification".
 */
export type ActivityBarStyleSpecification = BaseStyleSpecification & {
  type: 'activity_bar_style'
  speed?: Float
  bar_width?: Uint32
  color?: Color
  bar_background?: ElementImageSet
  bar?: ElementImageSet
  bar_size_ratio?: Float
}
/**
 * https://lua-api.factorio.com/stable/types/HorizontalAlign.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "HorizontalAlign".
 */
export type HorizontalAlign = 'left' | 'center' | 'right'
/**
 * https://lua-api.factorio.com/stable/types/VerticalAlign.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "VerticalAlign".
 */
export type VerticalAlign = 'top' | 'center' | 'bottom'
/**
 * https://lua-api.factorio.com/stable/types/StretchRule.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "StretchRule".
 */
export type StretchRule = 'on' | 'off' | 'auto' | 'stretch_and_expand'
/**
 * https://lua-api.factorio.com/stable/types/ElementImageSet.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "ElementImageSet".
 */
export type ElementImageSet =
  | {
      base?: ElementImageSetLayer
      shadow?: ElementImageSetLayer
      glow?: ElementImageSetLayer
    }
  | ElementImageSetLayer
/**
 * https://lua-api.factorio.com/stable/types/ElementImageSetLayer.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "ElementImageSetLayer".
 */
export type ElementImageSetLayer =
  | {
      draw_type?: 'inner' | 'outer'
      type?: 'none' | 'composition'
      tint?: Color
      center?: Sprite
      left?: Sprite
      left_top?: Sprite
      left_bottom?: Sprite
      right?: Sprite
      right_top?: Sprite
      right_bottom?: Sprite
      top?: Sprite
      bottom?: Sprite
      corner_size?: Uint16 | [Uint16, Uint16]
      filename?: FileName
      position?: MapPosition
      load_in_minimal_mode?: Bool
      top_width?: SpriteSizeType
      bottom_width?: SpriteSizeType
      left_height?: SpriteSizeType
      right_height?: SpriteSizeType
      center_width?: SpriteSizeType
      center_height?: SpriteSizeType
      scale?: Double
      top_border?: Int32
      right_border?: Int32
      bottom_border?: Int32
      left_border?: Int32
      border?: Int32
      stretch_monolith_image_to_size?: Bool
      left_tiling?: Bool
      right_tiling?: Bool
      top_tiling?: Bool
      bottom_tiling?: Bool
      center_tiling_vertical?: Bool
      center_tiling_horizontal?: Bool
      overall_tiling_horizontal_size?: Uint16
      overall_tiling_horizontal_spacing?: Uint16
      overall_tiling_horizontal_padding?: Uint16
      overall_tiling_vertical_size?: Uint16
      overall_tiling_vertical_spacing?: Uint16
      overall_tiling_vertical_padding?: Uint16
      custom_horizontal_tiling_sizes?: Uint32[] | {}
      opacity?: Double
      background_blur?: Bool
      background_blur_sigma?: Float
      top_outer_border_shift?: Int32
      bottom_outer_border_shift?: Int32
      right_outer_border_shift?: Int32
      left_outer_border_shift?: Int32
    }
  | Sprite
/**
 * https://lua-api.factorio.com/stable/types/Fade.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "Fade".
 */
export type Fade =
  | (Attenuation & {
      from?: ControlPoint
      to?: ControlPoint
    })
  | AttenuationType
/**
 * https://lua-api.factorio.com/stable/types/AttenuationType.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "AttenuationType".
 */
export type AttenuationType =
  | 'none'
  | 'linear'
  | 'logarithmic'
  | 'exponential'
  | 'cosine'
  | 'S-curve'
/**
 * https://lua-api.factorio.com/stable/types/ControlPoint.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "ControlPoint".
 */
export type ControlPoint =
  | {
      control: Float
      volume_percentage: Float
    }
  | [Float, Float]
/**
 * https://lua-api.factorio.com/stable/types/Vector3D.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "Vector3D".
 */
export type Vector3D =
  | {
      x: Float
      y: Float
      z: Float
    }
  | [Float, Float, Float]
/**
 * https://lua-api.factorio.com/stable/types/RotatedSprite.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "RotatedSprite".
 */
export type RotatedSprite = SpriteParameters & {
  layers?: RotatedSprite[] | {}
  direction_count?: Uint16
  filenames?: FileName[] | {}
  lines_per_file?: Uint64
  dice?: SpriteSizeType
  dice_x?: SpriteSizeType
  dice_y?: SpriteSizeType
  axially_symmetrical?: Bool
  back_equals_front?: Bool
  apply_projection?: Bool
  counterclockwise?: Bool
  line_length?: Uint32
  allow_low_quality_rotation?: Bool
  frames?: RotatedSpriteFrame[] | {}
}
/**
 * https://lua-api.factorio.com/stable/types/uint64.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "uint64".
 */
export type Uint64 = number
/**
 * https://lua-api.factorio.com/stable/types/AirbornePollutantID.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "AirbornePollutantID".
 */
export type AirbornePollutantID = String
/**
 * https://lua-api.factorio.com/stable/types/AlternativeBuildTipTrigger.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "AlternativeBuildTipTrigger".
 */
export type AlternativeBuildTipTrigger = CountBasedTipTrigger & {
  type: 'alternative-build'
}
/**
 * https://lua-api.factorio.com/stable/types/AmbientSoundType.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "AmbientSoundType".
 */
export type AmbientSoundType = 'menu-track' | 'main-track' | 'hero-track' | 'interlude'
/**
 * https://lua-api.factorio.com/stable/types/AmmoDamageModifier.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "AmmoDamageModifier".
 */
export type AmmoDamageModifier = BaseModifier & {
  type: 'ammo-damage'
  infer_icon?: Bool
  use_icon_overlay_constant?: Bool
  ammo_category: AmmoCategoryID
  modifier: Double
}
/**
 * https://lua-api.factorio.com/stable/types/TipTrigger.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "TipTrigger".
 */
export type TipTrigger =
  | OrTipTrigger
  | AndTipTrigger
  | SequenceTipTrigger
  | DependenciesMetTipTrigger
  | TimeElapsedTipTrigger
  | TimeSinceLastTipActivationTipTrigger
  | ResearchTechnologyTipTrigger
  | ResearchWithSciencePackTipTrigger
  | UnlockRecipeTipTrigger
  | CraftItemTipTrigger
  | BuildEntityTipTrigger
  | ManualTransferTipTrigger
  | ModuleTransferTipTrigger
  | StackTransferTipTrigger
  | EntityTransferTipTrigger
  | DropItemTipTrigger
  | SetRecipeTipTrigger
  | SetFilterTipTrigger
  | LimitChestTipTrigger
  | UsePipetteTipTrigger
  | SetLogisticRequestTipTrigger
  | UseConfirmTipTrigger
  | ToggleShowEntityInfoTipTrigger
  | GeneratingPowerTipTrigger
  | LowPowerTipTrigger
  | PasteEntitySettingsTipTrigger
  | FastReplaceTipTrigger
  | GroupAttackTipTrigger
  | FastBeltBendTipTrigger
  | BeltTraverseTipTrigger
  | PlaceEquipmentTipTrigger
  | ClearCursorTipTrigger
  | RotateEntityTipTrigger
  | FlipEntityTipTrigger
  | AlternativeBuildTipTrigger
  | GateOverRailBuildTipTrigger
  | ManualWireDragTipTrigger
  | ShootTipTrigger
  | ChangeSurfaceTipTrigger
  | ApplyStarterPackTipTrigger
  | MineItemByRobotTipTrigger
  | BuildEntityByRobotTipTrigger
  | PlanTrainPathTipTrigger
  | UseRailPlannerTipTrigger
  | ToggleRailLayerTipTrigger
  | EnterVehicleTipTrigger
  | SendSpidertronTipTrigger
  | ActivatePasteTipTrigger
  | KillTipTrigger
/**
 * https://lua-api.factorio.com/stable/types/MapTick.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "MapTick".
 */
export type MapTick = Uint64
/**
 * https://lua-api.factorio.com/stable/types/CraftItemTipTrigger.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "CraftItemTipTrigger".
 */
export type CraftItemTipTrigger = CountBasedTipTrigger & {
  type: 'craft-item'
  item?: ItemID
  event_type:
    | 'crafting-of-single-item-ordered'
    | 'crafting-of-multiple-items-ordered'
    | 'crafting-finished'
  consecutive?: Bool
}
/**
 * https://lua-api.factorio.com/stable/types/BuildEntityTipTrigger.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "BuildEntityTipTrigger".
 */
export type BuildEntityTipTrigger = CountBasedTipTrigger & {
  type: 'build-entity'
  entity?: EntityID
  match_type_only?: Bool
  build_by_dragging?: Bool
  consecutive?: Bool
  linear_power_pole_line?: Bool
  build_in_line?: Bool
  quality?: QualityID
}
/**
 * https://lua-api.factorio.com/stable/types/ManualTransferTipTrigger.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "ManualTransferTipTrigger".
 */
export type ManualTransferTipTrigger = CountBasedTipTrigger & {
  type: 'manual-transfer'
}
/**
 * https://lua-api.factorio.com/stable/types/ModuleTransferTipTrigger.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "ModuleTransferTipTrigger".
 */
export type ModuleTransferTipTrigger = CountBasedTipTrigger & {
  type: 'module-transfer'
  module: ItemID
}
/**
 * https://lua-api.factorio.com/stable/types/StackTransferTipTrigger.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "StackTransferTipTrigger".
 */
export type StackTransferTipTrigger = CountBasedTipTrigger & {
  type: 'stack-transfer'
  transfer?: 'stack' | 'inventory' | 'whole-inventory'
}
/**
 * https://lua-api.factorio.com/stable/types/EntityTransferTipTrigger.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "EntityTransferTipTrigger".
 */
export type EntityTransferTipTrigger = CountBasedTipTrigger & {
  type: 'entity-transfer'
  transfer?: 'in' | 'out'
}
/**
 * https://lua-api.factorio.com/stable/types/DropItemTipTrigger.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "DropItemTipTrigger".
 */
export type DropItemTipTrigger = CountBasedTipTrigger & {
  type: 'drop-item'
  drop_into_entity?: Bool
}
/**
 * https://lua-api.factorio.com/stable/types/SetRecipeTipTrigger.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "SetRecipeTipTrigger".
 */
export type SetRecipeTipTrigger = CountBasedTipTrigger & {
  type: 'set-recipe'
  recipe?: RecipeID
  machine?: EntityID
  consecutive?: Bool
  any_quality?: Bool
  uses_fluid?: Bool
}
/**
 * https://lua-api.factorio.com/stable/types/SetFilterTipTrigger.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "SetFilterTipTrigger".
 */
export type SetFilterTipTrigger = CountBasedTipTrigger & {
  type: 'set-filter'
  entity?: EntityID
  match_type_only?: Bool
  consecutive?: Bool
}
/**
 * https://lua-api.factorio.com/stable/types/LimitChestTipTrigger.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "LimitChestTipTrigger".
 */
export type LimitChestTipTrigger = CountBasedTipTrigger & {
  type: 'limit-chest'
}
/**
 * https://lua-api.factorio.com/stable/types/UsePipetteTipTrigger.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "UsePipetteTipTrigger".
 */
export type UsePipetteTipTrigger = CountBasedTipTrigger & {
  type: 'use-pipette'
}
/**
 * https://lua-api.factorio.com/stable/types/SetLogisticRequestTipTrigger.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "SetLogisticRequestTipTrigger".
 */
export type SetLogisticRequestTipTrigger = CountBasedTipTrigger & {
  type: 'set-logistic-request'
  logistic_chest_only?: Bool
  entity?: EntityID
}
/**
 * https://lua-api.factorio.com/stable/types/UseConfirmTipTrigger.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "UseConfirmTipTrigger".
 */
export type UseConfirmTipTrigger = CountBasedTipTrigger & {
  type: 'use-confirm'
}
/**
 * https://lua-api.factorio.com/stable/types/ToggleShowEntityInfoTipTrigger.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "ToggleShowEntityInfoTipTrigger".
 */
export type ToggleShowEntityInfoTipTrigger = CountBasedTipTrigger & {
  type: 'toggle-show-entity-info'
}
/**
 * https://lua-api.factorio.com/stable/types/GeneratingPowerTipTrigger.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "GeneratingPowerTipTrigger".
 */
export type GeneratingPowerTipTrigger = CountBasedTipTrigger & {
  type: 'generating-power'
}
/**
 * https://lua-api.factorio.com/stable/types/LowPowerTipTrigger.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "LowPowerTipTrigger".
 */
export type LowPowerTipTrigger = CountBasedTipTrigger & {
  type: 'low-power'
}
/**
 * https://lua-api.factorio.com/stable/types/PasteEntitySettingsTipTrigger.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "PasteEntitySettingsTipTrigger".
 */
export type PasteEntitySettingsTipTrigger = CountBasedTipTrigger & {
  type: 'paste-entity-settings'
  source?: EntityID
  target?: EntityID
  match_type_only?: Bool
}
/**
 * https://lua-api.factorio.com/stable/types/FastReplaceTipTrigger.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "FastReplaceTipTrigger".
 */
export type FastReplaceTipTrigger = CountBasedTipTrigger & {
  type: 'fast-replace'
  source?: EntityID
  target?: EntityID
  match_type_only?: Bool
}
/**
 * https://lua-api.factorio.com/stable/types/GroupAttackTipTrigger.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "GroupAttackTipTrigger".
 */
export type GroupAttackTipTrigger = CountBasedTipTrigger & {
  type: 'group-attack'
}
/**
 * https://lua-api.factorio.com/stable/types/FastBeltBendTipTrigger.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "FastBeltBendTipTrigger".
 */
export type FastBeltBendTipTrigger = CountBasedTipTrigger & {
  type: 'fast-belt-bend'
}
/**
 * https://lua-api.factorio.com/stable/types/BeltTraverseTipTrigger.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "BeltTraverseTipTrigger".
 */
export type BeltTraverseTipTrigger = CountBasedTipTrigger & {
  type: 'belt-traverse'
}
/**
 * https://lua-api.factorio.com/stable/types/PlaceEquipmentTipTrigger.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "PlaceEquipmentTipTrigger".
 */
export type PlaceEquipmentTipTrigger = CountBasedTipTrigger & {
  type: 'place-equipment'
  equipment?: EquipmentID
}
/**
 * https://lua-api.factorio.com/stable/types/ClearCursorTipTrigger.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "ClearCursorTipTrigger".
 */
export type ClearCursorTipTrigger = CountBasedTipTrigger & {
  type: 'clear-cursor'
}
/**
 * https://lua-api.factorio.com/stable/types/RotateEntityTipTrigger.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "RotateEntityTipTrigger".
 */
export type RotateEntityTipTrigger = CountBasedTipTrigger & {
  type: 'rotate-entity'
}
/**
 * https://lua-api.factorio.com/stable/types/FlipEntityTipTrigger.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "FlipEntityTipTrigger".
 */
export type FlipEntityTipTrigger = CountBasedTipTrigger & {
  type: 'flip-entity'
}
/**
 * https://lua-api.factorio.com/stable/types/GateOverRailBuildTipTrigger.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "GateOverRailBuildTipTrigger".
 */
export type GateOverRailBuildTipTrigger = CountBasedTipTrigger & {
  type: 'gate-over-rail-build'
}
/**
 * https://lua-api.factorio.com/stable/types/ManualWireDragTipTrigger.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "ManualWireDragTipTrigger".
 */
export type ManualWireDragTipTrigger = CountBasedTipTrigger & {
  type: 'manual-wire-drag'
  source?: EntityID
  target?: EntityID
  match_type_only?: Bool
  wire_type?: 'red' | 'green' | 'copper'
}
/**
 * https://lua-api.factorio.com/stable/types/ShootTipTrigger.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "ShootTipTrigger".
 */
export type ShootTipTrigger = CountBasedTipTrigger & {
  type: 'shoot'
  target?: 'enemy' | 'entity'
}
/**
 * https://lua-api.factorio.com/stable/types/ChangeSurfaceTipTrigger.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "ChangeSurfaceTipTrigger".
 */
export type ChangeSurfaceTipTrigger = CountBasedTipTrigger & {
  type: 'change-surface'
  surface: String
}
/**
 * https://lua-api.factorio.com/stable/types/ApplyStarterPackTipTrigger.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "ApplyStarterPackTipTrigger".
 */
export type ApplyStarterPackTipTrigger = CountBasedTipTrigger & {
  type: 'apply-starter-pack'
}
/**
 * https://lua-api.factorio.com/stable/types/MineItemByRobotTipTrigger.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "MineItemByRobotTipTrigger".
 */
export type MineItemByRobotTipTrigger = CountBasedTipTrigger & {
  type: 'mine-item-by-robot'
}
/**
 * https://lua-api.factorio.com/stable/types/BuildEntityByRobotTipTrigger.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "BuildEntityByRobotTipTrigger".
 */
export type BuildEntityByRobotTipTrigger = CountBasedTipTrigger & {
  type: 'build-entity-by-robot'
}
/**
 * https://lua-api.factorio.com/stable/types/UseRailPlannerTipTrigger.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "UseRailPlannerTipTrigger".
 */
export type UseRailPlannerTipTrigger = CountBasedTipTrigger & {
  type: 'use-rail-planner'
  build_mode: BuildMode
}
/**
 * https://lua-api.factorio.com/stable/types/BuildMode.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "BuildMode".
 */
export type BuildMode = 'normal' | 'forced' | 'superforced'
/**
 * https://lua-api.factorio.com/stable/types/ToggleRailLayerTipTrigger.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "ToggleRailLayerTipTrigger".
 */
export type ToggleRailLayerTipTrigger = CountBasedTipTrigger & {
  type: 'toggle-rail-layer'
}
/**
 * https://lua-api.factorio.com/stable/types/EnterVehicleTipTrigger.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "EnterVehicleTipTrigger".
 */
export type EnterVehicleTipTrigger = CountBasedTipTrigger & {
  type: 'enter-vehicle'
  vehicle?: EntityID
  match_type_only?: Bool
}
/**
 * https://lua-api.factorio.com/stable/types/SendSpidertronTipTrigger.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "SendSpidertronTipTrigger".
 */
export type SendSpidertronTipTrigger = CountBasedTipTrigger & {
  type: 'send-spidertron'
  append?: Bool
}
/**
 * https://lua-api.factorio.com/stable/types/KillTipTrigger.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "KillTipTrigger".
 */
export type KillTipTrigger = CountBasedTipTrigger & {
  type: 'kill'
  entity?: EntityID
  match_type_only?: Bool
  damage_type?: DamageTypeID
}
/**
 * https://lua-api.factorio.com/stable/types/ArtilleryRangeModifier.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "ArtilleryRangeModifier".
 */
export type ArtilleryRangeModifier = SimpleModifier & {
  type: 'artillery-range'
  infer_icon?: Bool
  use_icon_overlay_constant?: Bool
}
/**
 * https://lua-api.factorio.com/stable/types/SimpleModifier.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "SimpleModifier".
 */
export type SimpleModifier = BaseModifier & {
  modifier: Double
}
/**
 * https://lua-api.factorio.com/stable/types/MapGenSize.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "MapGenSize".
 */
export type MapGenSize =
  | Float
  | 'none'
  | 'very-low'
  | 'very-small'
  | 'very-poor'
  | 'low'
  | 'small'
  | 'poor'
  | 'normal'
  | 'medium'
  | 'regular'
  | 'high'
  | 'big'
  | 'good'
  | 'very-high'
  | 'very-big'
  | 'very-good'
/**
 * https://lua-api.factorio.com/stable/types/BeaconDistributionModifier.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "BeaconDistributionModifier".
 */
export type BeaconDistributionModifier = SimpleModifier & {
  type: 'beacon-distribution'
  infer_icon?: Bool
  use_icon_overlay_constant?: Bool
}
/**
 * https://lua-api.factorio.com/stable/types/ModuleTint.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "ModuleTint".
 */
export type ModuleTint = 'primary' | 'secondary' | 'tertiary' | 'quaternary' | 'none'
/**
 * https://lua-api.factorio.com/stable/types/BeltStackSizeBonusModifier.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "BeltStackSizeBonusModifier".
 */
export type BeltStackSizeBonusModifier = SimpleModifier & {
  type: 'belt-stack-size-bonus'
  use_icon_overlay_constant?: Bool
}
/**
 * https://lua-api.factorio.com/stable/types/BoolModifier.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "BoolModifier".
 */
export type BoolModifier = BaseModifier & {
  modifier: Bool
}
/**
 * https://lua-api.factorio.com/stable/types/EntityIDFilter.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "EntityIDFilter".
 */
export type EntityIDFilter =
  | {
      name: EntityID
      quality?: QualityID
      comparator?: ComparatorString
    }
  | EntityID
/**
 * https://lua-api.factorio.com/stable/types/ComparatorString.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "ComparatorString".
 */
export type ComparatorString = '=' | '>' | '<' | '≥' | '>=' | '≤' | '<=' | '≠' | '!='
/**
 * https://lua-api.factorio.com/stable/types/BulkInserterCapacityBonusModifier.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "BulkInserterCapacityBonusModifier".
 */
export type BulkInserterCapacityBonusModifier = SimpleModifier & {
  type: 'bulk-inserter-capacity-bonus'
  infer_icon?: Bool
  use_icon_overlay_constant?: Bool
}
/**
 * https://lua-api.factorio.com/stable/types/ButtonStyleSpecification.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "ButtonStyleSpecification".
 */
export type ButtonStyleSpecification = StyleWithClickableGraphicalSetSpecification & {
  type: 'button_style'
  font?: String
  default_font_color?: Color
  hovered_font_color?: Color
  clicked_font_color?: Color
  disabled_font_color?: Color
  selected_font_color?: Color
  selected_hovered_font_color?: Color
  selected_clicked_font_color?: Color
  strikethrough_color?: Color
  pie_progress_color?: Color
  clicked_vertical_offset?: Uint32
  draw_shadow_under_picture?: Bool
  draw_grayscale_picture?: Bool
  invert_colors_of_picture_when_hovered_or_toggled?: Bool
  invert_colors_of_picture_when_disabled?: Bool
  icon_horizontal_align?: HorizontalAlign
}
/**
 * https://lua-api.factorio.com/stable/types/StyleWithClickableGraphicalSetSpecification.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "StyleWithClickableGraphicalSetSpecification".
 */
export type StyleWithClickableGraphicalSetSpecification = BaseStyleSpecification & {
  default_graphical_set?: ElementImageSet
  hovered_graphical_set?: ElementImageSet
  clicked_graphical_set?: ElementImageSet
  disabled_graphical_set?: ElementImageSet
  selected_graphical_set?: ElementImageSet
  selected_hovered_graphical_set?: ElementImageSet
  game_controller_selected_hovered_graphical_set?: ElementImageSet
  selected_clicked_graphical_set?: ElementImageSet
  left_click_sound?: Sound
}
/**
 * https://lua-api.factorio.com/stable/types/CameraEffectTriggerEffectItem.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "CameraEffectTriggerEffectItem".
 */
export type CameraEffectTriggerEffectItem = TriggerEffectItem & {
  type: 'camera-effect'
  duration: Uint8
  ease_in_duration?: Uint8
  ease_out_duration?: Uint8
  delay?: Uint8
  full_strength_max_distance?: Uint16
  max_distance?: Uint16
  strength?: Float
}
/**
 * https://lua-api.factorio.com/stable/types/CameraStyleSpecification.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "CameraStyleSpecification".
 */
export type CameraStyleSpecification = EmptyWidgetStyleSpecification
/**
 * https://lua-api.factorio.com/stable/types/EmptyWidgetStyleSpecification.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "EmptyWidgetStyleSpecification".
 */
export type EmptyWidgetStyleSpecification = BaseStyleSpecification & {
  type: 'empty_widget_style'
  graphical_set?: ElementImageSet
}
/**
 * https://lua-api.factorio.com/stable/types/LayeredSprite.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "LayeredSprite".
 */
export type LayeredSprite =
  | (Sprite & {
      render_layer: RenderLayer
    })
  | LayeredSprite[]
  | {}
/**
 * https://lua-api.factorio.com/stable/types/LayeredSpriteVariations.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "LayeredSpriteVariations".
 */
export type LayeredSpriteVariations = LayeredSprite[] | {}
/**
 * https://lua-api.factorio.com/stable/types/CargoLandingPadLimitModifier.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "CargoLandingPadLimitModifier".
 */
export type CargoLandingPadLimitModifier = SimpleModifier & {
  type: 'cargo-landing-pad-count'
  use_icon_overlay_constant?: Bool
}
/**
 * https://lua-api.factorio.com/stable/types/ChangeRecipeProductivityModifier.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "ChangeRecipeProductivityModifier".
 */
export type ChangeRecipeProductivityModifier = BaseModifier & {
  type: 'change-recipe-productivity'
  use_icon_overlay_constant?: Bool
  recipe: RecipeID
  change: EffectValue
}
/**
 * https://lua-api.factorio.com/stable/types/CharacterBuildDistanceModifier.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "CharacterBuildDistanceModifier".
 */
export type CharacterBuildDistanceModifier = SimpleModifier & {
  type: 'character-build-distance'
  use_icon_overlay_constant?: Bool
}
/**
 * https://lua-api.factorio.com/stable/types/CharacterCraftingSpeedModifier.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "CharacterCraftingSpeedModifier".
 */
export type CharacterCraftingSpeedModifier = SimpleModifier & {
  type: 'character-crafting-speed'
  use_icon_overlay_constant?: Bool
}
/**
 * https://lua-api.factorio.com/stable/types/CharacterHealthBonusModifier.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "CharacterHealthBonusModifier".
 */
export type CharacterHealthBonusModifier = SimpleModifier & {
  type: 'character-health-bonus'
  use_icon_overlay_constant?: Bool
}
/**
 * https://lua-api.factorio.com/stable/types/CharacterInventorySlotsBonusModifier.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "CharacterInventorySlotsBonusModifier".
 */
export type CharacterInventorySlotsBonusModifier = SimpleModifier & {
  type: 'character-inventory-slots-bonus'
  use_icon_overlay_constant?: Bool
}
/**
 * https://lua-api.factorio.com/stable/types/CharacterItemDropDistanceModifier.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "CharacterItemDropDistanceModifier".
 */
export type CharacterItemDropDistanceModifier = SimpleModifier & {
  type: 'character-item-drop-distance'
  use_icon_overlay_constant?: Bool
}
/**
 * https://lua-api.factorio.com/stable/types/CharacterItemPickupDistanceModifier.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "CharacterItemPickupDistanceModifier".
 */
export type CharacterItemPickupDistanceModifier = SimpleModifier & {
  type: 'character-item-pickup-distance'
  use_icon_overlay_constant?: Bool
}
/**
 * https://lua-api.factorio.com/stable/types/CharacterLogisticRequestsModifier.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "CharacterLogisticRequestsModifier".
 */
export type CharacterLogisticRequestsModifier = BoolModifier & {
  type: 'character-logistic-requests'
  use_icon_overlay_constant?: Bool
}
/**
 * https://lua-api.factorio.com/stable/types/CharacterLogisticTrashSlotsModifier.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "CharacterLogisticTrashSlotsModifier".
 */
export type CharacterLogisticTrashSlotsModifier = SimpleModifier & {
  type: 'character-logistic-trash-slots'
  use_icon_overlay_constant?: Bool
}
/**
 * https://lua-api.factorio.com/stable/types/CharacterLootPickupDistanceModifier.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "CharacterLootPickupDistanceModifier".
 */
export type CharacterLootPickupDistanceModifier = SimpleModifier & {
  type: 'character-loot-pickup-distance'
  use_icon_overlay_constant?: Bool
}
/**
 * https://lua-api.factorio.com/stable/types/CharacterMiningSpeedModifier.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "CharacterMiningSpeedModifier".
 */
export type CharacterMiningSpeedModifier = SimpleModifier & {
  type: 'character-mining-speed'
  use_icon_overlay_constant?: Bool
}
/**
 * https://lua-api.factorio.com/stable/types/CharacterReachDistanceModifier.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "CharacterReachDistanceModifier".
 */
export type CharacterReachDistanceModifier = SimpleModifier & {
  type: 'character-reach-distance'
  use_icon_overlay_constant?: Bool
}
/**
 * https://lua-api.factorio.com/stable/types/CharacterResourceReachDistanceModifier.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "CharacterResourceReachDistanceModifier".
 */
export type CharacterResourceReachDistanceModifier = SimpleModifier & {
  type: 'character-resource-reach-distance'
  use_icon_overlay_constant?: Bool
}
/**
 * https://lua-api.factorio.com/stable/types/CharacterRunningSpeedModifier.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "CharacterRunningSpeedModifier".
 */
export type CharacterRunningSpeedModifier = SimpleModifier & {
  type: 'character-running-speed'
  use_icon_overlay_constant?: Bool
}
/**
 * https://lua-api.factorio.com/stable/types/CheckBoxStyleSpecification.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "CheckBoxStyleSpecification".
 */
export type CheckBoxStyleSpecification = StyleWithClickableGraphicalSetSpecification & {
  type: 'checkbox_style'
  font?: String
  font_color?: Color
  disabled_font_color?: Color
  checkmark?: Sprite
  disabled_checkmark?: Sprite
  intermediate_mark?: Sprite
  text_padding?: Uint32
}
/**
 * https://lua-api.factorio.com/stable/types/CircuitNetworkModifier.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "CircuitNetworkModifier".
 */
export type CircuitNetworkModifier = BoolModifier & {
  type: 'unlock-circuit-network'
  use_icon_overlay_constant?: Bool
}
/**
 * https://lua-api.factorio.com/stable/types/CliffDeconstructionEnabledModifier.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "CliffDeconstructionEnabledModifier".
 */
export type CliffDeconstructionEnabledModifier = BoolModifier & {
  type: 'cliff-deconstruction-enabled'
  use_icon_overlay_constant?: Bool
}
/**
 * https://lua-api.factorio.com/stable/types/CloudEffectStyle.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "CloudEffectStyle".
 */
export type CloudEffectStyle =
  | 'none'
  | 'euclidean'
  | 'manhattan'
  | 'euclidean-outside'
  | 'manhattan-outside'
  | 'horizontal-stripe'
  | 'texture'
  | 'texture-outside'
/**
 * https://lua-api.factorio.com/stable/types/EffectTexture.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "EffectTexture".
 */
export type EffectTexture = SpriteSource
/**
 * https://lua-api.factorio.com/stable/types/CollisionLayerID.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "CollisionLayerID".
 */
export type CollisionLayerID = String
/**
 * https://lua-api.factorio.com/stable/types/ColorLookupTable.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "ColorLookupTable".
 */
export type ColorLookupTable = FileName | 'identity'
/**
 * https://lua-api.factorio.com/stable/types/ColumnWidth.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "ColumnWidth".
 */
export type ColumnWidth = ColumnWidthItem & {
  column: Uint32
}
/**
 * https://lua-api.factorio.com/stable/types/ConsumingType.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "ConsumingType".
 */
export type ConsumingType = 'none' | 'game-only'
/**
 * https://lua-api.factorio.com/stable/types/EffectRelativeTo.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "EffectRelativeTo".
 */
export type EffectRelativeTo = 'ground-origin' | 'pod' | 'spawn-origin'
/**
 * https://lua-api.factorio.com/stable/types/ProcessionLayerInheritanceGroupID.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "ProcessionLayerInheritanceGroupID".
 */
export type ProcessionLayerInheritanceGroupID = String
/**
 * https://lua-api.factorio.com/stable/types/ProcessionGraphicType.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "ProcessionGraphicType".
 */
export type ProcessionGraphicType =
  | 'none'
  | 'sprite'
  | 'animation'
  | 'pod-catalogue'
  | 'location-catalogue'
  | 'hatch-location-catalogue-index'
/**
 * https://lua-api.factorio.com/stable/types/ItemIDFilter.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "ItemIDFilter".
 */
export type ItemIDFilter =
  | {
      name: ItemID
      quality?: QualityID
      comparator?: ComparatorString
    }
  | ItemID
/**
 * https://lua-api.factorio.com/stable/types/CreateAsteroidChunkEffectItem.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "CreateAsteroidChunkEffectItem".
 */
export type CreateAsteroidChunkEffectItem = TriggerEffectItem & {
  type: 'create-asteroid-chunk'
  asteroid_name: AsteroidChunkID
  offset_deviation?: BoundingBox
  offsets?: Vector[] | {}
}
/**
 * https://lua-api.factorio.com/stable/types/CreateDecorativesTriggerEffectItem.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "CreateDecorativesTriggerEffectItem".
 */
export type CreateDecorativesTriggerEffectItem = TriggerEffectItem & {
  type: 'create-decorative'
  decorative: DecorativeID
  spawn_max: Uint16
  spawn_min_radius: Float
  spawn_max_radius: Float
  spawn_min?: Uint16
  radius_curve?: Float
  apply_projection?: Bool
  spread_evenly?: Bool
}
/**
 * https://lua-api.factorio.com/stable/types/DecorativeID.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "DecorativeID".
 */
export type DecorativeID = String
/**
 * https://lua-api.factorio.com/stable/types/CreateEntityTriggerEffectItem.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "CreateEntityTriggerEffectItem".
 */
export type CreateEntityTriggerEffectItem = TriggerEffectItem & {
  type: 'create-entity'
  entity_name: EntityID
  offset_deviation?: BoundingBox
  trigger_created_entity?: Bool
  check_buildability?: Bool
  tile_collision_mask?: CollisionMaskConnector
  offsets?: Vector[] | {}
  as_enemy?: Bool
  ignore_no_enemies_mode?: Bool
  find_non_colliding_position?: Bool
  non_colliding_search_radius?: Double
  non_colliding_search_precision?: Double
  non_colliding_fail_result?: Trigger
  protected?: Bool
}
/**
 * https://lua-api.factorio.com/stable/types/CreateExplosionTriggerEffectItem.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "CreateExplosionTriggerEffectItem".
 */
export type CreateExplosionTriggerEffectItem = CreateEntityTriggerEffectItem & {
  max_movement_distance?: Float
  max_movement_distance_deviation?: Float
  inherit_movement_distance_from_projectile?: Bool
  cycle_while_moving?: Bool
}
/**
 * https://lua-api.factorio.com/stable/types/CreateFireTriggerEffectItem.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "CreateFireTriggerEffectItem".
 */
export type CreateFireTriggerEffectItem = CreateEntityTriggerEffectItem & {
  initial_ground_flame_count?: Uint8
}
/**
 * https://lua-api.factorio.com/stable/types/CreateGhostOnEntityDeathModifier.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "CreateGhostOnEntityDeathModifier".
 */
export type CreateGhostOnEntityDeathModifier = BoolModifier & {
  type: 'create-ghost-on-entity-death'
  use_icon_overlay_constant?: Bool
}
/**
 * https://lua-api.factorio.com/stable/types/CreateSmokeTriggerEffectItem.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "CreateSmokeTriggerEffectItem".
 */
export type CreateSmokeTriggerEffectItem = CreateEntityTriggerEffectItem & {
  initial_height?: Float
  speed?: Vector
  speed_multiplier?: Float
  speed_multiplier_deviation?: Float
  starting_frame?: Float
  starting_frame_deviation?: Float
  speed_from_center?: Float
  speed_from_center_deviation?: Float
}
/**
 * https://lua-api.factorio.com/stable/types/CreateStickerTriggerEffectItem.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "CreateStickerTriggerEffectItem".
 */
export type CreateStickerTriggerEffectItem = TriggerEffectItem & {
  type: 'create-sticker'
  sticker: EntityID
  trigger_created_entity?: Bool
}
/**
 * https://lua-api.factorio.com/stable/types/DamageTileTriggerEffectItem.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "DamageTileTriggerEffectItem".
 */
export type DamageTileTriggerEffectItem = TriggerEffectItem & {
  type: 'damage'
  damage: DamageParameters
  radius?: Float
}
/**
 * https://lua-api.factorio.com/stable/types/DamageTriggerEffectItem.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "DamageTriggerEffectItem".
 */
export type DamageTriggerEffectItem = TriggerEffectItem & {
  type: 'damage'
  damage: DamageParameters
  apply_damage_to_trees?: Bool
  vaporize?: Bool
  use_substitute?: Bool
  lower_distance_threshold?: Uint16
  upper_distance_threshold?: Uint16
  lower_damage_modifier?: Float
  upper_damage_modifier?: Float
}
/**
 * https://lua-api.factorio.com/stable/types/DaytimeColorLookupTable.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "DaytimeColorLookupTable".
 */
export type DaytimeColorLookupTable = [Double, ColorLookupTable][] | {}
/**
 * https://lua-api.factorio.com/stable/types/DeconstructionTimeToLiveModifier.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "DeconstructionTimeToLiveModifier".
 */
export type DeconstructionTimeToLiveModifier = SimpleModifier & {
  type: 'deconstruction-time-to-live'
  use_icon_overlay_constant?: Bool
}
/**
 * https://lua-api.factorio.com/stable/types/DestroyCliffsTriggerEffectItem.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "DestroyCliffsTriggerEffectItem".
 */
export type DestroyCliffsTriggerEffectItem = TriggerEffectItem & {
  type: 'destroy-cliffs'
  radius: Float
  explosion_at_trigger?: EntityID
  explosion_at_cliff?: EntityID
}
/**
 * https://lua-api.factorio.com/stable/types/DestroyDecorativesTriggerEffectItem.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "DestroyDecorativesTriggerEffectItem".
 */
export type DestroyDecorativesTriggerEffectItem = TriggerEffectItem & {
  type: 'destroy-decoratives'
  radius: Float
  from_render_layer?: RenderLayer
  to_render_layer?: RenderLayer
  include_soft_decoratives?: Bool
  include_decals?: Bool
  invoke_decorative_trigger?: Bool
  decoratives_with_trigger_only?: Bool
}
/**
 * https://lua-api.factorio.com/stable/types/DirectionString.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "DirectionString".
 */
export type DirectionString =
  | 'north'
  | 'north_north_east'
  | 'north_east'
  | 'east_north_east'
  | 'east'
  | 'east_south_east'
  | 'south_east'
  | 'south_south_east'
  | 'south'
  | 'south_south_west'
  | 'south_west'
  | 'west_south_west'
  | 'west'
  | 'west_north_west'
  | 'north_west'
  | 'north_north_west'
/**
 * https://lua-api.factorio.com/stable/types/DoubleSliderStyleSpecification.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "DoubleSliderStyleSpecification".
 */
export type DoubleSliderStyleSpecification = SliderStyleSpecification
/**
 * https://lua-api.factorio.com/stable/types/SliderStyleSpecification.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "SliderStyleSpecification".
 */
export type SliderStyleSpecification = BaseStyleSpecification & {
  type: 'slider_style'
  full_bar?: ElementImageSet
  full_bar_disabled?: ElementImageSet
  empty_bar?: ElementImageSet
  empty_bar_disabled?: ElementImageSet
  draw_notches?: Bool
  notch?: ElementImageSet
  button?: ButtonStyleSpecification
  high_button?: ButtonStyleSpecification
}
/**
 * https://lua-api.factorio.com/stable/types/DropDownStyleSpecification.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "DropDownStyleSpecification".
 */
export type DropDownStyleSpecification = BaseStyleSpecification & {
  type: 'dropdown_style'
  button_style?: ButtonStyleSpecification
  icon?: Sprite
  list_box_style?: ListBoxStyleSpecification
  selector_and_title_spacing?: Int16
  opened_sound?: Sound
}
/**
 * https://lua-api.factorio.com/stable/types/ListBoxStyleSpecification.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "ListBoxStyleSpecification".
 */
export type ListBoxStyleSpecification = BaseStyleSpecification & {
  type: 'list_box_style'
  item_style?: ButtonStyleSpecification
  scroll_pane_style?: ScrollPaneStyleSpecification
}
/**
 * https://lua-api.factorio.com/stable/types/ScrollPaneStyleSpecification.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "ScrollPaneStyleSpecification".
 */
export type ScrollPaneStyleSpecification = BaseStyleSpecification & {
  type: 'scroll_pane_style'
  vertical_flow_style?: VerticalFlowStyleSpecification
  horizontal_scrollbar_style?: HorizontalScrollBarStyleSpecification
  vertical_scrollbar_style?: VerticalScrollBarStyleSpecification
  graphical_set?: ElementImageSet
  background_graphical_set?: ElementImageSet
  extra_padding_when_activated?: Int32
  extra_top_padding_when_activated?: Int32
  extra_bottom_padding_when_activated?: Int32
  extra_left_padding_when_activated?: Int32
  extra_right_padding_when_activated?: Int32
  extra_margin_when_activated?: Int32
  extra_top_margin_when_activated?: Int32
  extra_bottom_margin_when_activated?: Int32
  extra_left_margin_when_activated?: Int32
  extra_right_margin_when_activated?: Int32
  dont_force_clipping_rect_for_contents?: Bool
  always_draw_borders?: Bool
  scrollbars_go_outside?: Bool
}
/**
 * https://lua-api.factorio.com/stable/types/VerticalFlowStyleSpecification.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "VerticalFlowStyleSpecification".
 */
export type VerticalFlowStyleSpecification = BaseStyleSpecification & {
  type: 'vertical_flow_style'
  vertical_spacing?: Int32
}
/**
 * https://lua-api.factorio.com/stable/types/HorizontalScrollBarStyleSpecification.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "HorizontalScrollBarStyleSpecification".
 */
export type HorizontalScrollBarStyleSpecification = ScrollBarStyleSpecification & {
  type: 'horizontal_scrollbar_style'
}
/**
 * https://lua-api.factorio.com/stable/types/ScrollBarStyleSpecification.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "ScrollBarStyleSpecification".
 */
export type ScrollBarStyleSpecification = BaseStyleSpecification & {
  background_graphical_set?: ElementImageSet
  thumb_button_style?: ButtonStyleSpecification
}
/**
 * https://lua-api.factorio.com/stable/types/VerticalScrollBarStyleSpecification.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "VerticalScrollBarStyleSpecification".
 */
export type VerticalScrollBarStyleSpecification = ScrollBarStyleSpecification & {
  type: 'vertical_scrollbar_style'
}
/**
 * https://lua-api.factorio.com/stable/types/EffectVariation.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "EffectVariation".
 */
export type EffectVariation = 'lava' | 'wetland-water' | 'oil' | 'water'
/**
 * https://lua-api.factorio.com/stable/types/EntityStatus.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "EntityStatus".
 */
export type EntityStatus =
  | 'working'
  | 'normal'
  | 'ghost'
  | 'not-plugged-in-electric-network'
  | 'networks-connected'
  | 'networks-disconnected'
  | 'no-ammo'
  | 'waiting-for-target-to-be-built'
  | 'waiting-for-train'
  | 'no-power'
  | 'low-temperature'
  | 'charging'
  | 'discharging'
  | 'fully-charged'
  | 'no-fuel'
  | 'no-food'
  | 'out-of-logistic-network'
  | 'no-recipe'
  | 'no-ingredients'
  | 'no-input-fluid'
  | 'no-research-in-progress'
  | 'no-minable-resources'
  | 'low-input-fluid'
  | 'low-power'
  | 'not-connected-to-rail'
  | 'cant-divide-segments'
  | 'recharging-after-power-outage'
  | 'no-modules-to-transmit'
  | 'disabled-by-control-behavior'
  | 'opened-by-circuit-network'
  | 'closed-by-circuit-network'
  | 'disabled-by-script'
  | 'disabled'
  | 'turned-off-during-daytime'
  | 'fluid-ingredient-shortage'
  | 'item-ingredient-shortage'
  | 'full-output'
  | 'not-enough-space-in-output'
  | 'full-burnt-result-output'
  | 'marked-for-deconstruction'
  | 'missing-required-fluid'
  | 'missing-science-packs'
  | 'waiting-for-source-items'
  | 'waiting-for-space-in-destination'
  | 'preparing-rocket-for-launch'
  | 'waiting-to-launch-rocket'
  | 'waiting-for-space-in-platform-hub'
  | 'launching-rocket'
  | 'thrust-not-required'
  | 'not-enough-thrust'
  | 'on-the-way'
  | 'waiting-in-orbit'
  | 'waiting-for-rocket-to-arrive'
  | 'no-path'
  | 'broken'
  | 'none'
  | 'frozen'
  | 'paused'
  | 'not-connected-to-hub-or-pad'
  | 'computing-navigation'
  | 'no-filter'
  | 'waiting-at-stop'
  | 'destination-stop-full'
  | 'pipeline-overextended'
  | 'no-spot-seedable-by-inputs'
  | 'waiting-for-plants-to-grow'
  | 'recipe-not-researched'
/**
 * https://lua-api.factorio.com/stable/types/EquipmentCategoryID.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "EquipmentCategoryID".
 */
export type EquipmentCategoryID = String
/**
 * https://lua-api.factorio.com/stable/types/FlowStyleSpecification.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "FlowStyleSpecification".
 */
export type FlowStyleSpecification = BaseStyleSpecification & {
  type: 'flow_style'
  max_on_row?: Int32
  horizontal_spacing?: Int32
  vertical_spacing?: Int32
}
/**
 * https://lua-api.factorio.com/stable/types/FollowerRobotLifetimeModifier.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "FollowerRobotLifetimeModifier".
 */
export type FollowerRobotLifetimeModifier = SimpleModifier & {
  type: 'follower-robot-lifetime'
  infer_icon?: Bool
  use_icon_overlay_constant?: Bool
}
/**
 * https://lua-api.factorio.com/stable/types/FrameStyleSpecification.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "FrameStyleSpecification".
 */
export type FrameStyleSpecification = BaseStyleSpecification & {
  type: 'frame_style'
  graphical_set?: ElementImageSet
  horizontal_flow_style?: HorizontalFlowStyleSpecification
  vertical_flow_style?: VerticalFlowStyleSpecification
  header_flow_style?: HorizontalFlowStyleSpecification
  header_filler_style?: EmptyWidgetStyleSpecification
  title_style?: LabelStyleSpecification
  use_header_filler?: Bool
  drag_by_title?: Bool
  header_background?: ElementImageSet
  background_graphical_set?: ElementImageSet
  border?: BorderImageSet
}
/**
 * https://lua-api.factorio.com/stable/types/HorizontalFlowStyleSpecification.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "HorizontalFlowStyleSpecification".
 */
export type HorizontalFlowStyleSpecification = BaseStyleSpecification & {
  type: 'horizontal_flow_style'
  horizontal_spacing?: Int32
}
/**
 * https://lua-api.factorio.com/stable/types/LabelStyleSpecification.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "LabelStyleSpecification".
 */
export type LabelStyleSpecification = BaseStyleSpecification & {
  type: 'label_style'
  font?: String
  font_color?: Color
  hovered_font_color?: Color
  game_controller_hovered_font_color?: Color
  clicked_font_color?: Color
  disabled_font_color?: Color
  parent_hovered_font_color?: Color
  rich_text_setting?: RichTextSetting
  single_line?: Bool
  underlined?: Bool
  rich_text_highlight_error_color?: Color
  rich_text_highlight_warning_color?: Color
  rich_text_highlight_ok_color?: Color
}
/**
 * https://lua-api.factorio.com/stable/types/RichTextSetting.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "RichTextSetting".
 */
export type RichTextSetting = 'enabled' | 'disabled' | 'highlight'
/**
 * https://lua-api.factorio.com/stable/types/NeighbourConnectableConnectionCategory.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "NeighbourConnectableConnectionCategory".
 */
export type NeighbourConnectableConnectionCategory = String
/**
 * https://lua-api.factorio.com/stable/types/GiveItemModifier.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "GiveItemModifier".
 */
export type GiveItemModifier = BaseModifier & {
  type: 'give-item'
  use_icon_overlay_constant?: Bool
  item: ItemID
  quality?: QualityID
  count?: ItemCountType
}
/**
 * https://lua-api.factorio.com/stable/types/Vector4f.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "Vector4f".
 */
export type Vector4F =
  | {
      x: Float
      y: Float
      z: Float
      w: Float
    }
  | [Float, Float, Float, Float]
/**
 * https://lua-api.factorio.com/stable/types/GlowStyleSpecification.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "GlowStyleSpecification".
 */
export type GlowStyleSpecification = BaseStyleSpecification & {
  type: 'glow_style'
  image_set?: ElementImageSet
}
/**
 * https://lua-api.factorio.com/stable/types/GraphStyleSpecification.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "GraphStyleSpecification".
 */
export type GraphStyleSpecification = BaseStyleSpecification & {
  type: 'graph_style'
  background_color?: Color
  line_colors?: Color[] | {}
  horizontal_label_style?: LabelStyleSpecification
  vertical_label_style?: LabelStyleSpecification
  minimal_horizontal_label_spacing?: Uint32
  minimal_vertical_label_spacing?: Uint32
  horizontal_labels_margin?: Uint32
  vertical_labels_margin?: Uint32
  graph_top_margin?: Uint32
  graph_right_margin?: Uint32
  data_line_highlight_distance?: Uint32
  selection_dot_radius?: Uint32
  grid_lines_color?: Color
  guide_lines_color?: Color
  font?: String
}
/**
 * https://lua-api.factorio.com/stable/types/GunSpeedModifier.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "GunSpeedModifier".
 */
export type GunSpeedModifier = BaseModifier & {
  type: 'gun-speed'
  infer_icon?: Bool
  use_icon_overlay_constant?: Bool
  ammo_category: AmmoCategoryID
  modifier: Double
}
/**
 * https://lua-api.factorio.com/stable/types/ImageStyleSpecification.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "ImageStyleSpecification".
 */
export type ImageStyleSpecification = BaseStyleSpecification & {
  type: 'image_style'
  graphical_set?: ElementImageSet
  stretch_image_to_widget_size?: Bool
  invert_colors_of_picture_when_hovered_or_toggled?: Bool
}
/**
 * https://lua-api.factorio.com/stable/types/InsertItemTriggerEffectItem.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "InsertItemTriggerEffectItem".
 */
export type InsertItemTriggerEffectItem = TriggerEffectItem & {
  type: 'insert-item'
  item: ItemID
  quality?: QualityID
  count?: ItemCountType
}
/**
 * https://lua-api.factorio.com/stable/types/InserterStackSizeBonusModifier.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "InserterStackSizeBonusModifier".
 */
export type InserterStackSizeBonusModifier = SimpleModifier & {
  type: 'inserter-stack-size-bonus'
  infer_icon?: Bool
  use_icon_overlay_constant?: Bool
}
/**
 * https://lua-api.factorio.com/stable/types/InvokeTileEffectTriggerEffectItem.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "InvokeTileEffectTriggerEffectItem".
 */
export type InvokeTileEffectTriggerEffectItem = TriggerEffectItem & {
  type: 'invoke-tile-trigger'
  tile_collision_mask?: CollisionMaskConnector
}
/**
 * https://lua-api.factorio.com/stable/types/LaboratoryProductivityModifier.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "LaboratoryProductivityModifier".
 */
export type LaboratoryProductivityModifier = SimpleModifier & {
  type: 'laboratory-productivity'
  infer_icon?: Bool
  use_icon_overlay_constant?: Bool
}
/**
 * https://lua-api.factorio.com/stable/types/LaboratorySpeedModifier.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "LaboratorySpeedModifier".
 */
export type LaboratorySpeedModifier = SimpleModifier & {
  type: 'laboratory-speed'
  infer_icon?: Bool
  use_icon_overlay_constant?: Bool
}
/**
 * https://lua-api.factorio.com/stable/types/LightningPriorityRule.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "LightningPriorityRule".
 */
export type LightningPriorityRule = LightningRuleBase & {
  priority_bonus: Int32
}
/**
 * https://lua-api.factorio.com/stable/types/LineStyleSpecification.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "LineStyleSpecification".
 */
export type LineStyleSpecification = BaseStyleSpecification & {
  type: 'line_style'
  border?: BorderImageSet
}
/**
 * https://lua-api.factorio.com/stable/types/LinkedGameControl.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "LinkedGameControl".
 */
export type LinkedGameControl =
  | 'move-up'
  | 'move-down'
  | 'move-left'
  | 'move-right'
  | 'open-character-gui'
  | 'open-gui'
  | 'confirm-gui'
  | 'toggle-free-cursor'
  | 'mine'
  | 'build'
  | 'build-ghost'
  | 'super-forced-build'
  | 'clear-cursor'
  | 'pipette'
  | 'rotate'
  | 'reverse-rotate'
  | 'flip-horizontal'
  | 'flip-vertical'
  | 'pick-items'
  | 'drop-cursor'
  | 'show-info'
  | 'shoot-enemy'
  | 'shoot-selected'
  | 'next-weapon'
  | 'toggle-driving'
  | 'zoom-in'
  | 'zoom-out'
  | 'use-item'
  | 'alternative-use-item'
  | 'toggle-console'
  | 'copy-entity-settings'
  | 'paste-entity-settings'
  | 'controller-gui-logistics-tab'
  | 'controller-gui-character-tab'
  | 'controller-gui-crafting-tab'
  | 'toggle-rail-layer'
  | 'select-for-blueprint'
  | 'select-for-cancel-deconstruct'
  | 'select-for-super-forced-deconstruct'
  | 'reverse-select'
  | 'alt-reverse-select'
  | 'deselect'
  | 'cycle-blueprint-forwards'
  | 'cycle-blueprint-backwards'
  | 'focus-search'
  | 'larger-terrain-building-area'
  | 'smaller-terrain-building-area'
  | 'remove-pole-cables'
  | 'build-with-obstacle-avoidance'
  | 'add-station'
  | 'add-temporary-station'
  | 'rename-all'
  | 'fast-wait-condition'
  | 'drag-map'
  | 'move-tag'
  | 'place-in-chat'
  | 'place-ping'
  | 'pin'
  | 'activate-tooltip'
  | 'next-surface'
  | 'previous-surface'
  | 'cycle-quality-up'
  | 'cycle-quality-down'
  | 'craft'
  | 'craft-5'
  | 'craft-all'
  | 'cancel-craft'
  | 'cancel-craft-5'
  | 'cancel-craft-all'
  | 'pick-item'
  | 'stack-transfer'
  | 'inventory-transfer'
  | 'fast-entity-transfer'
  | 'cursor-split'
  | 'stack-split'
  | 'inventory-split'
  | 'fast-entity-split'
  | 'toggle-filter'
  | 'open-item'
  | 'copy-inventory-filter'
  | 'paste-inventory-filter'
  | 'show-quick-panel'
  | 'next-quick-panel-page'
  | 'previous-quick-panel-page'
  | 'next-quick-panel-tab'
  | 'previous-quick-panel-tab'
  | 'rotate-active-quick-bars'
  | 'next-active-quick-bar'
  | 'previous-active-quick-bar'
  | 'quick-bar-button-1'
  | 'quick-bar-button-2'
  | 'quick-bar-button-3'
  | 'quick-bar-button-4'
  | 'quick-bar-button-5'
  | 'quick-bar-button-6'
  | 'quick-bar-button-7'
  | 'quick-bar-button-8'
  | 'quick-bar-button-9'
  | 'quick-bar-button-10'
  | 'quick-bar-button-1-secondary'
  | 'quick-bar-button-2-secondary'
  | 'quick-bar-button-3-secondary'
  | 'quick-bar-button-4-secondary'
  | 'quick-bar-button-5-secondary'
  | 'quick-bar-button-6-secondary'
  | 'quick-bar-button-7-secondary'
  | 'quick-bar-button-8-secondary'
  | 'quick-bar-button-9-secondary'
  | 'quick-bar-button-10-secondary'
  | 'action-bar-select-page-1'
  | 'action-bar-select-page-2'
  | 'action-bar-select-page-3'
  | 'action-bar-select-page-4'
  | 'action-bar-select-page-5'
  | 'action-bar-select-page-6'
  | 'action-bar-select-page-7'
  | 'action-bar-select-page-8'
  | 'action-bar-select-page-9'
  | 'action-bar-select-page-10'
  | 'copy'
  | 'cut'
  | 'paste'
  | 'cycle-clipboard-forwards'
  | 'cycle-clipboard-backwards'
  | 'undo'
  | 'redo'
  | 'toggle-menu'
  | 'toggle-map'
  | 'close-menu'
  | 'open-technology-gui'
  | 'production-statistics'
  | 'logistic-networks'
  | 'toggle-blueprint-library'
  | 'open-trains-gui'
  | 'open-factoriopedia'
  | 'back'
  | 'forward'
  | 'pause-game'
  | 'confirm-message'
  | 'previous-technology'
  | 'previous-mod'
  | 'connect-train'
  | 'disconnect-train'
  | 'submit-feedback'
  | 'editor-next-variation'
  | 'editor-previous-variation'
  | 'editor-clone-item'
  | 'editor-delete-item'
  | 'editor-toggle-pause'
  | 'editor-tick-once'
  | 'editor-speed-up'
  | 'editor-speed-down'
  | 'editor-reset-speed'
  | 'editor-set-clone-brush-source'
  | 'editor-set-clone-brush-destination'
  | 'editor-switch-to-surface'
  | 'editor-remove-scripting-object'
  | 'debug-toggle-atlas-gui'
  | 'debug-toggle-gui-visibility'
  | 'debug-toggle-debug-settings'
  | 'debug-toggle-basic'
  | 'debug-reset-zoom'
  | 'debug-reset-zoom-2x'
  | 'toggle-gui-debug'
  | 'toggle-gui-style-view'
  | 'toggle-gui-shadows'
  | 'toggle-gui-glows'
  | 'open-prototypes-gui'
  | 'open-prototype-explorer-gui'
  | 'increase-ui-scale'
  | 'decrease-ui-scale'
  | 'reset-ui-scale'
  | 'slash-editor'
  | 'toggle-entity'
  | 'next-player-in-replay'
  | 'move-blueprint-absolute-grid-up'
  | 'move-blueprint-absolute-grid-down'
  | 'move-blueprint-absolute-grid-left'
  | 'move-blueprint-absolute-grid-right'
  | 'move-blueprint-entities-up'
  | 'move-blueprint-entities-down'
  | 'move-blueprint-entities-left'
  | 'move-blueprint-entities-right'
  | 'play-next-track'
  | 'play-previous-track'
  | 'pause-resume-music'
/**
 * https://lua-api.factorio.com/stable/types/LogisticFilterIndex.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "LogisticFilterIndex".
 */
export type LogisticFilterIndex = Uint16
/**
 * https://lua-api.factorio.com/stable/types/MaterialAmountType.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "MaterialAmountType".
 */
export type MaterialAmountType = Double
/**
 * https://lua-api.factorio.com/stable/types/MathExpression.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "MathExpression".
 */
export type MathExpression = String
/**
 * https://lua-api.factorio.com/stable/types/MaxFailedAttemptsPerTickPerConstructionQueueModifier.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "MaxFailedAttemptsPerTickPerConstructionQueueModifier".
 */
export type MaxFailedAttemptsPerTickPerConstructionQueueModifier = SimpleModifier & {
  type: 'max-failed-attempts-per-tick-per-construction-queue'
  use_icon_overlay_constant?: Bool
}
/**
 * https://lua-api.factorio.com/stable/types/MaxSuccessfulAttemptsPerTickPerConstructionQueueModifier.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "MaxSuccessfulAttemptsPerTickPerConstructionQueueModifier".
 */
export type MaxSuccessfulAttemptsPerTickPerConstructionQueueModifier = SimpleModifier & {
  type: 'max-successful-attempts-per-tick-per-construction-queue'
  use_icon_overlay_constant?: Bool
}
/**
 * https://lua-api.factorio.com/stable/types/MaximumFollowingRobotsCountModifier.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "MaximumFollowingRobotsCountModifier".
 */
export type MaximumFollowingRobotsCountModifier = SimpleModifier & {
  type: 'maximum-following-robots-count'
  infer_icon?: Bool
  use_icon_overlay_constant?: Bool
}
/**
 * https://lua-api.factorio.com/stable/types/MinimapStyleSpecification.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "MinimapStyleSpecification".
 */
export type MinimapStyleSpecification = EmptyWidgetStyleSpecification
/**
 * https://lua-api.factorio.com/stable/types/MiningDrillGraphicsSet.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "MiningDrillGraphicsSet".
 */
export type MiningDrillGraphicsSet = WorkingVisualisations & {
  frozen_patch?: Sprite4Way
  reset_animation_when_frozen?: Bool
  circuit_connector_layer?: RenderLayer | CircuitConnectorLayer
  circuit_connector_secondary_draw_order?: Int8 | CircuitConnectorSecondaryDrawOrder
  drilling_vertical_movement_duration?: Uint16
  animation_progress?: Float
}
/**
 * https://lua-api.factorio.com/stable/types/MiningDrillProductivityBonusModifier.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "MiningDrillProductivityBonusModifier".
 */
export type MiningDrillProductivityBonusModifier = SimpleModifier & {
  type: 'mining-drill-productivity-bonus'
  infer_icon?: Bool
  use_icon_overlay_constant?: Bool
}
/**
 * https://lua-api.factorio.com/stable/types/MiningWithFluidModifier.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "MiningWithFluidModifier".
 */
export type MiningWithFluidModifier = BoolModifier & {
  type: 'mining-with-fluid'
  use_icon_overlay_constant?: Bool
}
/**
 * https://lua-api.factorio.com/stable/types/Modifier.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "Modifier".
 */
export type Modifier =
  | InserterStackSizeBonusModifier
  | BulkInserterCapacityBonusModifier
  | LaboratorySpeedModifier
  | CharacterLogisticTrashSlotsModifier
  | MaximumFollowingRobotsCountModifier
  | WorkerRobotSpeedModifier
  | WorkerRobotStorageModifier
  | TurretAttackModifier
  | AmmoDamageModifier
  | GiveItemModifier
  | GunSpeedModifier
  | UnlockRecipeModifier
  | CharacterCraftingSpeedModifier
  | CharacterMiningSpeedModifier
  | CharacterRunningSpeedModifier
  | CharacterBuildDistanceModifier
  | CharacterItemDropDistanceModifier
  | CharacterReachDistanceModifier
  | CharacterResourceReachDistanceModifier
  | CharacterItemPickupDistanceModifier
  | CharacterLootPickupDistanceModifier
  | CharacterInventorySlotsBonusModifier
  | DeconstructionTimeToLiveModifier
  | MaxFailedAttemptsPerTickPerConstructionQueueModifier
  | MaxSuccessfulAttemptsPerTickPerConstructionQueueModifier
  | CharacterHealthBonusModifier
  | MiningDrillProductivityBonusModifier
  | TrainBrakingForceBonusModifier
  | WorkerRobotBatteryModifier
  | LaboratoryProductivityModifier
  | FollowerRobotLifetimeModifier
  | ArtilleryRangeModifier
  | NothingModifier
  | CharacterLogisticRequestsModifier
  | VehicleLogisticsModifier
  | UnlockSpaceLocationModifier
  | UnlockQualityModifier
  | SpacePlatformsModifier
  | CircuitNetworkModifier
  | CargoLandingPadLimitModifier
  | ChangeRecipeProductivityModifier
  | CliffDeconstructionEnabledModifier
  | MiningWithFluidModifier
  | RailSupportOnDeepOilOceanModifier
  | RailPlannerAllowElevatedRailsModifier
  | BeaconDistributionModifier
  | CreateGhostOnEntityDeathModifier
  | BeltStackSizeBonusModifier
/**
 * https://lua-api.factorio.com/stable/types/WorkerRobotSpeedModifier.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "WorkerRobotSpeedModifier".
 */
export type WorkerRobotSpeedModifier = SimpleModifier & {
  type: 'worker-robot-speed'
  infer_icon?: Bool
  use_icon_overlay_constant?: Bool
}
/**
 * https://lua-api.factorio.com/stable/types/WorkerRobotStorageModifier.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "WorkerRobotStorageModifier".
 */
export type WorkerRobotStorageModifier = SimpleModifier & {
  type: 'worker-robot-storage'
  infer_icon?: Bool
  use_icon_overlay_constant?: Bool
}
/**
 * https://lua-api.factorio.com/stable/types/TurretAttackModifier.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "TurretAttackModifier".
 */
export type TurretAttackModifier = BaseModifier & {
  type: 'turret-attack'
  infer_icon?: Bool
  use_icon_overlay_constant?: Bool
  turret_id: EntityID
  modifier: Double
}
/**
 * https://lua-api.factorio.com/stable/types/UnlockRecipeModifier.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "UnlockRecipeModifier".
 */
export type UnlockRecipeModifier = BaseModifier & {
  type: 'unlock-recipe'
  use_icon_overlay_constant?: Bool
  recipe: RecipeID
}
/**
 * https://lua-api.factorio.com/stable/types/TrainBrakingForceBonusModifier.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "TrainBrakingForceBonusModifier".
 */
export type TrainBrakingForceBonusModifier = SimpleModifier & {
  type: 'train-braking-force-bonus'
  infer_icon?: Bool
  use_icon_overlay_constant?: Bool
}
/**
 * https://lua-api.factorio.com/stable/types/WorkerRobotBatteryModifier.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "WorkerRobotBatteryModifier".
 */
export type WorkerRobotBatteryModifier = SimpleModifier & {
  type: 'worker-robot-battery'
  infer_icon?: Bool
  use_icon_overlay_constant?: Bool
}
/**
 * https://lua-api.factorio.com/stable/types/NothingModifier.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "NothingModifier".
 */
export type NothingModifier = BaseModifier & {
  type: 'nothing'
  use_icon_overlay_constant?: Bool
  effect_description?: LocalisedString
}
/**
 * https://lua-api.factorio.com/stable/types/VehicleLogisticsModifier.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "VehicleLogisticsModifier".
 */
export type VehicleLogisticsModifier = BoolModifier & {
  type: 'vehicle-logistics'
  use_icon_overlay_constant?: Bool
}
/**
 * https://lua-api.factorio.com/stable/types/UnlockSpaceLocationModifier.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "UnlockSpaceLocationModifier".
 */
export type UnlockSpaceLocationModifier = BaseModifier & {
  type: 'unlock-space-location'
  use_icon_overlay_constant?: Bool
  space_location: SpaceLocationID
}
/**
 * https://lua-api.factorio.com/stable/types/UnlockQualityModifier.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "UnlockQualityModifier".
 */
export type UnlockQualityModifier = BaseModifier & {
  type: 'unlock-quality'
  use_icon_overlay_constant?: Bool
  quality: QualityID
}
/**
 * https://lua-api.factorio.com/stable/types/SpacePlatformsModifier.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "SpacePlatformsModifier".
 */
export type SpacePlatformsModifier = BoolModifier & {
  type: 'unlock-space-platforms'
  use_icon_overlay_constant?: Bool
}
/**
 * https://lua-api.factorio.com/stable/types/RailSupportOnDeepOilOceanModifier.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "RailSupportOnDeepOilOceanModifier".
 */
export type RailSupportOnDeepOilOceanModifier = BoolModifier & {
  type: 'rail-support-on-deep-oil-ocean'
  use_icon_overlay_constant?: Bool
}
/**
 * https://lua-api.factorio.com/stable/types/RailPlannerAllowElevatedRailsModifier.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "RailPlannerAllowElevatedRailsModifier".
 */
export type RailPlannerAllowElevatedRailsModifier = BoolModifier & {
  type: 'rail-planner-allow-elevated-rails'
  use_icon_overlay_constant?: Bool
}
/**
 * https://lua-api.factorio.com/stable/types/NestedTriggerEffectItem.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "NestedTriggerEffectItem".
 */
export type NestedTriggerEffectItem = TriggerEffectItem & {
  type: 'nested-result'
  action: Trigger
}
/**
 * https://lua-api.factorio.com/stable/types/PersistentWorldAmbientSoundDefinition.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "PersistentWorldAmbientSoundDefinition".
 */
export type PersistentWorldAmbientSoundDefinition =
  | {
      sound: Sound
    }
  | Sound
/**
 * https://lua-api.factorio.com/stable/types/PersistentWorldAmbientSoundsDefinitionCrossfade.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "PersistentWorldAmbientSoundsDefinitionCrossfade".
 */
export type PersistentWorldAmbientSoundsDefinitionCrossfade = Fade & {
  /**
   * @minItems 2
   * @maxItems 2
   */
  order: ['wind' | 'base_ambience', 'wind' | 'base_ambience']
}
/**
 * https://lua-api.factorio.com/stable/types/SemiPersistentWorldAmbientSoundDefinition.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "SemiPersistentWorldAmbientSoundDefinition".
 */
export type SemiPersistentWorldAmbientSoundDefinition =
  | {
      sound: Sound
      delay_mean_seconds?: Float
      delay_variance_seconds?: Float
    }
  | Sound
/**
 * https://lua-api.factorio.com/stable/types/PlaySoundTriggerEffectItem.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "PlaySoundTriggerEffectItem".
 */
export type PlaySoundTriggerEffectItem = TriggerEffectItem & {
  type: 'play-sound'
  sound: Sound
  min_distance?: Float
  max_distance?: Float
  volume_modifier?: Float
  audible_distance_modifier?: Float
  play_on_target_position?: Bool
}
/**
 * https://lua-api.factorio.com/stable/types/PlayerInputMethodFilter.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "PlayerInputMethodFilter".
 */
export type PlayerInputMethodFilter = 'all' | 'keyboard_and_mouse' | 'game_controller'
/**
 * https://lua-api.factorio.com/stable/types/PlumeEffect.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "PlumeEffect".
 */
export type PlumeEffect = StatelessVisualisation & {
  age_discrimination?: Int8
}
/**
 * https://lua-api.factorio.com/stable/types/ProbabilityTable.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "ProbabilityTable".
 */
export type ProbabilityTable = ProbabilityTableItem[] | {}
/**
 * https://lua-api.factorio.com/stable/types/ProbabilityTableItem.html
 *
 * @minItems 2
 * @maxItems 2
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "ProbabilityTableItem".
 */
export type ProbabilityTableItem = [Uint8, Uint8]
/**
 * https://lua-api.factorio.com/stable/types/ProcessionAudioType.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "ProcessionAudioType".
 */
export type ProcessionAudioType =
  | 'none'
  | 'sound'
  | 'looped-sound'
  | 'pod-catalogue'
  | 'location-catalogue'
/**
 * https://lua-api.factorio.com/stable/types/ProcessionAudioCatalogue.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "ProcessionAudioCatalogue".
 */
export type ProcessionAudioCatalogue = ProcessionAudioCatalogueItem[] | {}
/**
 * https://lua-api.factorio.com/stable/types/ProcessionAudioEventType.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "ProcessionAudioEventType".
 */
export type ProcessionAudioEventType = 'play-sound' | 'start-looped-sound' | 'stop-looped-sound'
/**
 * https://lua-api.factorio.com/stable/types/ProcessionAudioUsage.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "ProcessionAudioUsage".
 */
export type ProcessionAudioUsage = 'both' | 'passenger' | 'outside'
/**
 * https://lua-api.factorio.com/stable/types/ProcessionGraphicCatalogue.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "ProcessionGraphicCatalogue".
 */
export type ProcessionGraphicCatalogue = ProcessionGraphicCatalogueItem[] | {}
/**
 * https://lua-api.factorio.com/stable/types/ProcessionID.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "ProcessionID".
 */
export type ProcessionID = String
/**
 * https://lua-api.factorio.com/stable/types/ProcessionLayer.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "ProcessionLayer".
 */
export type ProcessionLayer =
  | PodDistanceTraveledProcessionLayer
  | PodMovementProcessionLayer
  | PodOpacityProcessionLayer
  | SingleGraphicProcessionLayer
  | CoverGraphicProcessionLayer
  | TintProcessionLayer
  | PodAnimationProcessionLayer
/**
 * https://lua-api.factorio.com/stable/types/ProcessionLayerWithTime.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "ProcessionLayerWithTime".
 */
export type ProcessionLayerWithTime = ProcessionLayer
/**
 * https://lua-api.factorio.com/stable/types/ProgressBarStyleSpecification.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "ProgressBarStyleSpecification".
 */
export type ProgressBarStyleSpecification = BaseStyleSpecification & {
  type: 'progressbar_style'
  bar_width?: Uint32
  color?: Color
  other_colors?:
    | {
        less_than: Double
        color?: Color
        bar?: ElementImageSet
      }[]
    | {}
  bar?: ElementImageSet
  bar_background?: ElementImageSet
  font?: String
  font_color?: Color
  filled_font_color?: Color
  embed_text_in_bar?: Bool
  side_text_padding?: Int16
}
/**
 * https://lua-api.factorio.com/stable/types/TileEffectDefinitionID.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "TileEffectDefinitionID".
 */
export type TileEffectDefinitionID = String
/**
 * https://lua-api.factorio.com/stable/types/PushBackTriggerEffectItem.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "PushBackTriggerEffectItem".
 */
export type PushBackTriggerEffectItem = TriggerEffectItem & {
  type: 'push-back'
  distance: Float
}
/**
 * https://lua-api.factorio.com/stable/types/RadioButtonStyleSpecification.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "RadioButtonStyleSpecification".
 */
export type RadioButtonStyleSpecification = StyleWithClickableGraphicalSetSpecification & {
  type: 'radiobutton_style'
  font?: String
  font_color?: Color
  disabled_font_color?: Color
  text_padding?: Uint32
}
/**
 * https://lua-api.factorio.com/stable/types/SpriteNWaySheet.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "SpriteNWaySheet".
 */
export type SpriteNWaySheet = SpriteParameters & {
  frames?: Uint32
}
/**
 * https://lua-api.factorio.com/stable/types/RandomRange.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "RandomRange".
 */
export type RandomRange = Uint8
/**
 * https://lua-api.factorio.com/stable/types/ResearchIngredient.html
 *
 * @minItems 2
 * @maxItems 2
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "ResearchIngredient".
 */
export type ResearchIngredient = [ItemID, Uint16]
/**
 * https://lua-api.factorio.com/stable/types/RotatedAnimation8Way.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "RotatedAnimation8Way".
 */
export type RotatedAnimation8Way =
  | {
      north: RotatedAnimation
      north_east?: RotatedAnimation
      east?: RotatedAnimation
      south_east?: RotatedAnimation
      south?: RotatedAnimation
      south_west?: RotatedAnimation
      west?: RotatedAnimation
      north_west?: RotatedAnimation
    }
  | RotatedAnimation
/**
 * https://lua-api.factorio.com/stable/types/RotatedAnimationVariations.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "RotatedAnimationVariations".
 */
export type RotatedAnimationVariations = RotatedAnimation | RotatedAnimation[] | {}
/**
 * https://lua-api.factorio.com/stable/types/ScriptTriggerEffectItem.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "ScriptTriggerEffectItem".
 */
export type ScriptTriggerEffectItem = TriggerEffectItem & {
  type: 'script'
  effect_id: String
}
/**
 * https://lua-api.factorio.com/stable/types/SetTileTriggerEffectItem.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "SetTileTriggerEffectItem".
 */
export type SetTileTriggerEffectItem = TriggerEffectItem & {
  type: 'set-tile'
  tile_name: TileID
  radius: Float
  apply_projection?: Bool
  apply_on_space_platform?: Bool
  tile_collision_mask?: CollisionMaskConnector
}
/**
 * https://lua-api.factorio.com/stable/types/ShowExplosionOnChartTriggerEffectItem.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "ShowExplosionOnChartTriggerEffectItem".
 */
export type ShowExplosionOnChartTriggerEffectItem = TriggerEffectItem & {
  type: 'show-explosion-on-chart'
  scale: Float
}
/**
 * https://lua-api.factorio.com/stable/types/SignalColorMapping.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "SignalColorMapping".
 */
export type SignalColorMapping = SignalIDConnector & {
  color: Color
}
/**
 * https://lua-api.factorio.com/stable/types/SoundDefinition.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "SoundDefinition".
 */
export type SoundDefinition =
  | {
      filename: FileName
      volume?: Float
      min_volume?: Float
      max_volume?: Float
      preload?: Bool
      speed?: Float
      min_speed?: Float
      max_speed?: Float
      modifiers?: SoundModifier | SoundModifier[] | {}
    }
  | FileName
/**
 * https://lua-api.factorio.com/stable/types/SoundModifierType.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "SoundModifierType".
 */
export type SoundModifierType =
  | 'game'
  | 'main-menu'
  | 'tips-and-tricks'
  | 'driving'
  | 'elevation'
  | 'space-platform'
/**
 * https://lua-api.factorio.com/stable/types/SoundType.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "SoundType".
 */
export type SoundType =
  | 'game-effect'
  | 'gui-effect'
  | 'ambient'
  | 'environment'
  | 'walking'
  | 'alert'
  | 'wind'
  | 'world-ambient'
  | 'weapon'
  | 'explosion'
  | 'enemy'
/**
 * https://lua-api.factorio.com/stable/types/SpaceConnectionAsteroidSpawnDefinition.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "SpaceConnectionAsteroidSpawnDefinition".
 */
export type SpaceConnectionAsteroidSpawnDefinition =
  | {
      type?: 'entity' | 'asteroid-chunk'
      asteroid: EntityID | AsteroidChunkID
      spawn_points: SpaceConnectionAsteroidSpawnPoint[] | {}
    }
  | [EntityID, SpaceConnectionAsteroidSpawnPoint[] | {}]
/**
 * https://lua-api.factorio.com/stable/types/SpaceConnectionAsteroidSpawnPoint.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "SpaceConnectionAsteroidSpawnPoint".
 */
export type SpaceConnectionAsteroidSpawnPoint = AsteroidSpawnPoint & {
  distance: Double
}
/**
 * https://lua-api.factorio.com/stable/types/SpaceConnectionID.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "SpaceConnectionID".
 */
export type SpaceConnectionID = String
/**
 * https://lua-api.factorio.com/stable/types/SpaceLocationAsteroidSpawnDefinition.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "SpaceLocationAsteroidSpawnDefinition".
 */
export type SpaceLocationAsteroidSpawnDefinition = AsteroidSpawnPoint & {
  type?: 'entity' | 'asteroid-chunk'
  asteroid: EntityID | AsteroidChunkID
}
/**
 * https://lua-api.factorio.com/stable/types/SpawnPoint.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "SpawnPoint".
 */
export type SpawnPoint =
  | {
      evolution_factor: Double
      spawn_weight: Double
    }
  | [Double, Double]
/**
 * https://lua-api.factorio.com/stable/types/SpeechBubbleStyleSpecification.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "SpeechBubbleStyleSpecification".
 */
export type SpeechBubbleStyleSpecification = BaseStyleSpecification & {
  type: 'speech_bubble_style'
  frame_style?: FrameStyleSpecification
  label_style?: LabelStyleSpecification
  arrow_graphical_set?: ElementImageSet
  close_color?: Color
  arrow_indent?: Double
  pass_through_mouse?: Bool
}
/**
 * https://lua-api.factorio.com/stable/types/SpiderVehicleGraphicsSet.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "SpiderVehicleGraphicsSet".
 */
export type SpiderVehicleGraphicsSet = SpiderTorsoGraphicsSet & {
  autopilot_destination_visualisation_render_layer?: RenderLayer
  light?: LightDefinition
  eye_light?: LightDefinition
  autopilot_destination_on_map_visualisation?: Animation
  autopilot_destination_queue_on_map_visualisation?: Animation
  autopilot_destination_visualisation?: Animation
  autopilot_destination_queue_visualisation?: Animation
  autopilot_path_visualisation_line_width?: Float
  autopilot_path_visualisation_on_map_line_width?: Float
  light_positions?: (Vector[] | {})[] | {}
}
/**
 * https://lua-api.factorio.com/stable/types/StyleSpecification.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "StyleSpecification".
 */
export type StyleSpecification =
  | ActivityBarStyleSpecification
  | ButtonStyleSpecification
  | CameraStyleSpecification
  | CheckBoxStyleSpecification
  | DropDownStyleSpecification
  | FlowStyleSpecification
  | FrameStyleSpecification
  | GraphStyleSpecification
  | HorizontalFlowStyleSpecification
  | LineStyleSpecification
  | ImageStyleSpecification
  | LabelStyleSpecification
  | ListBoxStyleSpecification
  | ProgressBarStyleSpecification
  | RadioButtonStyleSpecification
  | HorizontalScrollBarStyleSpecification
  | VerticalScrollBarStyleSpecification
  | ScrollPaneStyleSpecification
  | SliderStyleSpecification
  | SwitchStyleSpecification
  | TableStyleSpecification
  | TabStyleSpecification
  | TextBoxStyleSpecification
  | VerticalFlowStyleSpecification
  | TabbedPaneStyleSpecification
  | EmptyWidgetStyleSpecification
  | MinimapStyleSpecification
  | TechnologySlotStyleSpecification
  | GlowStyleSpecification
  | SpeechBubbleStyleSpecification
  | DoubleSliderStyleSpecification
/**
 * https://lua-api.factorio.com/stable/types/SwitchStyleSpecification.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "SwitchStyleSpecification".
 */
export type SwitchStyleSpecification = BaseStyleSpecification & {
  type: 'switch_style'
  left_button_position?: Uint32
  middle_button_position?: Uint32
  right_button_position?: Uint32
  default_background?: Sprite
  hover_background?: Sprite
  disabled_background?: Sprite
  button?: ButtonStyleSpecification
  active_label?: LabelStyleSpecification
  inactive_label?: LabelStyleSpecification
}
/**
 * https://lua-api.factorio.com/stable/types/TableStyleSpecification.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "TableStyleSpecification".
 */
export type TableStyleSpecification = BaseStyleSpecification & {
  type: 'table_style'
  horizontal_spacing?: Int32 | SpacingItem[] | {}
  vertical_spacing?: Int32 | SpacingItem[] | {}
  cell_padding?: Int16
  top_cell_padding?: Int16
  right_cell_padding?: Int16
  bottom_cell_padding?: Int16
  left_cell_padding?: Int16
  apply_row_graphical_set_per_column?: Bool
  wide_as_column_count?: Bool
  column_graphical_set?: ElementImageSet
  default_row_graphical_set?: ElementImageSet
  even_row_graphical_set?: ElementImageSet
  odd_row_graphical_set?: ElementImageSet
  hovered_graphical_set?: ElementImageSet
  clicked_graphical_set?: ElementImageSet
  selected_graphical_set?: ElementImageSet
  selected_hovered_graphical_set?: ElementImageSet
  selected_clicked_graphical_set?: ElementImageSet
  background_graphical_set?: ElementImageSet
  column_alignments?: ColumnAlignment[] | {}
  column_widths?: ColumnWidthItem | ColumnWidth[] | {}
  hovered_row_color?: Color
  selected_row_color?: Color
  vertical_line_color?: Color
  horizontal_line_color?: Color
  column_ordering_ascending_button_style?: ButtonStyleSpecification
  column_ordering_descending_button_style?: ButtonStyleSpecification
  inactive_column_ordering_ascending_button_style?: ButtonStyleSpecification
  inactive_column_ordering_descending_button_style?: ButtonStyleSpecification
  border?: BorderImageSet
}
/**
 * https://lua-api.factorio.com/stable/types/TabStyleSpecification.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "TabStyleSpecification".
 */
export type TabStyleSpecification = StyleWithClickableGraphicalSetSpecification & {
  type: 'tab_style'
  font?: String
  badge_font?: String
  badge_horizontal_spacing?: Int16
  default_font_color?: Color
  selected_font_color?: Color
  disabled_font_color?: Color
  default_badge_font_color?: Color
  selected_badge_font_color?: Color
  disabled_badge_font_color?: Color
  override_graphics_on_edges?: Bool
  increase_height_when_selected?: Bool
  left_edge_selected_graphical_set?: ElementImageSet
  right_edge_selected_graphical_set?: ElementImageSet
  default_badge_graphical_set?: ElementImageSet
  selected_badge_graphical_set?: ElementImageSet
  hover_badge_graphical_set?: ElementImageSet
  press_badge_graphical_set?: ElementImageSet
  disabled_badge_graphical_set?: ElementImageSet
  draw_grayscale_picture?: Bool
}
/**
 * https://lua-api.factorio.com/stable/types/TextBoxStyleSpecification.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "TextBoxStyleSpecification".
 */
export type TextBoxStyleSpecification = BaseStyleSpecification & {
  type: 'textbox_style'
  font?: String
  font_color?: Color
  disabled_font_color?: Color
  selection_background_color?: Color
  default_background?: ElementImageSet
  active_background?: ElementImageSet
  game_controller_hovered_background?: ElementImageSet
  disabled_background?: ElementImageSet
  rich_text_setting?: RichTextSetting
  rich_text_highlight_error_color?: Color
  rich_text_highlight_warning_color?: Color
  rich_text_highlight_ok_color?: Color
  selected_rich_text_highlight_error_color?: Color
  selected_rich_text_highlight_warning_color?: Color
  selected_rich_text_highlight_ok_color?: Color
}
/**
 * https://lua-api.factorio.com/stable/types/TabbedPaneStyleSpecification.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "TabbedPaneStyleSpecification".
 */
export type TabbedPaneStyleSpecification = BaseStyleSpecification & {
  type: 'tabbed_pane_style'
  vertical_spacing?: Uint32
  tab_content_frame?: FrameStyleSpecification
  tab_container?: TableStyleSpecification
}
/**
 * https://lua-api.factorio.com/stable/types/TechnologySlotStyleSpecification.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "TechnologySlotStyleSpecification".
 */
export type TechnologySlotStyleSpecification = ButtonStyleSpecification & {
  highlighted_graphical_set?: ElementImageSet
  default_background_shadow?: ElementImageSet
  level_band?: ElementImageSet
  hovered_level_band?: ElementImageSet
  level_offset_x?: Int32
  level_offset_y?: Int32
  level_band_width?: Uint32
  level_band_height?: Uint32
  level_font?: String
  level_range_font?: String
  level_font_color?: Color
  hovered_level_font_color?: Color
  level_range_font_color?: Color
  hovered_level_range_font_color?: Color
  level_range_band?: ElementImageSet
  hovered_level_range_band?: ElementImageSet
  level_range_offset_x?: Int32
  level_range_offset_y?: Int32
  ingredients_height?: Uint32
  default_ingredients_background?: ElementImageSet
  hovered_ingredients_background?: ElementImageSet
  clicked_ingredients_background?: ElementImageSet
  disabled_ingredients_background?: ElementImageSet
  highlighted_ingredients_background?: ElementImageSet
  ingredients_padding?: Uint32
  ingredient_icon_size?: Uint32
  ingredient_icon_overlap?: Uint32
  clicked_overlay?: ElementImageSet
  progress_bar_background?: ElementImageSet
  progress_bar?: ElementImageSet
  progress_bar_shadow?: ElementImageSet
  progress_bar_height?: Uint32
  progress_bar_color?: Color
  drag_handle_style?: EmptyWidgetStyleSpecification
}
/**
 * https://lua-api.factorio.com/stable/types/TechnologyTrigger.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "TechnologyTrigger".
 */
export type TechnologyTrigger =
  | MineEntityTechnologyTrigger
  | CraftItemTechnologyTrigger
  | CraftFluidTechnologyTrigger
  | SendItemToOrbitTechnologyTrigger
  | CaptureSpawnerTechnologyTrigger
  | BuildEntityTechnologyTrigger
  | CreateSpacePlatformTechnologyTrigger
/**
 * https://lua-api.factorio.com/stable/types/ThrusterGraphicsSet.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "ThrusterGraphicsSet".
 */
export type ThrusterGraphicsSet = WorkingVisualisations & {
  flame?: Sprite
  flame_effect?: EffectTexture
  flame_position?: Vector
  flame_effect_height?: Float
  flame_effect_width?: Float
  flame_half_height?: Float
  flame_effect_offset?: Float
}
/**
 * https://lua-api.factorio.com/stable/types/ThrusterPerformancePoint.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "ThrusterPerformancePoint".
 */
export type ThrusterPerformancePoint =
  | {
      fluid_volume: Double
      fluid_usage: FluidAmount
      effectivity: Double
    }
  | [Double, Double, Double]
/**
 * https://lua-api.factorio.com/stable/types/TileLightPictures.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "TileLightPictures".
 */
export type TileLightPictures = TileSpriteLayout & {
  size: Uint32
}
/**
 * https://lua-api.factorio.com/stable/types/TileMainPictures.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "TileMainPictures".
 */
export type TileMainPictures = TileSpriteLayout & {
  size: Uint32
  probability?: Double
  weights?: Double[] | {}
}
/**
 * https://lua-api.factorio.com/stable/types/TileRenderLayer.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "TileRenderLayer".
 */
export type TileRenderLayer =
  | 'zero'
  | 'water'
  | 'water-overlay'
  | 'ground-natural'
  | 'ground-artificial'
  | 'top'
/**
 * https://lua-api.factorio.com/stable/types/TileTransitionSpritesheetLayout.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "TileTransitionSpritesheetLayout".
 */
export type TileTransitionSpritesheetLayout = TileSpriteLayoutVariant & {
  overlay?: TileTransitionVariantLayout
  mask?: TileTransitionVariantLayout
  background?: TileTransitionVariantLayout
  background_mask?: TileTransitionVariantLayout
  effect_map?: TileTransitionVariantLayout
  lightmap?: TileTransitionVariantLayout
  auxiliary_effect_mask?: TileTransitionVariantLayout
  inner_corner_scale?: Float
  inner_corner_x?: SpriteSizeType
  inner_corner_y?: SpriteSizeType
  inner_corner_tile_height?: Uint8
  inner_corner_line_length?: Uint8
  inner_corner_count?: Uint8
  outer_corner_scale?: Float
  outer_corner_x?: SpriteSizeType
  outer_corner_y?: SpriteSizeType
  outer_corner_tile_height?: Uint8
  outer_corner_line_length?: Uint8
  outer_corner_count?: Uint8
  side_scale?: Float
  side_x?: SpriteSizeType
  side_y?: SpriteSizeType
  side_tile_height?: Uint8
  side_line_length?: Uint8
  side_count?: Uint8
  double_side_scale?: Float
  double_side_x?: SpriteSizeType
  double_side_y?: SpriteSizeType
  double_side_tile_height?: Uint8
  double_side_line_length?: Uint8
  double_side_count?: Uint8
  u_transition_scale?: Float
  u_transition_x?: SpriteSizeType
  u_transition_y?: SpriteSizeType
  u_transition_tile_height?: Uint8
  u_transition_line_length?: Uint8
  u_transition_count?: Uint8
  o_transition_scale?: Float
  o_transition_x?: SpriteSizeType
  o_transition_y?: SpriteSizeType
  o_transition_tile_height?: Uint8
  o_transition_line_length?: Uint8
  o_transition_count?: Uint8
}
/**
 * https://lua-api.factorio.com/stable/types/TileTransitionVariantLayout.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "TileTransitionVariantLayout".
 */
export type TileTransitionVariantLayout = TileSpriteLayoutVariant & {
  x_offset?: SpriteSizeType
  y_offset?: SpriteSizeType
  inner_corner?: TileSpriteLayoutVariant
  outer_corner?: TileSpriteLayoutVariant
  side?: TileSpriteLayoutVariant
  double_side?: TileSpriteLayoutVariant
  u_transition?: TileSpriteLayoutVariant
  o_transition?: TileSpriteLayoutVariant
  inner_corner_scale?: Float
  inner_corner_x?: SpriteSizeType
  inner_corner_y?: SpriteSizeType
  inner_corner_tile_height?: Uint8
  inner_corner_line_length?: Uint8
  inner_corner_count?: Uint8
  outer_corner_scale?: Float
  outer_corner_x?: SpriteSizeType
  outer_corner_y?: SpriteSizeType
  outer_corner_tile_height?: Uint8
  outer_corner_line_length?: Uint8
  outer_corner_count?: Uint8
  side_scale?: Float
  side_x?: SpriteSizeType
  side_y?: SpriteSizeType
  side_tile_height?: Uint8
  side_line_length?: Uint8
  side_count?: Uint8
  double_side_scale?: Float
  double_side_x?: SpriteSizeType
  double_side_y?: SpriteSizeType
  double_side_tile_height?: Uint8
  double_side_line_length?: Uint8
  double_side_count?: Uint8
  u_transition_scale?: Float
  u_transition_x?: SpriteSizeType
  u_transition_y?: SpriteSizeType
  u_transition_tile_height?: Uint8
  u_transition_line_length?: Uint8
  u_transition_count?: Uint8
  o_transition_scale?: Float
  o_transition_x?: SpriteSizeType
  o_transition_y?: SpriteSizeType
  o_transition_tile_height?: Uint8
  o_transition_line_length?: Uint8
  o_transition_count?: Uint8
}
/**
 * https://lua-api.factorio.com/stable/types/TileTransitionsBetweenTransitions.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "TileTransitionsBetweenTransitions".
 */
export type TileTransitionsBetweenTransitions = TileTransitions & {
  transition_group1: Uint8
  transition_group2: Uint8
}
/**
 * https://lua-api.factorio.com/stable/types/TileTransitionsToTiles.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "TileTransitionsToTiles".
 */
export type TileTransitionsToTiles = TileTransitions & {
  to_tiles: TileID[] | {}
  transition_group: Uint8
}
/**
 * https://lua-api.factorio.com/stable/types/TipStatus.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "TipStatus".
 */
export type TipStatus =
  | 'locked'
  | 'optional'
  | 'dependencies-not-met'
  | 'unlocked'
  | 'suggested'
  | 'not-to-be-suggested'
  | 'completed-without-tutorial'
  | 'completed'
/**
 * https://lua-api.factorio.com/stable/types/TransportBeltAnimationSetWithCorners.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "TransportBeltAnimationSetWithCorners".
 */
export type TransportBeltAnimationSetWithCorners = TransportBeltAnimationSet & {
  east_to_north_index?: Uint8
  north_to_east_index?: Uint8
  west_to_north_index?: Uint8
  north_to_west_index?: Uint8
  south_to_east_index?: Uint8
  east_to_south_index?: Uint8
  south_to_west_index?: Uint8
  west_to_south_index?: Uint8
  east_to_north_index_frozen?: Uint8
  north_to_east_index_frozen?: Uint8
  west_to_north_index_frozen?: Uint8
  north_to_west_index_frozen?: Uint8
  south_to_east_index_frozen?: Uint8
  east_to_south_index_frozen?: Uint8
  south_to_west_index_frozen?: Uint8
  west_to_south_index_frozen?: Uint8
}
/**
 * https://lua-api.factorio.com/stable/types/TurretState.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "TurretState".
 */
export type TurretState =
  | 'folded'
  | 'preparing'
  | 'prepared'
  | 'starting-attack'
  | 'attacking'
  | 'ending-attack'
  | 'rotate-for-folding'
  | 'folding'
/**
 * https://lua-api.factorio.com/stable/types/TurretSpecialEffectCenter.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "TurretSpecialEffectCenter".
 */
export type TurretSpecialEffectCenter =
  | {
      default?: Vector
      north?: Vector
      north_east?: Vector
      east?: Vector
      south_east?: Vector
      south?: Vector
      south_west?: Vector
      west?: Vector
      north_west?: Vector
    }
  | Vector
/**
 * https://lua-api.factorio.com/stable/types/UnitSpawnDefinition.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "UnitSpawnDefinition".
 */
export type UnitSpawnDefinition =
  | {
      unit: EntityID
      spawn_points: SpawnPoint[] | {}
    }
  | [EntityID, SpawnPoint[] | {}]
/**
 * https://lua-api.factorio.com/stable/types/VariableAmbientSoundCompositionMode.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "VariableAmbientSoundCompositionMode".
 */
export type VariableAmbientSoundCompositionMode =
  | 'randomized'
  | 'semi-randomized'
  | 'shuffled'
  | 'layer-controlled'
/**
 * https://lua-api.factorio.com/stable/types/VariableAmbientSoundLayerSample.html
 *
 * @minItems 2
 * @maxItems 2
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "VariableAmbientSoundLayerSample".
 */
export type VariableAmbientSoundLayerSample = [String, Uint32]
/**
 * https://lua-api.factorio.com/stable/types/VariableAmbientSoundNextStateTrigger.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "VariableAmbientSoundNextStateTrigger".
 */
export type VariableAmbientSoundNextStateTrigger = 'layers-finished' | 'duration'
/**
 * https://lua-api.factorio.com/stable/types/VariableAmbientSoundStateType.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "VariableAmbientSoundStateType".
 */
export type VariableAmbientSoundStateType = 'regular' | 'intermezzo' | 'final' | 'stop'
/**
 * https://lua-api.factorio.com/stable/types/int64.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "int64".
 */
export type Int64 = number
/**
 * https://lua-api.factorio.com/stable/prototypes/AccumulatorPrototype.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "AccumulatorPrototype".
 */
export type AccumulatorPrototype = EntityWithOwnerPrototype & {
  energy_source: ElectricEnergySource
  chargable_graphics?: ChargableGraphics
  circuit_wire_max_distance?: Double
  draw_copper_wires?: Bool
  draw_circuit_wires?: Bool
  circuit_connector?: CircuitConnectorDefinition
  default_output_signal?: SignalIDConnector
}
/**
 * https://lua-api.factorio.com/stable/prototypes/AchievementPrototype.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "AchievementPrototype".
 */
export type AchievementPrototype = Prototype & {
  icons?: IconData[] | {}
  icon?: FileName
  icon_size?: SpriteSizeType
  steam_stats_name?: String
  allowed_without_fight?: Bool
}
/**
 * https://lua-api.factorio.com/stable/prototypes/AchievementPrototypeWithCondition.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "AchievementPrototypeWithCondition".
 */
export type AchievementPrototypeWithCondition = AchievementPrototype & {
  objective_condition: 'game-finished' | 'rocket-launched'
}
/**
 * https://lua-api.factorio.com/stable/prototypes/ActiveDefenseEquipmentPrototype.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "ActiveDefenseEquipmentPrototype".
 */
export type ActiveDefenseEquipmentPrototype = EquipmentPrototype & {
  automatic: Bool
  attack_parameters: AttackParameters
}
/**
 * https://lua-api.factorio.com/stable/prototypes/EquipmentPrototype.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "EquipmentPrototype".
 */
export type EquipmentPrototype = Prototype & {
  sprite: Sprite
  shape: EquipmentShape
  categories: EquipmentCategoryID[] | {}
  energy_source: ElectricEnergySource
  take_result?: ItemID
  background_color?: Color
  background_border_color?: Color
  grabbed_background_color?: Color
}
/**
 * https://lua-api.factorio.com/stable/prototypes/ActiveTriggerPrototype.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "ActiveTriggerPrototype".
 */
export type ActiveTriggerPrototype = Prototype
/**
 * https://lua-api.factorio.com/stable/prototypes/AgriculturalTowerPrototype.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "AgriculturalTowerPrototype".
 */
export type AgriculturalTowerPrototype = EntityWithOwnerPrototype & {
  graphics_set?: CraftingMachineGraphicsSet
  crane: AgriculturalCraneProperties
  energy_source: EnergySource
  input_inventory_size: ItemStackIndex
  output_inventory_size?: ItemStackIndex
  energy_usage: Energy
  crane_energy_usage: Energy
  random_growth_offset?: Double
  growth_grid_tile_size?: Uint32
  central_orienting_sound?: InterruptibleSound
  arm_extending_sound?: InterruptibleSound
  grappler_orienting_sound?: InterruptibleSound
  grappler_extending_sound?: InterruptibleSound
  planting_sound?: Sound
  harvesting_sound?: Sound
  radius_visualisation_picture?: Sprite
  radius: Double
  central_orienting_sound_source?: String
  arm_extending_sound_source?: String
  grappler_orienting_sound_source?: String
  grappler_extending_sound_source?: String
  planting_procedure_points?: Vector3D[] | {}
  harvesting_procedure_points?: Vector3D[] | {}
  circuit_wire_max_distance?: Double
  draw_copper_wires?: Bool
  draw_circuit_wires?: Bool
  circuit_connector?: CircuitConnectorDefinition
}
/**
 * https://lua-api.factorio.com/stable/prototypes/AirbornePollutantPrototype.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "AirbornePollutantPrototype".
 */
export type AirbornePollutantPrototype = Prototype & {
  localised_name_with_amount?: String
  chart_color: Color
  icon: Sprite
  affects_evolution: Bool
  affects_water_tint: Bool
}
/**
 * https://lua-api.factorio.com/stable/prototypes/AmmoCategory.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "AmmoCategory".
 */
export type AmmoCategory = Prototype & {
  bonus_gui_order?: Order
  icons?: IconData[] | {}
  icon?: FileName
  icon_size?: SpriteSizeType
}
/**
 * https://lua-api.factorio.com/stable/prototypes/AmmoTurretPrototype.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "AmmoTurretPrototype".
 */
export type AmmoTurretPrototype = TurretPrototype & {
  energy_source?: ElectricEnergySource
  energy_per_shot?: Energy
  inventory_size: ItemStackIndex
  automated_ammo_count: ItemCountType
  prepare_with_no_ammo?: Bool
}
/**
 * https://lua-api.factorio.com/stable/prototypes/TurretPrototype.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "TurretPrototype".
 */
export type TurretPrototype = EntityWithOwnerPrototype & {
  attack_parameters: AttackParameters
  folded_animation: RotatedAnimation8Way
  call_for_help_radius: Double
  attack_target_mask?: TriggerTargetMask
  ignore_target_mask?: TriggerTargetMask
  shoot_in_prepare_state?: Bool
  start_attacking_only_when_can_shoot?: Bool
  turret_base_has_direction?: Bool
  random_animation_offset?: Bool
  attack_from_start_frame?: Bool
  allow_turning_when_starting_attack?: Bool
  gun_animation_secondary_draw_order?: Uint8
  gun_animation_render_layer?: RenderLayer
  graphics_set: TurretGraphicsSet
  preparing_animation?: RotatedAnimation8Way
  prepared_animation?: RotatedAnimation8Way
  prepared_alternative_animation?: RotatedAnimation8Way
  starting_attack_animation?: RotatedAnimation8Way
  attacking_animation?: RotatedAnimation8Way
  energy_glow_animation?: RotatedAnimation8Way
  resource_indicator_animation?: RotatedAnimation8Way
  ending_attack_animation?: RotatedAnimation8Way
  folding_animation?: RotatedAnimation8Way
  integration?: Sprite
  special_effect?: TurretSpecialEffect
  glow_light_intensity?: Float
  energy_glow_animation_flicker_strength?: Float
  starting_attack_sound?: Sound
  dying_sound?: Sound
  preparing_sound?: Sound
  folding_sound?: Sound
  prepared_sound?: Sound
  prepared_alternative_sound?: Sound
  rotating_sound?: InterruptibleSound
  default_speed?: Float
  default_speed_secondary?: Float
  default_speed_when_killed?: Float
  default_starting_progress_when_killed?: Float
  rotation_speed?: Float
  rotation_speed_secondary?: Float
  rotation_speed_when_killed?: Float
  rotation_starting_progress_when_killed?: Float
  preparing_speed?: Float
  preparing_speed_secondary?: Float
  preparing_speed_when_killed?: Float
  preparing_starting_progress_when_killed?: Float
  folded_speed?: Float
  folded_speed_secondary?: Float
  folded_speed_when_killed?: Float
  folded_starting_progress_when_killed?: Float
  prepared_speed?: Float
  prepared_speed_secondary?: Float
  prepared_speed_when_killed?: Float
  prepared_starting_progress_when_killed?: Float
  prepared_alternative_speed?: Float
  prepared_alternative_speed_secondary?: Float
  prepared_alternative_speed_when_killed?: Float
  prepared_alternative_starting_progress_when_killed?: Float
  prepared_alternative_chance?: Float
  starting_attack_speed?: Float
  starting_attack_speed_secondary?: Float
  starting_attack_speed_when_killed?: Float
  starting_attack_starting_progress_when_killed?: Float
  attacking_speed?: Float
  ending_attack_speed?: Float
  ending_attack_speed_secondary?: Float
  ending_attack_speed_when_killed?: Float
  ending_attack_starting_progress_when_killed?: Float
  folding_speed?: Float
  folding_speed_secondary?: Float
  folding_speed_when_killed?: Float
  folding_starting_progress_when_killed?: Float
  prepare_range?: Double
  alert_when_attacking?: Bool
  spawn_decorations_on_expansion?: Bool
  folded_animation_is_stateless?: Bool
  unfolds_before_dying?: Bool
  spawn_decoration?: CreateDecorativesTriggerEffectItem[] | {}
  folded_state_corpse?: EntityID | EntityID[] | {}
  can_retarget_while_starting_attack?: Bool
  circuit_wire_max_distance?: Double
  draw_copper_wires?: Bool
  draw_circuit_wires?: Bool
  circuit_connector?: CircuitConnectorDefinition[] | {}
}
/**
 * https://lua-api.factorio.com/stable/prototypes/ArithmeticCombinatorPrototype.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "ArithmeticCombinatorPrototype".
 */
export type ArithmeticCombinatorPrototype = CombinatorPrototype & {
  plus_symbol_sprites?: Sprite4Way
  minus_symbol_sprites?: Sprite4Way
  multiply_symbol_sprites?: Sprite4Way
  divide_symbol_sprites?: Sprite4Way
  modulo_symbol_sprites?: Sprite4Way
  power_symbol_sprites?: Sprite4Way
  left_shift_symbol_sprites?: Sprite4Way
  right_shift_symbol_sprites?: Sprite4Way
  and_symbol_sprites?: Sprite4Way
  or_symbol_sprites?: Sprite4Way
  xor_symbol_sprites?: Sprite4Way
}
/**
 * https://lua-api.factorio.com/stable/prototypes/CombinatorPrototype.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "CombinatorPrototype".
 */
export type CombinatorPrototype = EntityWithOwnerPrototype & {
  energy_source: ElectricEnergySource | VoidEnergySource
  active_energy_usage: Energy
  sprites?: Sprite4Way
  frozen_patch?: Sprite4Way
  activity_led_sprites?: Sprite4Way
  input_connection_bounding_box: BoundingBox
  output_connection_bounding_box: BoundingBox
  /**
   * @minItems 4
   * @maxItems 4
   */
  activity_led_light_offsets: [Vector, Vector, Vector, Vector]
  /**
   * @minItems 4
   * @maxItems 4
   */
  screen_light_offsets: [Vector, Vector, Vector, Vector]
  /**
   * @minItems 4
   * @maxItems 4
   */
  input_connection_points: [
    WireConnectionPoint,
    WireConnectionPoint,
    WireConnectionPoint,
    WireConnectionPoint,
  ]
  /**
   * @minItems 4
   * @maxItems 4
   */
  output_connection_points: [
    WireConnectionPoint,
    WireConnectionPoint,
    WireConnectionPoint,
    WireConnectionPoint,
  ]
  activity_led_light?: LightDefinition
  screen_light?: LightDefinition
  activity_led_hold_time?: Uint8
  circuit_wire_max_distance?: Double
  draw_copper_wires?: Bool
  draw_circuit_wires?: Bool
}
/**
 * https://lua-api.factorio.com/stable/prototypes/ArrowPrototype.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "ArrowPrototype".
 */
export type ArrowPrototype = EntityPrototype & {
  arrow_picture: Sprite
  circle_picture?: Sprite
  blinking?: Bool
}
/**
 * https://lua-api.factorio.com/stable/prototypes/ArtilleryFlarePrototype.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "ArtilleryFlarePrototype".
 */
export type ArtilleryFlarePrototype = EntityPrototype & {
  pictures?: AnimationVariations
  life_time: Uint16
  shadows?: AnimationVariations
  render_layer?: RenderLayer
  render_layer_when_on_ground?: RenderLayer
  regular_trigger_effect?: TriggerEffect
  regular_trigger_effect_frequency?: Uint32
  ended_in_water_trigger_effect?: TriggerEffect
  movement_modifier_when_on_ground?: Double
  movement_modifier?: Double
  creation_shift?: Vector
  initial_speed?: Vector
  initial_height?: Float
  initial_vertical_speed?: Float
  initial_frame_speed?: Float
  shots_per_flare?: Uint32
  early_death_ticks?: Uint32
  shot_category?: AmmoCategoryID
}
/**
 * https://lua-api.factorio.com/stable/prototypes/ArtilleryProjectilePrototype.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "ArtilleryProjectilePrototype".
 */
export type ArtilleryProjectilePrototype = EntityPrototype & {
  reveal_map: Bool
  picture?: Sprite
  shadow?: Sprite
  chart_picture?: Sprite
  action?: Trigger
  final_action?: Trigger
  height_from_ground?: Float
  rotatable?: Bool
}
/**
 * https://lua-api.factorio.com/stable/prototypes/ArtilleryTurretPrototype.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "ArtilleryTurretPrototype".
 */
export type ArtilleryTurretPrototype = EntityWithOwnerPrototype & {
  gun: ItemID
  inventory_size: ItemStackIndex
  ammo_stack_limit: ItemCountType
  automated_ammo_count?: ItemCountType
  turret_rotation_speed: Double
  manual_range_modifier: Double
  alert_when_attacking?: Bool
  disable_automatic_firing?: Bool
  base_picture_secondary_draw_order?: Uint8
  base_picture_render_layer?: RenderLayer
  base_picture?: Animation4Way
  cannon_base_shift: Vector3D
  cannon_base_pictures?: RotatedSprite
  cannon_barrel_pictures?: RotatedSprite
  rotating_sound?: InterruptibleSound
  turn_after_shooting_cooldown?: Uint16
  cannon_parking_frame_count?: Uint16
  cannon_parking_speed?: Float
  circuit_wire_max_distance?: Double
  draw_copper_wires?: Bool
  draw_circuit_wires?: Bool
  circuit_connector?: CircuitConnectorDefinition
  cannon_barrel_recoil_shiftings?: Vector3D[] | {}
  cannon_barrel_recoil_shiftings_load_correction_matrix?: Vector3D[] | {}
  cannon_barrel_light_direction?: Vector3D
}
/**
 * https://lua-api.factorio.com/stable/prototypes/ArtilleryWagonPrototype.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "ArtilleryWagonPrototype".
 */
export type ArtilleryWagonPrototype = RollingStockPrototype & {
  gun: ItemID
  inventory_size: ItemStackIndex
  ammo_stack_limit: ItemCountType
  automated_ammo_count?: ItemCountType
  turret_rotation_speed: Double
  manual_range_modifier: Double
  disable_automatic_firing?: Bool
  cannon_base_pictures?: RollingStockRotatedSlopedGraphics
  cannon_base_height?: Double
  cannon_base_shift_when_vertical?: Double
  cannon_base_shift_when_horizontal?: Double
  cannon_barrel_pictures?: RollingStockRotatedSlopedGraphics
  rotating_sound?: InterruptibleSound
  turn_after_shooting_cooldown?: Uint16
  cannon_parking_frame_count?: Uint16
  cannon_parking_speed?: Float
  cannon_barrel_recoil_shiftings?: Vector3D[] | {}
  cannon_barrel_recoil_shiftings_load_correction_matrix?: Vector3D[] | {}
  cannon_barrel_light_direction?: Vector3D
}
/**
 * https://lua-api.factorio.com/stable/prototypes/RollingStockPrototype.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "RollingStockPrototype".
 */
export type RollingStockPrototype = VehiclePrototype & {
  max_speed: Double
  air_resistance: Double
  joint_distance: Double
  connection_distance: Double
  pictures?: RollingStockRotatedSlopedGraphics
  wheels?: RollingStockRotatedSlopedGraphics
  vertical_selection_shift: Double
  drive_over_tie_trigger?: TriggerEffect
  drive_over_tie_trigger_minimal_speed?: Double
  tie_distance?: Double
  back_light?: LightDefinition
  stand_by_light?: LightDefinition
  horizontal_doors?: Animation
  vertical_doors?: Animation
  color?: Color
  allow_manual_color?: Bool
  allow_robot_dispatch_in_automatic_mode?: Bool
  default_copy_color_from_train_stop?: Bool
  transition_collision_mask?: CollisionMaskConnector
  elevated_collision_mask?: CollisionMaskConnector
  elevated_selection_priority?: Uint8
  elevated_rail_sound?: MainSound
  drive_over_elevated_tie_trigger?: TriggerEffect
  door_opening_sound?: InterruptibleSound
  door_closing_sound?: InterruptibleSound
}
/**
 * https://lua-api.factorio.com/stable/prototypes/VehiclePrototype.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "VehiclePrototype".
 */
export type VehiclePrototype = EntityWithOwnerPrototype & {
  weight: Double
  'braking_power or braking_force': Energy | Double
  'friction or friction_force': Double
  energy_per_hit_point: Double
  terrain_friction_modifier?: Float
  impact_speed_to_volume_ratio?: Double
  stop_trigger_speed?: Double
  crash_trigger?: TriggerEffect
  stop_trigger?: TriggerEffect
  equipment_grid?: EquipmentGridID
  minimap_representation?: Sprite
  selected_minimap_representation?: Sprite
  allow_passengers?: Bool
  deliver_category?: String
  chunk_exploration_radius?: Uint32
  allow_remote_driving?: Bool
}
/**
 * https://lua-api.factorio.com/stable/prototypes/AsteroidChunkPrototype.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "AsteroidChunkPrototype".
 */
export type AsteroidChunkPrototype = Prototype & {
  minable?: MinableProperties
  dying_trigger_effect?: TriggerEffect
  graphics_set?: AsteroidGraphicsSet
  icons?: IconData[] | {}
  icon?: FileName
  icon_size?: SpriteSizeType
  hide_from_signal_gui?: Bool
}
/**
 * https://lua-api.factorio.com/stable/prototypes/AsteroidCollectorPrototype.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "AsteroidCollectorPrototype".
 */
export type AsteroidCollectorPrototype = EntityWithOwnerPrototype & {
  arm_inventory_size?: ItemStackIndex
  arm_inventory_size_quality_increase?: ItemStackIndex
  inventory_size?: ItemStackIndex
  inventory_size_quality_increase?: ItemStackIndex
  graphics_set: {
    animation?: Animation4Way
    status_lamp_picture_on?: RotatedSprite
    status_lamp_picture_full?: RotatedSprite
    status_lamp_picture_off?: RotatedSprite
    below_arm_pictures?: RotatedSprite
    below_ground_pictures?: RotatedSprite
    arm_head_animation?: RotatedAnimation
    arm_head_top_animation?: RotatedAnimation
    arm_link?: RotatedSprite
  }
  passive_energy_usage: Energy
  arm_energy_usage: Energy
  arm_slow_energy_usage: Energy
  energy_usage_quality_scaling?: Float
  arm_count_base?: Uint32
  arm_count_quality_scaling?: Uint32
  head_collection_radius?: Float
  collection_box_offset?: Float
  deposit_radius?: Float
  arm_speed_base?: Float
  arm_speed_quality_scaling?: Float
  arm_angular_speed_cap_base?: Float
  arm_angular_speed_cap_quality_scaling?: Float
  tether_size?: Float
  unpowered_arm_speed_scale?: Float
  minimal_arm_swing_segment_retraction?: Uint32
  held_items_offset?: Float
  held_items_spread?: Float
  held_items_display_count?: Uint8
  munch_sound?: Sound
  deposit_sound?: Sound
  arm_extend_sound?: Sound
  arm_retract_sound?: Sound
  energy_source: ElectricEnergySource | VoidEnergySource
  circuit_wire_max_distance?: Double
  draw_copper_wires?: Bool
  draw_circuit_wires?: Bool
  radius_visualisation_picture?: Sprite
  collection_radius: Double
  /**
   * @minItems 4
   * @maxItems 4
   */
  circuit_connector?: [
    CircuitConnectorDefinition,
    CircuitConnectorDefinition,
    CircuitConnectorDefinition,
    CircuitConnectorDefinition,
  ]
  arm_color_gradient?: Color[] | {}
}
/**
 * https://lua-api.factorio.com/stable/prototypes/AsteroidPrototype.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "AsteroidPrototype".
 */
export type AsteroidPrototype = EntityWithOwnerPrototype & {
  mass?: Double
  graphics_set?: AsteroidGraphicsSet
}
/**
 * https://lua-api.factorio.com/stable/prototypes/AutoplaceControl.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "AutoplaceControl".
 */
export type AutoplaceControl = Prototype & {
  category: 'resource' | 'terrain' | 'cliff' | 'enemy'
  richness?: Bool
  can_be_disabled?: Bool
}
/**
 * https://lua-api.factorio.com/stable/prototypes/BatteryEquipmentPrototype.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "BatteryEquipmentPrototype".
 */
export type BatteryEquipmentPrototype = EquipmentPrototype
/**
 * https://lua-api.factorio.com/stable/prototypes/BeaconPrototype.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "BeaconPrototype".
 */
export type BeaconPrototype = EntityWithOwnerPrototype & {
  energy_usage: Energy
  energy_source: ElectricEnergySource | VoidEnergySource
  supply_area_distance: Double
  distribution_effectivity: Double
  distribution_effectivity_bonus_per_quality_level?: Double
  module_slots: ItemStackIndex
  graphics_set?: BeaconGraphicsSet
  animation?: Animation
  base_picture?: Animation
  perceived_performance?: PerceivedPerformance
  radius_visualisation_picture?: Sprite
  allowed_effects?: EffectTypeLimitation
  allowed_module_categories?: ModuleCategoryID[] | {}
  profile?: Double[] | {}
  beacon_counter?: 'total' | 'same_type'
}
/**
 * https://lua-api.factorio.com/stable/prototypes/BeamPrototype.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "BeamPrototype".
 */
export type BeamPrototype = EntityPrototype & {
  action?: Trigger
  width: Float
  damage_interval: Uint32
  target_offset?: Vector
  random_target_offset?: Bool
  action_triggered_automatically?: Bool
  graphics_set: BeamGraphicsSet
}
/**
 * https://lua-api.factorio.com/stable/prototypes/BeltImmunityEquipmentPrototype.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "BeltImmunityEquipmentPrototype".
 */
export type BeltImmunityEquipmentPrototype = EquipmentPrototype & {
  energy_consumption: Energy
}
/**
 * https://lua-api.factorio.com/stable/prototypes/BoilerPrototype.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "BoilerPrototype".
 */
export type BoilerPrototype = EntityWithOwnerPrototype & {
  pictures?: {
    north: BoilerPictures
    east: BoilerPictures
    south: BoilerPictures
    west: BoilerPictures
  }
  energy_source: EnergySource
  fluid_box: FluidBox
  output_fluid_box: FluidBox
  energy_consumption: Energy
  burning_cooldown: Uint16
  target_temperature?: Float
  fire_glow_flicker_enabled?: Bool
  fire_flicker_enabled?: Bool
  mode?: 'heat-fluid-inside' | 'output-to-separate-pipe'
}
/**
 * https://lua-api.factorio.com/stable/prototypes/BuildEntityAchievementPrototype.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "BuildEntityAchievementPrototype".
 */
export type BuildEntityAchievementPrototype = AchievementPrototype & {
  to_build: EntityID
  amount?: Uint32
  limited_to_one_game?: Bool
  within?: MapTick
}
/**
 * https://lua-api.factorio.com/stable/prototypes/BurnerGeneratorPrototype.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "BurnerGeneratorPrototype".
 */
export type BurnerGeneratorPrototype = EntityWithOwnerPrototype & {
  energy_source: ElectricEnergySource
  burner: BurnerEnergySource
  animation?: Animation4Way
  max_power_output: Energy
  idle_animation?: Animation4Way
  always_draw_idle_animation?: Bool
  perceived_performance?: PerceivedPerformance
}
/**
 * https://lua-api.factorio.com/stable/prototypes/BurnerUsagePrototype.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "BurnerUsagePrototype".
 */
export type BurnerUsagePrototype = Prototype & {
  empty_slot_sprite: Sprite
  empty_slot_caption: LocalisedString
  empty_slot_description?: LocalisedString
  icon: Sprite
  no_fuel_status?: LocalisedString
  accepted_fuel_key: String
  burned_in_key: String
}
/**
 * https://lua-api.factorio.com/stable/prototypes/CaptureRobotPrototype.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "CaptureRobotPrototype".
 */
export type CaptureRobotPrototype = FlyingRobotPrototype & {
  capture_speed?: Double
  search_radius?: Double
  destroy_action?: Trigger
  capture_animation?: Animation
}
/**
 * https://lua-api.factorio.com/stable/prototypes/FlyingRobotPrototype.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "FlyingRobotPrototype".
 */
export type FlyingRobotPrototype = EntityWithOwnerPrototype & {
  speed: Double
  max_speed?: Double
  max_energy?: Energy
  energy_per_move?: Energy
  energy_per_tick?: Energy
  min_to_charge?: Float
  max_to_charge?: Float
  speed_multiplier_when_out_of_energy?: Float
}
/**
 * https://lua-api.factorio.com/stable/prototypes/CarPrototype.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "CarPrototype".
 */
export type CarPrototype = VehiclePrototype & {
  animation?: RotatedAnimation
  effectivity: Double
  consumption: Energy
  rotation_speed: Double
  energy_source: BurnerEnergySource | VoidEnergySource
  turret_animation?: RotatedAnimation
  light_animation?: RotatedAnimation
  render_layer?: RenderLayer
  tank_driving?: Bool
  auto_sort_inventory?: Bool
  has_belt_immunity?: Bool
  immune_to_tree_impacts?: Bool
  immune_to_rock_impacts?: Bool
  immune_to_cliff_impacts?: Bool
  turret_rotation_speed?: Float
  turret_return_timeout?: Uint32
  inventory_size: ItemStackIndex
  trash_inventory_size?: ItemStackIndex
  light?: LightDefinition
  sound_no_fuel?: Sound
  darkness_to_render_light_animation?: Float
  track_particle_triggers?: FootstepTriggerEffectList
  guns?: ItemID[] | {}
}
/**
 * https://lua-api.factorio.com/stable/prototypes/CargoBayPrototype.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "CargoBayPrototype".
 */
export type CargoBayPrototype = EntityWithOwnerPrototype & {
  graphics_set?: CargoBayConnectableGraphicsSet
  platform_graphics_set?: CargoBayConnectableGraphicsSet
  inventory_size_bonus: ItemStackIndex
  hatch_definitions?: CargoHatchDefinition[] | {}
}
/**
 * https://lua-api.factorio.com/stable/prototypes/CargoLandingPadPrototype.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "CargoLandingPadPrototype".
 */
export type CargoLandingPadPrototype = EntityWithOwnerPrototype & {
  graphics_set?: CargoBayConnectableGraphicsSet
  inventory_size: ItemStackIndex
  trash_inventory_size?: ItemStackIndex
  circuit_wire_max_distance?: Double
  draw_copper_wires?: Bool
  draw_circuit_wires?: Bool
  circuit_connector?: CircuitConnectorDefinition
  cargo_station_parameters: CargoStationParameters
  robot_animation?: Animation
  robot_landing_location_offset?: Vector
  robot_opened_duration?: Uint8
  robot_animation_sound?: Sound
  radar_range?: Uint32
  radar_visualisation_color?: Color
}
/**
 * https://lua-api.factorio.com/stable/prototypes/CargoPodPrototype.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "CargoPodPrototype".
 */
export type CargoPodPrototype = EntityWithOwnerPrototype & {
  default_graphic?: ProcessionGraphic
  default_shadow_graphic?: ProcessionGraphic
  procession_graphic_catalogue?: ProcessionGraphicCatalogue
  procession_audio_catalogue?: ProcessionAudioCatalogue
  shadow_slave_entity?: EntityID
  inventory_size: ItemStackIndex
  spawned_container: EntityID
}
/**
 * https://lua-api.factorio.com/stable/prototypes/CargoWagonPrototype.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "CargoWagonPrototype".
 */
export type CargoWagonPrototype = RollingStockPrototype & {
  inventory_size: ItemStackIndex
}
/**
 * https://lua-api.factorio.com/stable/prototypes/ChainActiveTriggerPrototype.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "ChainActiveTriggerPrototype".
 */
export type ChainActiveTriggerPrototype = ActiveTriggerPrototype & {
  action?: Trigger
  max_jumps?: Uint32
  max_range_per_jump?: Double
  max_range?: Double
  jump_delay_ticks?: MapTick
  fork_chance?: Double
  fork_chance_increase_per_quality_level?: Double
  max_forks_per_jump?: Uint32
  max_forks?: Uint32
}
/**
 * https://lua-api.factorio.com/stable/prototypes/ChangedSurfaceAchievementPrototype.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "ChangedSurfaceAchievementPrototype".
 */
export type ChangedSurfaceAchievementPrototype = AchievementPrototype & {
  surface?: String
}
/**
 * https://lua-api.factorio.com/stable/prototypes/CharacterCorpsePrototype.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "CharacterCorpsePrototype".
 */
export type CharacterCorpsePrototype = EntityPrototype & {
  time_to_live: Uint32
  render_layer?: RenderLayer
  pictures?: AnimationVariations
  picture?: Animation
  armor_picture_mapping?: {
    [k: string]: Int32
  }
}
/**
 * https://lua-api.factorio.com/stable/prototypes/CliffPrototype.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "CliffPrototype".
 */
export type CliffPrototype = EntityPrototype & {
  orientations: {
    west_to_east: OrientedCliffPrototype
    north_to_south: OrientedCliffPrototype
    east_to_west: OrientedCliffPrototype
    south_to_north: OrientedCliffPrototype
    west_to_north: OrientedCliffPrototype
    north_to_east: OrientedCliffPrototype
    east_to_south: OrientedCliffPrototype
    south_to_west: OrientedCliffPrototype
    west_to_south: OrientedCliffPrototype
    north_to_west: OrientedCliffPrototype
    east_to_north: OrientedCliffPrototype
    south_to_east: OrientedCliffPrototype
    west_to_none: OrientedCliffPrototype
    none_to_east: OrientedCliffPrototype
    north_to_none: OrientedCliffPrototype
    none_to_south: OrientedCliffPrototype
    east_to_none: OrientedCliffPrototype
    none_to_west: OrientedCliffPrototype
    south_to_none: OrientedCliffPrototype
    none_to_north: OrientedCliffPrototype
  }
  grid_size: Vector
  grid_offset: Vector
  cliff_explosive?: ItemID
  place_as_crater?: CraterPlacementDefinition
}
/**
 * https://lua-api.factorio.com/stable/prototypes/CollisionLayerPrototype.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "CollisionLayerPrototype".
 */
export type CollisionLayerPrototype = Prototype
/**
 * https://lua-api.factorio.com/stable/prototypes/CombatRobotCountAchievementPrototype.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "CombatRobotCountAchievementPrototype".
 */
export type CombatRobotCountAchievementPrototype = AchievementPrototype & {
  count?: Uint32
}
/**
 * https://lua-api.factorio.com/stable/prototypes/CombatRobotPrototype.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "CombatRobotPrototype".
 */
export type CombatRobotPrototype = FlyingRobotPrototype & {
  time_to_live: Uint32
  attack_parameters: AttackParameters
  idle?: RotatedAnimation
  shadow_idle?: RotatedAnimation
  in_motion?: RotatedAnimation
  shadow_in_motion?: RotatedAnimation
  range_from_player?: Double
  friction?: Double
  destroy_action?: Trigger
  follows_player?: Bool
  light?: LightDefinition
}
/**
 * https://lua-api.factorio.com/stable/prototypes/CompleteObjectiveAchievementPrototype.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "CompleteObjectiveAchievementPrototype".
 */
export type CompleteObjectiveAchievementPrototype = AchievementPrototypeWithCondition & {
  within?: MapTick
}
/**
 * https://lua-api.factorio.com/stable/prototypes/ConstantCombinatorPrototype.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "ConstantCombinatorPrototype".
 */
export type ConstantCombinatorPrototype = EntityWithOwnerPrototype & {
  sprites?: Sprite4Way
  activity_led_sprites?: Sprite4Way
  /**
   * @minItems 4
   * @maxItems 4
   */
  activity_led_light_offsets: [Vector, Vector, Vector, Vector]
  /**
   * @minItems 4
   * @maxItems 4
   */
  circuit_wire_connection_points: [
    WireConnectionPoint,
    WireConnectionPoint,
    WireConnectionPoint,
    WireConnectionPoint,
  ]
  activity_led_light?: LightDefinition
  circuit_wire_max_distance?: Double
  draw_copper_wires?: Bool
  draw_circuit_wires?: Bool
}
/**
 * https://lua-api.factorio.com/stable/prototypes/ConstructWithRobotsAchievementPrototype.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "ConstructWithRobotsAchievementPrototype".
 */
export type ConstructWithRobotsAchievementPrototype = AchievementPrototype & {
  limited_to_one_game: Bool
  amount?: Uint32
  more_than_manually?: Bool
}
/**
 * https://lua-api.factorio.com/stable/prototypes/ConstructionRobotPrototype.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "ConstructionRobotPrototype".
 */
export type ConstructionRobotPrototype = RobotWithLogisticInterfacePrototype & {
  construction_vector: Vector
  working?: RotatedAnimation
  shadow_working?: RotatedAnimation
  smoke?: Animation
  sparks?: AnimationVariations
  repairing_sound?: Sound
  mined_sound_volume_modifier?: Float
  working_light?: LightDefinition
}
/**
 * https://lua-api.factorio.com/stable/prototypes/RobotWithLogisticInterfacePrototype.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "RobotWithLogisticInterfacePrototype".
 */
export type RobotWithLogisticInterfacePrototype = FlyingRobotPrototype & {
  max_payload_size: ItemCountType
  idle?: RotatedAnimation
  in_motion?: RotatedAnimation
  shadow_idle?: RotatedAnimation
  shadow_in_motion?: RotatedAnimation
  destroy_action?: Trigger
  draw_cargo?: Bool
  charging_sound?: InterruptibleSound
}
/**
 * https://lua-api.factorio.com/stable/prototypes/ContainerPrototype.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "ContainerPrototype".
 */
export type ContainerPrototype = EntityWithOwnerPrototype & {
  inventory_size: ItemStackIndex
  quality_affects_inventory_size?: Bool
  picture?: Sprite
  inventory_type?: 'normal' | 'with_bar' | 'with_filters_and_bar'
  circuit_wire_max_distance?: Double
  draw_copper_wires?: Bool
  draw_circuit_wires?: Bool
  circuit_connector?: CircuitConnectorDefinition
  default_status?: EntityStatus
}
/**
 * https://lua-api.factorio.com/stable/prototypes/CorpsePrototype.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "CorpsePrototype".
 */
export type CorpsePrototype = EntityPrototype & {
  dying_speed?: Float
  splash_speed?: Float
  time_before_shading_off?: Uint32
  time_before_removed?: Uint32
  expires?: Bool
  remove_on_entity_placement?: Bool
  remove_on_tile_placement?: Bool
  auto_setup_collision_box?: Bool
  final_render_layer?: RenderLayer
  ground_patch_render_layer?: RenderLayer
  animation_render_layer?: RenderLayer
  splash_render_layer?: RenderLayer
  animation_overlay_render_layer?: RenderLayer
  animation_overlay_final_render_layer?: RenderLayer
  shuffle_directions_at_frame?: Uint8
  use_tile_color_for_ground_patch_tint?: Bool
  use_decay_layer?: Bool
  underwater_layer_offset?: Int8
  ground_patch_fade_in_delay?: Float
  ground_patch_fade_in_speed?: Float
  ground_patch_fade_out_start?: Float
  decay_frame_transition_duration?: Float
  animation?: RotatedAnimationVariations
  animation_overlay?: RotatedAnimationVariations
  decay_animation?: RotatedAnimationVariations
  splash?: AnimationVariations
  ground_patch?: AnimationVariations
  ground_patch_higher?: AnimationVariations
  ground_patch_decay?: AnimationVariations
  underwater_patch?: RotatedSprite
  ground_patch_fade_out_duration?: Float
  direction_shuffle?: (Uint16[] | {})[] | {}
}
/**
 * https://lua-api.factorio.com/stable/prototypes/CreatePlatformAchievementPrototype.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "CreatePlatformAchievementPrototype".
 */
export type CreatePlatformAchievementPrototype = AchievementPrototype & {
  amount?: Uint32
}
/**
 * https://lua-api.factorio.com/stable/prototypes/CurvedRailAPrototype.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "CurvedRailAPrototype".
 */
export type CurvedRailAPrototype = RailPrototype
/**
 * https://lua-api.factorio.com/stable/prototypes/RailPrototype.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "RailPrototype".
 */
export type RailPrototype = EntityWithOwnerPrototype & {
  walking_sound?: Sound
  pictures: RailPictureSet
  fence_pictures?: RailFenceGraphicsSet
  extra_planner_penalty?: Double
  extra_planner_goal_penalty?: Double
  forced_fence_segment_count?: Uint8
  ending_shifts?: Vector[] | {}
  deconstruction_marker_positions?: Vector[] | {}
  removes_soft_decoratives?: Bool
}
/**
 * https://lua-api.factorio.com/stable/prototypes/CurvedRailBPrototype.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "CurvedRailBPrototype".
 */
export type CurvedRailBPrototype = RailPrototype
/**
 * https://lua-api.factorio.com/stable/prototypes/CustomEventPrototype.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "CustomEventPrototype".
 */
export type CustomEventPrototype = Prototype
/**
 * https://lua-api.factorio.com/stable/prototypes/CustomInputPrototype.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "CustomInputPrototype".
 */
export type CustomInputPrototype = Prototype & {
  key_sequence: String
  alternative_key_sequence?: String
  controller_key_sequence?: String
  controller_alternative_key_sequence?: String
  linked_game_control?: LinkedGameControl
  consuming?: ConsumingType
  enabled?: Bool
  enabled_while_spectating?: Bool
  enabled_while_in_cutscene?: Bool
  include_selected_prototype?: Bool
  item_to_spawn?: ItemID
  action?:
    | 'lua'
    | 'spawn-item'
    | 'toggle-personal-roboport'
    | 'toggle-personal-logistic-requests'
    | 'toggle-equipment-movement-bonus'
  block_modifiers?: Bool
}
/**
 * https://lua-api.factorio.com/stable/prototypes/DamageType.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "DamageType".
 */
export type DamageType = Prototype
/**
 * https://lua-api.factorio.com/stable/prototypes/DeciderCombinatorPrototype.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "DeciderCombinatorPrototype".
 */
export type DeciderCombinatorPrototype = CombinatorPrototype & {
  equal_symbol_sprites?: Sprite4Way
  greater_symbol_sprites?: Sprite4Way
  less_symbol_sprites?: Sprite4Way
  not_equal_symbol_sprites?: Sprite4Way
  greater_or_equal_symbol_sprites?: Sprite4Way
  less_or_equal_symbol_sprites?: Sprite4Way
}
/**
 * https://lua-api.factorio.com/stable/prototypes/DeconstructWithRobotsAchievementPrototype.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "DeconstructWithRobotsAchievementPrototype".
 */
export type DeconstructWithRobotsAchievementPrototype = AchievementPrototype & {
  amount: Uint32
}
/**
 * https://lua-api.factorio.com/stable/prototypes/DeconstructibleTileProxyPrototype.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "DeconstructibleTileProxyPrototype".
 */
export type DeconstructibleTileProxyPrototype = EntityPrototype
/**
 * https://lua-api.factorio.com/stable/prototypes/DecorativePrototype.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "DecorativePrototype".
 */
export type DecorativePrototype = Prototype & {
  pictures: SpriteVariations
  stateless_visualisation?: StatelessVisualisations
  stateless_visualisation_variations?: StatelessVisualisations[] | {}
  collision_box?: BoundingBox
  render_layer?: RenderLayer
  grows_through_rail_path?: Bool
  tile_layer?: Int16
  decal_overdraw_priority?: Uint16
  collision_mask?: CollisionMaskConnector
  walking_sound?: Sound
  trigger_effect?: TriggerEffect
  minimal_separation?: Double
  target_count?: Uint16
  placed_effect?: TriggerEffect
  autoplace?: AutoplaceSpecification
}
/**
 * https://lua-api.factorio.com/stable/prototypes/DelayedActiveTriggerPrototype.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "DelayedActiveTriggerPrototype".
 */
export type DelayedActiveTriggerPrototype = ActiveTriggerPrototype & {
  action: Trigger
  delay: Uint32
  repeat_count?: Uint32
  repeat_delay?: Uint32
  cancel_when_source_is_destroyed?: Bool
}
/**
 * https://lua-api.factorio.com/stable/prototypes/DeliverByRobotsAchievementPrototype.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "DeliverByRobotsAchievementPrototype".
 */
export type DeliverByRobotsAchievementPrototype = AchievementPrototype & {
  amount: Uint32
}
/**
 * https://lua-api.factorio.com/stable/prototypes/DepleteResourceAchievementPrototype.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "DepleteResourceAchievementPrototype".
 */
export type DepleteResourceAchievementPrototype = AchievementPrototype & {
  amount?: Uint32
  limited_to_one_game?: Bool
}
/**
 * https://lua-api.factorio.com/stable/prototypes/DestroyCliffAchievementPrototype.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "DestroyCliffAchievementPrototype".
 */
export type DestroyCliffAchievementPrototype = AchievementPrototype & {
  amount?: Uint32
  limited_to_one_game?: Bool
}
/**
 * https://lua-api.factorio.com/stable/prototypes/DisplayPanelPrototype.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "DisplayPanelPrototype".
 */
export type DisplayPanelPrototype = EntityWithOwnerPrototype & {
  sprites?: Sprite4Way
  max_text_width?: Uint32
  text_shift?: Vector
  text_color?: Color
  background_color?: Color
  circuit_wire_max_distance?: Double
  draw_copper_wires?: Bool
  draw_circuit_wires?: Bool
  /**
   * @minItems 4
   * @maxItems 4
   */
  circuit_connector?: [
    CircuitConnectorDefinition,
    CircuitConnectorDefinition,
    CircuitConnectorDefinition,
    CircuitConnectorDefinition,
  ]
}
/**
 * https://lua-api.factorio.com/stable/prototypes/DontBuildEntityAchievementPrototype.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "DontBuildEntityAchievementPrototype".
 */
export type DontBuildEntityAchievementPrototype = AchievementPrototypeWithCondition & {
  dont_build: EntityID | EntityID[] | {}
  amount?: Uint32
  research_with?: ItemID | ItemID[] | {}
}
/**
 * https://lua-api.factorio.com/stable/prototypes/DontCraftManuallyAchievementPrototype.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "DontCraftManuallyAchievementPrototype".
 */
export type DontCraftManuallyAchievementPrototype = AchievementPrototypeWithCondition & {
  amount: Uint32
}
/**
 * https://lua-api.factorio.com/stable/prototypes/DontKillManuallyAchievementPrototype.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "DontKillManuallyAchievementPrototype".
 */
export type DontKillManuallyAchievementPrototype = AchievementPrototypeWithCondition & {
  to_kill?: EntityID
  type_not_to_kill?: String
}
/**
 * https://lua-api.factorio.com/stable/prototypes/DontResearchBeforeResearchingAchievementPrototype.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "DontResearchBeforeResearchingAchievementPrototype".
 */
export type DontResearchBeforeResearchingAchievementPrototype =
  AchievementPrototypeWithCondition & {
    dont_research: ItemID | ItemID[] | {}
    research_with: ItemID | ItemID[] | {}
  }
/**
 * https://lua-api.factorio.com/stable/prototypes/DontUseEntityInEnergyProductionAchievementPrototype.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "DontUseEntityInEnergyProductionAchievementPrototype".
 */
export type DontUseEntityInEnergyProductionAchievementPrototype =
  AchievementPrototypeWithCondition & {
    excluded: EntityID | EntityID[] | {}
    included?: EntityID | EntityID[] | {}
    last_hour_only?: Bool
    minimum_energy_produced?: Energy
  }
/**
 * https://lua-api.factorio.com/stable/prototypes/ElectricEnergyInterfacePrototype.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "ElectricEnergyInterfacePrototype".
 */
export type ElectricEnergyInterfacePrototype = EntityWithOwnerPrototype & {
  energy_source: ElectricEnergySource
  energy_production?: Energy
  energy_usage?: Energy
  gui_mode?: 'all' | 'none' | 'admins'
  continuous_animation?: Bool
  render_layer?: RenderLayer
  light?: LightDefinition
  picture?: Sprite
  pictures?: Sprite4Way
  animation?: Animation
  animations?: Animation4Way
}
/**
 * https://lua-api.factorio.com/stable/prototypes/ElectricPolePrototype.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "ElectricPolePrototype".
 */
export type ElectricPolePrototype = EntityWithOwnerPrototype & {
  pictures?: RotatedSprite
  supply_area_distance: Double
  connection_points: WireConnectionPoint[] | {}
  radius_visualisation_picture?: Sprite
  active_picture?: Sprite
  maximum_wire_distance?: Double
  draw_copper_wires?: Bool
  draw_circuit_wires?: Bool
  light?: LightDefinition
  track_coverage_during_build_by_moving?: Bool
  auto_connect_up_to_n_wires?: Uint8
}
/**
 * https://lua-api.factorio.com/stable/prototypes/ElectricTurretPrototype.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "ElectricTurretPrototype".
 */
export type ElectricTurretPrototype = TurretPrototype & {
  energy_source: ElectricEnergySource | VoidEnergySource
}
/**
 * https://lua-api.factorio.com/stable/prototypes/ElevatedCurvedRailAPrototype.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "ElevatedCurvedRailAPrototype".
 */
export type ElevatedCurvedRailAPrototype = CurvedRailAPrototype
/**
 * https://lua-api.factorio.com/stable/prototypes/ElevatedCurvedRailBPrototype.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "ElevatedCurvedRailBPrototype".
 */
export type ElevatedCurvedRailBPrototype = CurvedRailBPrototype
/**
 * https://lua-api.factorio.com/stable/prototypes/ElevatedHalfDiagonalRailPrototype.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "ElevatedHalfDiagonalRailPrototype".
 */
export type ElevatedHalfDiagonalRailPrototype = HalfDiagonalRailPrototype
/**
 * https://lua-api.factorio.com/stable/prototypes/HalfDiagonalRailPrototype.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "HalfDiagonalRailPrototype".
 */
export type HalfDiagonalRailPrototype = RailPrototype
/**
 * https://lua-api.factorio.com/stable/prototypes/ElevatedStraightRailPrototype.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "ElevatedStraightRailPrototype".
 */
export type ElevatedStraightRailPrototype = StraightRailPrototype
/**
 * https://lua-api.factorio.com/stable/prototypes/StraightRailPrototype.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "StraightRailPrototype".
 */
export type StraightRailPrototype = RailPrototype
/**
 * https://lua-api.factorio.com/stable/prototypes/EnemySpawnerPrototype.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "EnemySpawnerPrototype".
 */
export type EnemySpawnerPrototype = EntityWithOwnerPrototype & {
  graphics_set: EnemySpawnerGraphicsSet
  max_count_of_owned_units: Uint32
  max_count_of_owned_defensive_units?: Uint32
  max_friends_around_to_spawn: Uint32
  max_defensive_friends_around_to_spawn?: Uint32
  /**
   * @minItems 2
   * @maxItems 2
   */
  spawning_cooldown: [Double, Double]
  spawning_radius: Double
  spawning_spacing: Double
  max_richness_for_spawn_shift: Double
  max_spawn_shift: Double
  call_for_help_radius: Double
  time_to_capture?: Uint32
  result_units: UnitSpawnDefinition[] | {}
  dying_sound?: Sound
  absorptions_per_second?: {
    [k: string]: EnemySpawnerAbsorption
  }
  min_darkness_to_spawn?: Float
  max_darkness_to_spawn?: Float
  spawn_decorations_on_expansion?: Bool
  spawn_decoration?: CreateDecorativesTriggerEffectItem[] | {}
  captured_spawner_entity?: EntityID
}
/**
 * https://lua-api.factorio.com/stable/prototypes/EnergyShieldEquipmentPrototype.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "EnergyShieldEquipmentPrototype".
 */
export type EnergyShieldEquipmentPrototype = EquipmentPrototype & {
  max_shield_value: Float
  energy_per_shield: Energy
}
/**
 * https://lua-api.factorio.com/stable/prototypes/EntityGhostPrototype.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "EntityGhostPrototype".
 */
export type EntityGhostPrototype = EntityPrototype & {
  medium_build_sound?: Sound
  large_build_sound?: Sound
  huge_build_sound?: Sound
  small_build_animated_sound?: Sound
  medium_build_animated_sound?: Sound
  large_build_animated_sound?: Sound
  huge_build_animated_sound?: Sound
}
/**
 * https://lua-api.factorio.com/stable/prototypes/EquipArmorAchievementPrototype.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "EquipArmorAchievementPrototype".
 */
export type EquipArmorAchievementPrototype = AchievementPrototype & {
  armor: ItemID
  alternative_armor: ItemID
  limit_quality: QualityID
  amount?: Uint32
  limited_to_one_game?: Bool
}
/**
 * https://lua-api.factorio.com/stable/prototypes/EquipmentCategory.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "EquipmentCategory".
 */
export type EquipmentCategory = Prototype
/**
 * https://lua-api.factorio.com/stable/prototypes/EquipmentGhostPrototype.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "EquipmentGhostPrototype".
 */
export type EquipmentGhostPrototype = EquipmentPrototype
/**
 * https://lua-api.factorio.com/stable/prototypes/EquipmentGridPrototype.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "EquipmentGridPrototype".
 */
export type EquipmentGridPrototype = Prototype & {
  equipment_categories: EquipmentCategoryID[] | {}
  width: Uint32
  height: Uint32
  locked?: Bool
}
/**
 * https://lua-api.factorio.com/stable/prototypes/ExplosionPrototype.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "ExplosionPrototype".
 */
export type ExplosionPrototype = EntityPrototype & {
  animations: AnimationVariations
  sound?: Sound
  smoke?: TrivialSmokeID
  height?: Float
  smoke_slow_down_factor?: Float
  smoke_count?: Uint16
  rotate?: Bool
  beam?: Bool
  correct_rotation?: Bool
  scale_animation_speed?: Bool
  fade_in_duration?: Uint8
  fade_out_duration?: Uint8
  render_layer?: RenderLayer
  scale_in_duration?: Uint8
  scale_out_duration?: Uint8
  scale_end?: Float
  scale_increment_per_tick?: Float
  light_intensity_factor_initial?: Float
  light_intensity_factor_final?: Float
  light_size_factor_initial?: Float
  light_size_factor_final?: Float
  light?: LightDefinition
  light_intensity_peak_start_progress?: Float
  light_intensity_peak_end_progress?: Float
  light_size_peak_start_progress?: Float
  light_size_peak_end_progress?: Float
  scale_initial?: Float
  scale_initial_deviation?: Float
  scale?: Float
  scale_deviation?: Float
}
/**
 * https://lua-api.factorio.com/stable/prototypes/FireFlamePrototype.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "FireFlamePrototype".
 */
export type FireFlamePrototype = EntityPrototype & {
  damage_per_tick: DamageParameters
  spread_delay: Uint32
  spread_delay_deviation: Uint32
  render_layer?: RenderLayer
  initial_render_layer?: RenderLayer
  secondary_render_layer?: RenderLayer
  small_tree_fire_pictures?: AnimationVariations
  pictures?: AnimationVariations
  smoke_source_pictures?: AnimationVariations
  secondary_pictures?: AnimationVariations
  burnt_patch_pictures?: SpriteVariations
  secondary_picture_fade_out_start?: Uint32
  secondary_picture_fade_out_duration?: Uint32
  spawn_entity?: EntityID
  smoke?: SmokeSource[] | {}
  maximum_spread_count?: Uint16
  initial_flame_count?: Uint8
  uses_alternative_behavior?: Bool
  limit_overlapping_particles?: Bool
  tree_dying_factor?: Float
  fade_in_duration?: Uint32
  fade_out_duration?: Uint32
  initial_lifetime?: Uint32
  damage_multiplier_decrease_per_tick?: Float
  damage_multiplier_increase_per_added_fuel?: Float
  maximum_damage_multiplier?: Float
  lifetime_increase_by?: Uint32
  lifetime_increase_cooldown?: Uint32
  maximum_lifetime?: Uint32
  add_fuel_cooldown?: Uint32
  delay_between_initial_flames?: Uint32
  smoke_fade_in_duration?: Uint32
  smoke_fade_out_duration?: Uint32
  on_fuel_added_action?: Trigger
  on_damage_tick_effect?: Trigger
  light?: LightDefinition
  light_size_modifier_per_flame?: Float
  light_size_modifier_maximum?: Float
  particle_alpha_blend_duration?: Uint16
  burnt_patch_lifetime?: Uint32
  burnt_patch_alpha_default?: Float
  particle_alpha?: Float
  particle_alpha_deviation?: Float
  flame_alpha?: Float
  flame_alpha_deviation?: Float
  burnt_patch_alpha_variations?:
    | {
        tile: TileID
        alpha: Float
      }[]
    | {}
}
/**
 * https://lua-api.factorio.com/stable/prototypes/FishPrototype.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "FishPrototype".
 */
export type FishPrototype = EntityWithHealthPrototype & {
  pictures?: SpriteVariations
}
/**
 * https://lua-api.factorio.com/stable/prototypes/FluidStreamPrototype.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "FluidStreamPrototype".
 */
export type FluidStreamPrototype = EntityPrototype & {
  particle_spawn_interval: Uint16
  particle_horizontal_speed: Float
  particle_horizontal_speed_deviation: Float
  particle_vertical_acceleration: Float
  initial_action?: Trigger
  action?: Trigger
  special_neutral_target_damage?: DamageParameters
  width?: Float
  particle_buffer_size?: Uint32
  particle_spawn_timeout?: Uint16
  particle_start_alpha?: Float
  particle_end_alpha?: Float
  particle_start_scale?: Float
  particle_alpha_per_part?: Float
  particle_scale_per_part?: Float
  particle_fade_out_threshold?: Float
  particle_loop_exit_threshold?: Float
  particle_loop_frame_count?: Uint16
  particle_fade_out_duration?: Uint16
  spine_animation?: Animation
  particle?: Animation
  shadow?: Animation
  smoke_sources?: SmokeSource[] | {}
  progress_to_create_smoke?: Float
  stream_light?: LightDefinition
  ground_light?: LightDefinition
  target_position_deviation?: Double
  oriented_particle?: Bool
  shadow_scale_enabled?: Bool
}
/**
 * https://lua-api.factorio.com/stable/prototypes/FluidTurretPrototype.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "FluidTurretPrototype".
 */
export type FluidTurretPrototype = TurretPrototype & {
  fluid_buffer_size: FluidAmount
  fluid_buffer_input_flow: FluidAmount
  activation_buffer_ratio: FluidAmount
  fluid_box: FluidBox
  muzzle_light?: LightDefinition
  enough_fuel_indicator_light?: LightDefinition
  not_enough_fuel_indicator_light?: LightDefinition
  muzzle_animation?: Animation
  folded_muzzle_animation_shift?: AnimatedVector
  preparing_muzzle_animation_shift?: AnimatedVector
  prepared_muzzle_animation_shift?: AnimatedVector
  starting_attack_muzzle_animation_shift?: AnimatedVector
  attacking_muzzle_animation_shift?: AnimatedVector
  ending_attack_muzzle_animation_shift?: AnimatedVector
  folding_muzzle_animation_shift?: AnimatedVector
  enough_fuel_indicator_picture?: Sprite4Way
  not_enough_fuel_indicator_picture?: Sprite4Way
  out_of_ammo_alert_icon?: Sprite
}
/**
 * https://lua-api.factorio.com/stable/prototypes/FluidWagonPrototype.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "FluidWagonPrototype".
 */
export type FluidWagonPrototype = RollingStockPrototype & {
  capacity: FluidAmount
  tank_count?: Uint8
}
/**
 * https://lua-api.factorio.com/stable/prototypes/FuelCategory.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "FuelCategory".
 */
export type FuelCategory = Prototype & {
  fuel_value_type?: LocalisedString
}
/**
 * https://lua-api.factorio.com/stable/prototypes/FusionGeneratorPrototype.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "FusionGeneratorPrototype".
 */
export type FusionGeneratorPrototype = EntityWithOwnerPrototype & {
  energy_source: ElectricEnergySource
  graphics_set?: FusionGeneratorGraphicsSet
  input_fluid_box: FluidBox
  output_fluid_box: FluidBox
  max_fluid_usage: FluidAmount
  perceived_performance?: PerceivedPerformance
}
/**
 * https://lua-api.factorio.com/stable/prototypes/FusionReactorPrototype.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "FusionReactorPrototype".
 */
export type FusionReactorPrototype = EntityWithOwnerPrototype & {
  energy_source: ElectricEnergySource
  burner: BurnerEnergySource
  graphics_set: FusionReactorGraphicsSet
  input_fluid_box: FluidBox
  output_fluid_box: FluidBox
  neighbour_connectable?: NeighbourConnectable
  two_direction_only?: Bool
  neighbour_bonus?: Float
  power_input: Energy
  max_fluid_usage: FluidAmount
  perceived_performance?: PerceivedPerformance
}
/**
 * https://lua-api.factorio.com/stable/prototypes/GatePrototype.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "GatePrototype".
 */
export type GatePrototype = EntityWithOwnerPrototype & {
  vertical_animation?: Animation
  horizontal_animation?: Animation
  vertical_rail_animation_left?: Animation
  vertical_rail_animation_right?: Animation
  horizontal_rail_animation_left?: Animation
  horizontal_rail_animation_right?: Animation
  vertical_rail_base?: Animation
  horizontal_rail_base?: Animation
  wall_patch?: Animation
  opening_speed: Float
  activation_distance: Double
  timeout_to_close: Uint32
  opening_sound?: Sound
  closing_sound?: Sound
  fadeout_interval?: Uint32
  opened_collision_mask?: CollisionMaskConnector
}
/**
 * https://lua-api.factorio.com/stable/prototypes/GeneratorEquipmentPrototype.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "GeneratorEquipmentPrototype".
 */
export type GeneratorEquipmentPrototype = EquipmentPrototype & {
  power: Energy
  burner?: BurnerEnergySource
}
/**
 * https://lua-api.factorio.com/stable/prototypes/GeneratorPrototype.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "GeneratorPrototype".
 */
export type GeneratorPrototype = EntityWithOwnerPrototype & {
  energy_source: ElectricEnergySource
  fluid_box: FluidBox
  horizontal_animation?: Animation
  vertical_animation?: Animation
  horizontal_frozen_patch?: Sprite
  vertical_frozen_patch?: Sprite
  effectivity?: Double
  fluid_usage_per_tick: FluidAmount
  maximum_temperature: Float
  smoke?: SmokeSource[] | {}
  burns_fluid?: Bool
  scale_fluid_usage?: Bool
  destroy_non_fuel_fluid?: Bool
  perceived_performance?: PerceivedPerformance
  max_power_output?: Energy
}
/**
 * https://lua-api.factorio.com/stable/prototypes/GroupAttackAchievementPrototype.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "GroupAttackAchievementPrototype".
 */
export type GroupAttackAchievementPrototype = AchievementPrototype & {
  amount?: Uint32
  entities?: EntityID[] | {}
}
/**
 * https://lua-api.factorio.com/stable/prototypes/GuiStyle.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "GuiStyle".
 */
export type GuiStyle = PrototypeBase & {
  default_tileset?: FileName
  default_sprite_scale?: Double
  default_sprite_priority?: SpritePriority
}
/**
 * https://lua-api.factorio.com/stable/prototypes/HeatInterfacePrototype.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "HeatInterfacePrototype".
 */
export type HeatInterfacePrototype = EntityWithOwnerPrototype & {
  heat_buffer: HeatBuffer
  picture?: Sprite
  gui_mode?: 'all' | 'none' | 'admins'
}
/**
 * https://lua-api.factorio.com/stable/prototypes/HeatPipePrototype.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "HeatPipePrototype".
 */
export type HeatPipePrototype = EntityWithOwnerPrototype & {
  connection_sprites?: ConnectableEntityGraphics
  heat_glow_sprites?: ConnectableEntityGraphics
  heat_buffer: HeatBuffer
  heating_radius?: Float
}
/**
 * https://lua-api.factorio.com/stable/prototypes/HighlightBoxEntityPrototype.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "HighlightBoxEntityPrototype".
 */
export type HighlightBoxEntityPrototype = EntityPrototype
/**
 * https://lua-api.factorio.com/stable/prototypes/InfinityContainerPrototype.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "InfinityContainerPrototype".
 */
export type InfinityContainerPrototype = LogisticContainerPrototype & {
  erase_contents_when_mined: Bool
  preserve_contents_when_created?: Bool
  gui_mode?: 'all' | 'none' | 'admins'
}
/**
 * https://lua-api.factorio.com/stable/prototypes/LogisticContainerPrototype.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "LogisticContainerPrototype".
 */
export type LogisticContainerPrototype = ContainerPrototype & {
  logistic_mode: 'active-provider' | 'passive-provider' | 'requester' | 'storage' | 'buffer'
  max_logistic_slots?: Uint16
  trash_inventory_size?: ItemStackIndex
  render_not_in_network_icon?: Bool
  opened_duration?: Uint8
  animation?: Animation
  landing_location_offset?: Vector
  use_exact_mode?: Bool
  animation_sound?: Sound
}
/**
 * https://lua-api.factorio.com/stable/prototypes/InfinityPipePrototype.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "InfinityPipePrototype".
 */
export type InfinityPipePrototype = PipePrototype & {
  gui_mode?: 'all' | 'none' | 'admins'
}
/**
 * https://lua-api.factorio.com/stable/prototypes/PipePrototype.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "PipePrototype".
 */
export type PipePrototype = EntityWithOwnerPrototype & {
  fluid_box: FluidBox
  horizontal_window_bounding_box: BoundingBox
  vertical_window_bounding_box: BoundingBox
  pictures?: PipePictures
}
/**
 * https://lua-api.factorio.com/stable/prototypes/InserterPrototype.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "InserterPrototype".
 */
export type InserterPrototype = EntityWithOwnerPrototype & {
  extension_speed: Double
  rotation_speed: Double
  starting_distance?: Double
  insert_position: Vector
  pickup_position: Vector
  platform_picture?: Sprite4Way
  platform_frozen?: Sprite4Way
  hand_base_picture?: Sprite
  hand_open_picture?: Sprite
  hand_closed_picture?: Sprite
  hand_base_frozen?: Sprite
  hand_open_frozen?: Sprite
  hand_closed_frozen?: Sprite
  hand_base_shadow?: Sprite
  hand_open_shadow?: Sprite
  hand_closed_shadow?: Sprite
  energy_source: EnergySource
  energy_per_movement?: Energy
  energy_per_rotation?: Energy
  bulk?: Bool
  allow_custom_vectors?: Bool
  allow_burner_leech?: Bool
  draw_held_item?: Bool
  use_easter_egg?: Bool
  grab_less_to_match_belt_stack?: Bool
  wait_for_full_hand?: Bool
  enter_drop_mode_if_held_stack_spoiled?: Bool
  max_belt_stack_size?: Uint8
  filter_count?: Uint8
  hand_size?: Double
  circuit_wire_max_distance?: Double
  draw_copper_wires?: Bool
  draw_circuit_wires?: Bool
  default_stack_control_input_signal?: SignalIDConnector
  draw_inserter_arrow?: Bool
  chases_belt_items?: Bool
  stack_size_bonus?: Uint8
  /**
   * @minItems 4
   * @maxItems 4
   */
  circuit_connector?: [
    CircuitConnectorDefinition,
    CircuitConnectorDefinition,
    CircuitConnectorDefinition,
    CircuitConnectorDefinition,
  ]
}
/**
 * https://lua-api.factorio.com/stable/prototypes/InventoryBonusEquipmentPrototype.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "InventoryBonusEquipmentPrototype".
 */
export type InventoryBonusEquipmentPrototype = EquipmentPrototype & {
  inventory_size_bonus: ItemStackIndex
}
/**
 * https://lua-api.factorio.com/stable/prototypes/ItemEntityPrototype.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "ItemEntityPrototype".
 */
export type ItemEntityPrototype = EntityPrototype
/**
 * https://lua-api.factorio.com/stable/prototypes/ItemGroup.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "ItemGroup".
 */
export type ItemGroup = Prototype & {
  icons?: IconData[] | {}
  icon?: FileName
  icon_size?: SpriteSizeType
  order_in_recipe?: Order
}
/**
 * https://lua-api.factorio.com/stable/prototypes/ItemRequestProxyPrototype.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "ItemRequestProxyPrototype".
 */
export type ItemRequestProxyPrototype = EntityPrototype & {
  use_target_entity_alert_icon_shift?: Bool
}
/**
 * https://lua-api.factorio.com/stable/prototypes/ItemSubGroup.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "ItemSubGroup".
 */
export type ItemSubGroup = Prototype & {
  group: ItemGroupID
}
/**
 * https://lua-api.factorio.com/stable/prototypes/ItemWithTagsPrototype.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "ItemWithTagsPrototype".
 */
export type ItemWithTagsPrototype = ItemWithLabelPrototype
/**
 * https://lua-api.factorio.com/stable/prototypes/KillAchievementPrototype.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "KillAchievementPrototype".
 */
export type KillAchievementPrototype = AchievementPrototype & {
  to_kill?: EntityID | EntityID[] | {}
  type_to_kill?: String
  damage_type?: DamageTypeID
  damage_dealer?: EntityID | EntityID[] | {}
  amount?: Uint32
  in_vehicle?: Bool
  personally?: Bool
}
/**
 * https://lua-api.factorio.com/stable/prototypes/LabPrototype.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "LabPrototype".
 */
export type LabPrototype = EntityWithOwnerPrototype & {
  energy_usage: Energy
  energy_source: EnergySource
  on_animation?: Animation
  off_animation?: Animation
  frozen_patch?: Sprite
  inputs: ItemID[] | {}
  researching_speed?: Double
  effect_receiver?: EffectReceiver
  module_slots?: ItemStackIndex
  uses_quality_drain_modifier?: Bool
  science_pack_drain_rate_percent?: Uint8
  allowed_effects?: EffectTypeLimitation
  allowed_module_categories?: ModuleCategoryID[] | {}
  light?: LightDefinition
  trash_inventory_size?: ItemStackIndex
}
/**
 * https://lua-api.factorio.com/stable/prototypes/LampPrototype.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "LampPrototype".
 */
export type LampPrototype = EntityWithOwnerPrototype & {
  picture_on?: Sprite
  picture_off?: Sprite
  energy_usage_per_tick: Energy
  energy_source: ElectricEnergySource | VoidEnergySource
  light?: LightDefinition
  light_when_colored?: LightDefinition
  circuit_wire_max_distance?: Double
  draw_copper_wires?: Bool
  draw_circuit_wires?: Bool
  circuit_connector?: CircuitConnectorDefinition
  glow_size?: Float
  glow_color_intensity?: Float
  darkness_for_all_lamps_on?: Float
  darkness_for_all_lamps_off?: Float
  always_on?: Bool
  signal_to_color_mapping?: SignalColorMapping[] | {}
  glow_render_mode?: 'additive' | 'multiplicative'
  default_red_signal?: SignalIDConnector
  default_green_signal?: SignalIDConnector
  default_blue_signal?: SignalIDConnector
  default_rgb_signal?: SignalIDConnector
}
/**
 * https://lua-api.factorio.com/stable/prototypes/LandMinePrototype.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "LandMinePrototype".
 */
export type LandMinePrototype = EntityWithOwnerPrototype & {
  picture_safe?: Sprite
  picture_set?: Sprite
  trigger_radius: Double
  picture_set_enemy?: Sprite
  timeout?: Uint32
  action?: Trigger
  ammo_category?: AmmoCategoryID
  force_die_on_attack?: Bool
  trigger_force?: ForceCondition
  trigger_collision_mask?: CollisionMaskConnector
}
/**
 * https://lua-api.factorio.com/stable/prototypes/LaneSplitterPrototype.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "LaneSplitterPrototype".
 */
export type LaneSplitterPrototype = TransportBeltConnectablePrototype & {
  structure_animation_speed_coefficient?: Double
  structure_animation_movement_cooldown?: Uint32
  structure: Animation4Way
  structure_patch?: Animation4Way
}
/**
 * https://lua-api.factorio.com/stable/prototypes/TransportBeltConnectablePrototype.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "TransportBeltConnectablePrototype".
 */
export type TransportBeltConnectablePrototype = EntityWithOwnerPrototype & {
  belt_animation_set?: TransportBeltAnimationSet
  speed: Double
  animation_speed_coefficient?: Double
}
/**
 * https://lua-api.factorio.com/stable/prototypes/LegacyCurvedRailPrototype.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "LegacyCurvedRailPrototype".
 */
export type LegacyCurvedRailPrototype = RailPrototype
/**
 * https://lua-api.factorio.com/stable/prototypes/LegacyStraightRailPrototype.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "LegacyStraightRailPrototype".
 */
export type LegacyStraightRailPrototype = RailPrototype
/**
 * https://lua-api.factorio.com/stable/prototypes/LightningAttractorPrototype.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "LightningAttractorPrototype".
 */
export type LightningAttractorPrototype = EntityWithOwnerPrototype & {
  chargable_graphics?: ChargableGraphics
  lightning_strike_offset?: MapPosition
  efficiency?: Double
  range_elongation?: Double
  energy_source?: ElectricEnergySource
}
/**
 * https://lua-api.factorio.com/stable/prototypes/LightningPrototype.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "LightningPrototype".
 */
export type LightningPrototype = EntityPrototype & {
  graphics_set?: LightningGraphicsSet
  sound?: Sound
  attracted_volume_modifier?: Float
  strike_effect?: Trigger
  source_offset?: Vector
  source_variance?: Vector
  damage?: Double
  energy?: Energy
  time_to_damage?: Uint16
  effect_duration: Uint16
}
/**
 * https://lua-api.factorio.com/stable/prototypes/LinkedBeltPrototype.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "LinkedBeltPrototype".
 */
export type LinkedBeltPrototype = TransportBeltConnectablePrototype & {
  structure?: {
    direction_in?: Sprite4Way
    direction_out?: Sprite4Way
    back_patch?: Sprite4Way
    front_patch?: Sprite4Way
    direction_in_side_loading?: Sprite4Way
    direction_out_side_loading?: Sprite4Way
  }
  structure_render_layer?: RenderLayer
  allow_clone_connection?: Bool
  allow_blueprint_connection?: Bool
  allow_side_loading?: Bool
}
/**
 * https://lua-api.factorio.com/stable/prototypes/LinkedContainerPrototype.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "LinkedContainerPrototype".
 */
export type LinkedContainerPrototype = EntityWithOwnerPrototype & {
  inventory_size: ItemStackIndex
  picture?: Sprite
  inventory_type?: 'normal' | 'with_bar' | 'with_filters_and_bar'
  gui_mode?: 'all' | 'none' | 'admins'
  circuit_wire_max_distance?: Double
  draw_copper_wires?: Bool
  draw_circuit_wires?: Bool
  circuit_connector?: CircuitConnectorDefinition
}
/**
 * https://lua-api.factorio.com/stable/prototypes/Loader1x1Prototype.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "Loader1x1Prototype".
 */
export type Loader1X1Prototype = LoaderPrototype
/**
 * https://lua-api.factorio.com/stable/prototypes/LoaderPrototype.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "LoaderPrototype".
 */
export type LoaderPrototype = TransportBeltConnectablePrototype & {
  structure?: LoaderStructure
  filter_count: Uint8
  structure_render_layer?: RenderLayer
  circuit_connector_layer?: RenderLayer
  container_distance?: Double
  allow_rail_interaction?: Bool
  allow_container_interaction?: Bool
  per_lane_filters?: Bool
  max_belt_stack_size?: Uint8
  belt_length?: Double
  energy_source?: ElectricEnergySource | HeatEnergySource | FluidEnergySource | VoidEnergySource
  energy_per_item?: Energy
  circuit_wire_max_distance?: Double
  draw_copper_wires?: Bool
  draw_circuit_wires?: Bool
  circuit_connector?: CircuitConnectorDefinition[] | {}
}
/**
 * https://lua-api.factorio.com/stable/prototypes/Loader1x2Prototype.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "Loader1x2Prototype".
 */
export type Loader1X2Prototype = LoaderPrototype
/**
 * https://lua-api.factorio.com/stable/prototypes/LocomotivePrototype.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "LocomotivePrototype".
 */
export type LocomotivePrototype = RollingStockPrototype & {
  max_power: Energy
  reversing_power_modifier: Double
  energy_source: BurnerEnergySource | VoidEnergySource
  front_light?: LightDefinition
  front_light_pictures?: RollingStockRotatedSlopedGraphics
  darkness_to_render_light_animation?: Float
  max_snap_to_train_stop_distance?: Float
}
/**
 * https://lua-api.factorio.com/stable/prototypes/LogisticRobotPrototype.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "LogisticRobotPrototype".
 */
export type LogisticRobotPrototype = RobotWithLogisticInterfacePrototype & {
  idle_with_cargo?: RotatedAnimation
  in_motion_with_cargo?: RotatedAnimation
  shadow_idle_with_cargo?: RotatedAnimation
  shadow_in_motion_with_cargo?: RotatedAnimation
}
/**
 * https://lua-api.factorio.com/stable/prototypes/MarketPrototype.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "MarketPrototype".
 */
export type MarketPrototype = EntityWithOwnerPrototype & {
  picture?: Sprite
  allow_access_to_all_forces?: Bool
}
/**
 * https://lua-api.factorio.com/stable/prototypes/MiningDrillPrototype.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "MiningDrillPrototype".
 */
export type MiningDrillPrototype = EntityWithOwnerPrototype & {
  vector_to_place_result: Vector
  resource_searching_radius: Double
  energy_usage: Energy
  mining_speed: Double
  energy_source: EnergySource
  resource_categories: ResourceCategoryID[] | {}
  output_fluid_box?: FluidBox
  input_fluid_box?: FluidBox
  graphics_set?: MiningDrillGraphicsSet
  wet_mining_graphics_set?: MiningDrillGraphicsSet
  perceived_performance?: PerceivedPerformance
  base_picture?: Sprite4Way
  effect_receiver?: EffectReceiver
  module_slots?: ItemStackIndex
  allowed_effects?: EffectTypeLimitation
  allowed_module_categories?: ModuleCategoryID[] | {}
  radius_visualisation_picture?: Sprite
  circuit_wire_max_distance?: Double
  draw_copper_wires?: Bool
  draw_circuit_wires?: Bool
  base_render_layer?: RenderLayer
  resource_drain_rate_percent?: Uint8
  shuffle_resources_to_mine?: Bool
  drops_full_belt_stacks?: Bool
  moving_sound?: InterruptibleSound
  drilling_sound?: InterruptibleSound
  drilling_sound_animation_start_frame?: Uint16
  drilling_sound_animation_end_frame?: Uint16
  monitor_visualization_tint?: Color
  /**
   * @minItems 4
   * @maxItems 4
   */
  circuit_connector?: [
    CircuitConnectorDefinition,
    CircuitConnectorDefinition,
    CircuitConnectorDefinition,
    CircuitConnectorDefinition,
  ]
  filter_count?: Uint8
}
/**
 * https://lua-api.factorio.com/stable/prototypes/ModuleCategory.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "ModuleCategory".
 */
export type ModuleCategory = Prototype
/**
 * https://lua-api.factorio.com/stable/prototypes/ModuleTransferAchievementPrototype.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "ModuleTransferAchievementPrototype".
 */
export type ModuleTransferAchievementPrototype = AchievementPrototype & {
  module: ItemID | ItemID[] | {}
  amount?: Uint32
  limited_to_one_game?: Bool
}
/**
 * https://lua-api.factorio.com/stable/prototypes/MovementBonusEquipmentPrototype.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "MovementBonusEquipmentPrototype".
 */
export type MovementBonusEquipmentPrototype = EquipmentPrototype & {
  energy_consumption: Energy
  movement_bonus: Double
}
/**
 * https://lua-api.factorio.com/stable/prototypes/NamedNoiseExpression.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "NamedNoiseExpression".
 */
export type NamedNoiseExpression = Prototype & {
  expression: NoiseExpression
  local_expressions?: {
    [k: string]: NoiseExpression
  }
  local_functions?: {
    [k: string]: NoiseFunction
  }
  intended_property?: String
}
/**
 * https://lua-api.factorio.com/stable/prototypes/NamedNoiseFunction.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "NamedNoiseFunction".
 */
export type NamedNoiseFunction = Prototype & {
  parameters: String[] | {}
  expression: NoiseExpression
  local_expressions?: {
    [k: string]: NoiseExpression
  }
  local_functions?: {
    [k: string]: NoiseFunction
  }
}
/**
 * https://lua-api.factorio.com/stable/prototypes/NightVisionEquipmentPrototype.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "NightVisionEquipmentPrototype".
 */
export type NightVisionEquipmentPrototype = EquipmentPrototype & {
  energy_input: Energy
  color_lookup: DaytimeColorLookupTable
  darkness_to_turn_on?: Float
  activate_sound?: Sound
  deactivate_sound?: Sound
}
/**
 * https://lua-api.factorio.com/stable/prototypes/OffshorePumpPrototype.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "OffshorePumpPrototype".
 */
export type OffshorePumpPrototype = EntityWithOwnerPrototype & {
  fluid_box: FluidBox
  pumping_speed: FluidAmount
  fluid_source_offset: Vector
  perceived_performance?: PerceivedPerformance
  graphics_set?: OffshorePumpGraphicsSet
  energy_source: EnergySource
  energy_usage: Energy
  remove_on_tile_collision?: Bool
  always_draw_fluid?: Bool
  circuit_wire_max_distance?: Double
  draw_copper_wires?: Bool
  draw_circuit_wires?: Bool
  /**
   * @minItems 4
   * @maxItems 4
   */
  circuit_connector?: [
    CircuitConnectorDefinition,
    CircuitConnectorDefinition,
    CircuitConnectorDefinition,
    CircuitConnectorDefinition,
  ]
}
/**
 * https://lua-api.factorio.com/stable/prototypes/ParticlePrototype.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "ParticlePrototype".
 */
export type ParticlePrototype = Prototype & {
  pictures?: AnimationVariations
  life_time: Uint16
  shadows?: AnimationVariations
  draw_shadow_when_on_ground?: Bool
  regular_trigger_effect?: TriggerEffect
  ended_in_water_trigger_effect?: TriggerEffect
  ended_on_ground_trigger_effect?: TriggerEffect
  render_layer?: RenderLayer
  render_layer_when_on_ground?: RenderLayer
  regular_trigger_effect_frequency?: Uint32
  movement_modifier_when_on_ground?: Float
  movement_modifier?: Float
  vertical_acceleration?: Float
  mining_particle_frame_speed?: Float
  fade_away_duration?: Uint16
}
/**
 * https://lua-api.factorio.com/stable/prototypes/ParticleSourcePrototype.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "ParticleSourcePrototype".
 */
export type ParticleSourcePrototype = EntityPrototype & {
  time_to_live: Float
  time_before_start: Float
  height: Float
  vertical_speed: Float
  horizontal_speed: Float
  particle?: ParticleID
  smoke?: SmokeSource[] | {}
  time_to_live_deviation?: Float
  time_before_start_deviation?: Float
  height_deviation?: Float
  vertical_speed_deviation?: Float
  horizontal_speed_deviation?: Float
}
/**
 * https://lua-api.factorio.com/stable/prototypes/PipeToGroundPrototype.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "PipeToGroundPrototype".
 */
export type PipeToGroundPrototype = EntityWithOwnerPrototype & {
  fluid_box: FluidBox
  pictures?: Sprite4Way
  frozen_patch?: Sprite4Way
  visualization?: Sprite4Way
  disabled_visualization?: Sprite4Way
  draw_fluid_icon_override?: Bool
}
/**
 * https://lua-api.factorio.com/stable/prototypes/PlaceEquipmentAchievementPrototype.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "PlaceEquipmentAchievementPrototype".
 */
export type PlaceEquipmentAchievementPrototype = AchievementPrototype & {
  armor: ItemID
  limit_quality: QualityID
  limit_equip_quality: QualityID
  amount?: Uint32
  limited_to_one_game?: Bool
}
/**
 * https://lua-api.factorio.com/stable/prototypes/PlanetPrototype.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "PlanetPrototype".
 */
export type PlanetPrototype = SpaceLocationPrototype & {
  map_seed_offset?: Uint32
  entities_require_heating?: Bool
  pollutant_type?: AirbornePollutantID
  persistent_ambient_sounds?: PersistentWorldAmbientSoundsDefinition
  surface_render_parameters?: SurfaceRenderParameters
  player_effects?: Trigger
  ticks_between_player_effects?: MapTick
  map_gen_settings?: PlanetPrototypeMapGenSettings
  surface_properties?: {
    [k: string]: Double
  }
  lightning_properties?: LightningProperties
}
/**
 * https://lua-api.factorio.com/stable/prototypes/SpaceLocationPrototype.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "SpaceLocationPrototype".
 */
export type SpaceLocationPrototype = Prototype & {
  gravity_pull: Double
  distance: Double
  orientation: RealOrientation
  magnitude?: Double
  parked_platforms_orientation?: RealOrientation
  label_orientation?: RealOrientation
  draw_orbit?: Bool
  solar_power_in_space?: Double
  asteroid_spawn_influence?: Double
  fly_condition?: Bool
  auto_save_on_first_trip?: Bool
  procession_graphic_catalogue?: ProcessionGraphicCatalogue
  procession_audio_catalogue?: ProcessionAudioCatalogue
  platform_procession_set?: ProcessionSet
  planet_procession_set?: ProcessionSet
  icons?: IconData[] | {}
  icon?: FileName
  icon_size?: SpriteSizeType
  starmap_icons?: IconData[] | {}
  starmap_icon?: FileName
  starmap_icon_size?: SpriteSizeType
  asteroid_spawn_definitions?: SpaceLocationAsteroidSpawnDefinition[] | {}
}
/**
 * https://lua-api.factorio.com/stable/prototypes/PlantPrototype.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "PlantPrototype".
 */
export type PlantPrototype = TreePrototype & {
  growth_ticks: MapTick
  harvest_emissions?: {
    [k: string]: Double
  }
  agricultural_tower_tint?: RecipeTints
}
/**
 * https://lua-api.factorio.com/stable/prototypes/TreePrototype.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "TreePrototype".
 */
export type TreePrototype = EntityWithHealthPrototype & {
  variation_weights?: Float[] | {}
  darkness_of_burnt_tree?: Float
  pictures?: SpriteVariations
  variations?: TreeVariation[] | {}
  colors?: Color[] | {}
  stateless_visualisation_variations?: StatelessVisualisations[] | {}
}
/**
 * https://lua-api.factorio.com/stable/prototypes/PlayerDamagedAchievementPrototype.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "PlayerDamagedAchievementPrototype".
 */
export type PlayerDamagedAchievementPrototype = AchievementPrototype & {
  minimum_damage: Float
  should_survive: Bool
  type_of_dealer?: String
}
/**
 * https://lua-api.factorio.com/stable/prototypes/PlayerPortPrototype.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "PlayerPortPrototype".
 */
export type PlayerPortPrototype = EntityWithOwnerPrototype
/**
 * https://lua-api.factorio.com/stable/prototypes/PowerSwitchPrototype.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "PowerSwitchPrototype".
 */
export type PowerSwitchPrototype = EntityWithOwnerPrototype & {
  power_on_animation?: Animation
  overlay_start?: Animation
  overlay_loop?: Animation
  led_on?: Sprite
  led_off?: Sprite
  frozen_patch?: Sprite
  overlay_start_delay: Uint8
  circuit_wire_connection_point: WireConnectionPoint
  left_wire_connection_point: WireConnectionPoint
  right_wire_connection_point: WireConnectionPoint
  wire_max_distance?: Double
  draw_copper_wires?: Bool
  draw_circuit_wires?: Bool
}
/**
 * https://lua-api.factorio.com/stable/prototypes/ProcessionLayerInheritanceGroup.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "ProcessionLayerInheritanceGroup".
 */
export type ProcessionLayerInheritanceGroup = Prototype & {
  intermezzo_application?: TransitionApplication
  arrival_application?: TransitionApplication
}
/**
 * https://lua-api.factorio.com/stable/prototypes/ProcessionPrototype.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "ProcessionPrototype".
 */
export type ProcessionPrototype = Prototype & {
  timeline: ProcessionTimeline
  ground_timeline?: ProcessionTimeline
  usage: 'departure' | 'arrival' | 'intermezzo'
  procession_style: Uint32 | Uint32[] | {}
}
/**
 * https://lua-api.factorio.com/stable/prototypes/ProduceAchievementPrototype.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "ProduceAchievementPrototype".
 */
export type ProduceAchievementPrototype = AchievementPrototype & {
  amount: MaterialAmountType
  limited_to_one_game: Bool
  item_product?: ItemIDFilter
  fluid_product?: FluidID
}
/**
 * https://lua-api.factorio.com/stable/prototypes/ProducePerHourAchievementPrototype.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "ProducePerHourAchievementPrototype".
 */
export type ProducePerHourAchievementPrototype = AchievementPrototype & {
  amount: MaterialAmountType
  item_product?: ItemIDFilter
  fluid_product?: FluidID
}
/**
 * https://lua-api.factorio.com/stable/prototypes/ProgrammableSpeakerPrototype.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "ProgrammableSpeakerPrototype".
 */
export type ProgrammableSpeakerPrototype = EntityWithOwnerPrototype & {
  energy_source: ElectricEnergySource | VoidEnergySource
  energy_usage_per_tick: Energy
  sprite?: Sprite
  maximum_polyphony: Uint32
  instruments:
    | {
        name: String
        notes: ProgrammableSpeakerNote[] | {}
      }[]
    | {}
  audible_distance_modifier?: Float
  circuit_wire_max_distance?: Double
  draw_copper_wires?: Bool
  draw_circuit_wires?: Bool
  circuit_connector?: CircuitConnectorDefinition
}
/**
 * https://lua-api.factorio.com/stable/prototypes/ProjectilePrototype.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "ProjectilePrototype".
 */
export type ProjectilePrototype = EntityPrototype & {
  acceleration: Double
  animation?: RotatedAnimationVariations
  rotatable?: Bool
  enable_drawing_with_mask?: Bool
  direction_only?: Bool
  hit_at_collision_position?: Bool
  force_condition?: ForceCondition
  piercing_damage?: Float
  max_speed?: Double
  turn_speed?: Float
  speed_modifier?: Vector
  height?: Double
  action?: Trigger
  final_action?: Trigger
  light?: LightDefinition
  smoke?: SmokeSource[] | {}
  hit_collision_mask?: CollisionMaskConnector
  turning_speed_increases_exponentially_with_projectile_speed?: Bool
  shadow?: RotatedAnimationVariations
}
/**
 * https://lua-api.factorio.com/stable/prototypes/PumpPrototype.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "PumpPrototype".
 */
export type PumpPrototype = EntityWithOwnerPrototype & {
  fluid_box: FluidBox
  energy_source: EnergySource
  energy_usage: Energy
  pumping_speed: FluidAmount
  animations?: Animation4Way
  fluid_wagon_connector_speed?: Double
  fluid_wagon_connector_alignment_tolerance?: Double
  fluid_wagon_connector_frame_count?: Uint8
  fluid_animation?: Animation4Way
  glass_pictures?: Sprite4Way
  frozen_patch?: Sprite4Way
  circuit_wire_max_distance?: Double
  draw_copper_wires?: Bool
  draw_circuit_wires?: Bool
  /**
   * @minItems 4
   * @maxItems 4
   */
  circuit_connector?: [
    CircuitConnectorDefinition,
    CircuitConnectorDefinition,
    CircuitConnectorDefinition,
    CircuitConnectorDefinition,
  ]
  fluid_wagon_connector_graphics?: {
    load_animations: PumpConnectorGraphics
    unload_animations: PumpConnectorGraphics
  }
}
/**
 * https://lua-api.factorio.com/stable/prototypes/QualityPrototype.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "QualityPrototype".
 */
export type QualityPrototype = Prototype & {
  draw_sprite_by_default?: Bool
  color: Color
  level: Uint32
  next?: QualityID
  next_probability?: Double
  icons?: IconData[] | {}
  icon?: FileName
  icon_size?: SpriteSizeType
  beacon_power_usage_multiplier?: Float
  mining_drill_resource_drain_multiplier?: Float
  science_pack_drain_multiplier?: Float
}
/**
 * https://lua-api.factorio.com/stable/prototypes/RadarPrototype.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "RadarPrototype".
 */
export type RadarPrototype = EntityWithOwnerPrototype & {
  energy_usage: Energy
  energy_per_sector: Energy
  energy_per_nearby_scan: Energy
  energy_source: EnergySource
  pictures?: RotatedSprite
  frozen_patch?: Sprite
  max_distance_of_sector_revealed: Uint32
  max_distance_of_nearby_sector_revealed: Uint32
  circuit_wire_max_distance?: Double
  draw_copper_wires?: Bool
  draw_circuit_wires?: Bool
  circuit_connector?: CircuitConnectorDefinition
  radius_minimap_visualisation_color?: Color
  rotation_speed?: Double
  connects_to_other_radars?: Bool
  reset_orientation_when_frozen?: Bool
  energy_fraction_to_connect?: Float
  energy_fraction_to_disconnect?: Float
}
/**
 * https://lua-api.factorio.com/stable/prototypes/RailChainSignalPrototype.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "RailChainSignalPrototype".
 */
export type RailChainSignalPrototype = RailSignalBasePrototype
/**
 * https://lua-api.factorio.com/stable/prototypes/RailSignalBasePrototype.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "RailSignalBasePrototype".
 */
export type RailSignalBasePrototype = EntityWithOwnerPrototype & {
  ground_picture_set: RailSignalPictureSet
  elevated_picture_set: RailSignalPictureSet
  circuit_wire_max_distance?: Double
  draw_copper_wires?: Bool
  draw_circuit_wires?: Bool
  default_red_output_signal?: SignalIDConnector
  default_orange_output_signal?: SignalIDConnector
  default_green_output_signal?: SignalIDConnector
  default_blue_output_signal?: SignalIDConnector
  elevated_collision_mask?: CollisionMaskConnector
  elevated_selection_priority?: Uint8
}
/**
 * https://lua-api.factorio.com/stable/prototypes/RailRampPrototype.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "RailRampPrototype".
 */
export type RailRampPrototype = RailPrototype & {
  support_range?: Float
  collision_mask_allow_on_deep_oil_ocean?: CollisionMaskConnector
}
/**
 * https://lua-api.factorio.com/stable/prototypes/RailRemnantsPrototype.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "RailRemnantsPrototype".
 */
export type RailRemnantsPrototype = CorpsePrototype & {
  pictures: RailPictureSet
  related_rail: EntityID
  secondary_collision_box?: BoundingBox
}
/**
 * https://lua-api.factorio.com/stable/prototypes/RailSignalPrototype.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "RailSignalPrototype".
 */
export type RailSignalPrototype = RailSignalBasePrototype
/**
 * https://lua-api.factorio.com/stable/prototypes/RailSupportPrototype.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "RailSupportPrototype".
 */
export type RailSupportPrototype = EntityWithOwnerPrototype & {
  graphics_set: {
    underwater_structure?: RotatedSprite
    structure: RotatedSprite
    render_layer?: RenderLayer
    underwater_layer_offset?: Int8
  }
  support_range?: Float
  not_buildable_if_no_rails?: Bool
  snap_to_spots_distance?: Float
  collision_mask_allow_on_deep_oil_ocean?: CollisionMaskConnector
  elevated_selection_boxes?: BoundingBox[] | {}
}
/**
 * https://lua-api.factorio.com/stable/prototypes/ReactorPrototype.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "ReactorPrototype".
 */
export type ReactorPrototype = EntityWithOwnerPrototype & {
  working_light_picture?: Animation
  heat_buffer: HeatBuffer
  heating_radius?: Double
  energy_source: EnergySource
  consumption: Energy
  connection_patches_connected?: SpriteVariations
  connection_patches_disconnected?: SpriteVariations
  heat_connection_patches_connected?: SpriteVariations
  heat_connection_patches_disconnected?: SpriteVariations
  lower_layer_picture?: Sprite
  heat_lower_layer_picture?: Sprite
  picture?: Sprite
  light?: LightDefinition
  meltdown_action?: Trigger
  neighbour_bonus?: Double
  scale_energy_usage?: Bool
  use_fuel_glow_color?: Bool
  default_fuel_glow_color?: Color
  circuit_wire_max_distance?: Double
  draw_copper_wires?: Bool
  draw_circuit_wires?: Bool
  circuit_connector?: CircuitConnectorDefinition
  default_temperature_signal?: SignalIDConnector
}
/**
 * https://lua-api.factorio.com/stable/prototypes/RecipeCategory.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "RecipeCategory".
 */
export type RecipeCategory = Prototype
/**
 * https://lua-api.factorio.com/stable/prototypes/ResearchAchievementPrototype.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "ResearchAchievementPrototype".
 */
export type ResearchAchievementPrototype = AchievementPrototype & {
  technology?: TechnologyID
  research_all?: Bool
}
/**
 * https://lua-api.factorio.com/stable/prototypes/ResearchWithSciencePackAchievementPrototype.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "ResearchWithSciencePackAchievementPrototype".
 */
export type ResearchWithSciencePackAchievementPrototype = AchievementPrototype & {
  science_pack: ItemID
  amount?: Uint32
}
/**
 * https://lua-api.factorio.com/stable/prototypes/ResourceCategory.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "ResourceCategory".
 */
export type ResourceCategory = Prototype
/**
 * https://lua-api.factorio.com/stable/prototypes/ResourceEntityPrototype.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "ResourceEntityPrototype".
 */
export type ResourceEntityPrototype = EntityPrototype & {
  stages?: AnimationVariations
  stage_counts: Uint32[] | {}
  infinite?: Bool
  highlight?: Bool
  randomize_visual_position?: Bool
  map_grid?: Bool
  draw_stateless_visualisation_under_building?: Bool
  minimum?: Uint32
  normal?: Uint32
  infinite_depletion_amount?: Uint32
  resource_patch_search_radius?: Uint32
  category?: ResourceCategoryID
  walking_sound?: Sound
  driving_sound?: InterruptibleSound
  stages_effect?: AnimationVariations
  effect_animation_period?: Float
  effect_animation_period_deviation?: Float
  effect_darkness_multiplier?: Float
  min_effect_alpha?: Float
  max_effect_alpha?: Float
  tree_removal_probability?: Double
  cliff_removal_probability?: Double
  tree_removal_max_distance?: Double
  mining_visualisation_tint?: Color
}
/**
 * https://lua-api.factorio.com/stable/prototypes/RoboportEquipmentPrototype.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "RoboportEquipmentPrototype".
 */
export type RoboportEquipmentPrototype = EquipmentPrototype & {
  recharging_animation?: Animation
  spawn_and_station_height: Float
  charge_approach_distance: Float
  construction_radius: Float
  charging_energy: Energy
  spawn_and_station_shadow_height_offset?: Float
  stationing_render_layer_swap_height?: Float
  draw_logistic_radius_visualization?: Bool
  draw_construction_radius_visualization?: Bool
  recharging_light?: LightDefinition
  charging_station_count?: Uint32
  charging_station_count_affected_by_quality?: Bool
  charging_distance?: Float
  charging_station_shift?: Vector
  charging_threshold_distance?: Float
  robot_vertical_acceleration?: Float
  stationing_offset?: Vector
  robot_limit?: ItemCountType
  robots_shrink_when_entering_and_exiting?: Bool
  charging_offsets?: Vector[] | {}
  spawn_minimum?: Energy
  burner?: BurnerEnergySource
  power?: Energy
}
/**
 * https://lua-api.factorio.com/stable/prototypes/RoboportPrototype.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "RoboportPrototype".
 */
export type RoboportPrototype = EntityWithOwnerPrototype & {
  energy_source: ElectricEnergySource | VoidEnergySource
  energy_usage: Energy
  recharge_minimum: Energy
  robot_slots_count: ItemStackIndex
  material_slots_count: ItemStackIndex
  base?: Sprite
  base_patch?: Sprite
  frozen_patch?: Sprite
  base_animation?: Animation
  door_animation_up?: Animation
  door_animation_down?: Animation
  request_to_open_door_timeout: Uint32
  radar_range?: Uint32
  radar_visualisation_color?: Color
  recharging_animation?: Animation
  spawn_and_station_height: Float
  charge_approach_distance: Float
  logistics_radius: Float
  construction_radius: Float
  charging_energy: Energy
  open_door_trigger_effect?: TriggerEffect
  close_door_trigger_effect?: TriggerEffect
  default_available_logistic_output_signal?: SignalIDConnector
  default_total_logistic_output_signal?: SignalIDConnector
  default_available_construction_output_signal?: SignalIDConnector
  default_total_construction_output_signal?: SignalIDConnector
  default_roboports_output_signal?: SignalIDConnector
  circuit_wire_max_distance?: Double
  draw_copper_wires?: Bool
  draw_circuit_wires?: Bool
  circuit_connector?: CircuitConnectorDefinition
  max_logistic_slots?: LogisticFilterIndex
  spawn_and_station_shadow_height_offset?: Float
  stationing_render_layer_swap_height?: Float
  draw_logistic_radius_visualization?: Bool
  draw_construction_radius_visualization?: Bool
  recharging_light?: LightDefinition
  charging_station_count?: Uint32
  charging_station_count_affected_by_quality?: Bool
  charging_distance?: Float
  charging_station_shift?: Vector
  charging_threshold_distance?: Float
  robot_vertical_acceleration?: Float
  stationing_offset?: Vector
  robot_limit?: ItemCountType
  robots_shrink_when_entering_and_exiting?: Bool
  charging_offsets?: Vector[] | {}
  logistics_connection_distance?: Float
}
/**
 * https://lua-api.factorio.com/stable/prototypes/RocketSiloRocketPrototype.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "RocketSiloRocketPrototype".
 */
export type RocketSiloRocketPrototype = EntityPrototype & {
  shadow_slave_entity?: EntityID
  cargo_pod_entity: EntityID
  dying_explosion?: EntityID
  glow_light?: LightDefinition
  rocket_sprite?: Sprite
  rocket_shadow_sprite?: Sprite
  rocket_glare_overlay_sprite?: Sprite
  rocket_smoke_bottom1_animation?: Animation
  rocket_smoke_bottom2_animation?: Animation
  rocket_smoke_top1_animation?: Animation
  rocket_smoke_top2_animation?: Animation
  rocket_smoke_top3_animation?: Animation
  rocket_flame_animation?: Animation
  rocket_flame_left_animation?: Animation
  rocket_flame_right_animation?: Animation
  rocket_initial_offset?: Vector
  rocket_rise_offset: Vector
  cargo_attachment_offset?: Vector
  rocket_flame_left_rotation: Float
  rocket_flame_right_rotation: Float
  rocket_render_layer_switch_distance: Double
  full_render_layer_switch_distance: Double
  rocket_launch_offset: Vector
  effects_fade_in_start_distance: Double
  effects_fade_in_end_distance: Double
  shadow_fade_out_start_ratio: Double
  shadow_fade_out_end_ratio: Double
  rocket_visible_distance_from_center: Float
  rocket_above_wires_slice_offset_from_center?: Float
  rocket_air_object_slice_offset_from_center?: Float
  rocket_fog_mask?: FogMaskShapeDefinition
  rising_speed: Double
  engine_starting_speed: Double
  flying_speed: Double
  flying_acceleration: Double
  flying_trigger?: TriggerEffect
  flying_sound?: Sound
  inventory_size: ItemStackIndex
}
/**
 * https://lua-api.factorio.com/stable/prototypes/RocketSiloRocketShadowPrototype.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "RocketSiloRocketShadowPrototype".
 */
export type RocketSiloRocketShadowPrototype = EntityPrototype
/**
 * https://lua-api.factorio.com/stable/prototypes/SegmentPrototype.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "SegmentPrototype".
 */
export type SegmentPrototype = EntityWithOwnerPrototype & {
  dying_sound?: Sound
  dying_sound_volume_modifier?: Float
  animation: RotatedAnimation
  render_layer?: RenderLayer
  forward_overlap?: Uint8
  backward_overlap?: Uint8
  forward_padding?: Double
  backward_padding?: Double
  update_effects?: TriggerEffectWithCooldown[] | {}
  update_effects_while_enraged?: TriggerEffectWithCooldown[] | {}
}
/**
 * https://lua-api.factorio.com/stable/prototypes/SegmentedUnitPrototype.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "SegmentedUnitPrototype".
 */
export type SegmentedUnitPrototype = SegmentPrototype & {
  vision_distance: Double
  attack_parameters?: AttackParameters
  revenge_attack_parameters?: AttackParameters
  territory_radius: Uint32
  enraged_duration: Uint32
  patrolling_speed: Double
  investigating_speed: Double
  attacking_speed: Double
  enraged_speed: Double
  acceleration_rate: Double
  turn_radius: Double
  patrolling_turn_radius?: Double
  turn_smoothing?: Double
  ticks_per_scan?: Uint32
  segment_engine: SegmentEngineSpecification
  roar?: Sound
  roar_probability?: Float
  hurt_roar?: Sound
  hurt_thresholds?: Float[] | {}
}
/**
 * https://lua-api.factorio.com/stable/prototypes/SelectorCombinatorPrototype.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "SelectorCombinatorPrototype".
 */
export type SelectorCombinatorPrototype = CombinatorPrototype & {
  max_symbol_sprites?: Sprite4Way
  min_symbol_sprites?: Sprite4Way
  count_symbol_sprites?: Sprite4Way
  random_symbol_sprites?: Sprite4Way
  stack_size_sprites?: Sprite4Way
  rocket_capacity_sprites?: Sprite4Way
  quality_symbol_sprites?: Sprite4Way
}
/**
 * https://lua-api.factorio.com/stable/prototypes/ShootAchievementPrototype.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "ShootAchievementPrototype".
 */
export type ShootAchievementPrototype = AchievementPrototype & {
  ammo_type?: ItemID
  amount?: Uint32
}
/**
 * https://lua-api.factorio.com/stable/prototypes/ShortcutPrototype.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "ShortcutPrototype".
 */
export type ShortcutPrototype = Prototype & {
  action:
    | 'toggle-alt-mode'
    | 'undo'
    | 'copy'
    | 'cut'
    | 'paste'
    | 'import-string'
    | 'toggle-personal-roboport'
    | 'toggle-equipment-movement-bonus'
    | 'spawn-item'
    | 'lua'
  icons?: IconData[] | {}
  icon?: FileName
  icon_size?: SpriteSizeType
  small_icons?: IconData[] | {}
  small_icon?: FileName
  small_icon_size?: SpriteSizeType
  item_to_spawn?: ItemID
  technology_to_unlock?: TechnologyID
  unavailable_until_unlocked?: Bool
  toggleable?: Bool
  associated_control_input?: String
  style?: 'default' | 'blue' | 'red' | 'green'
}
/**
 * https://lua-api.factorio.com/stable/prototypes/SimpleEntityPrototype.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "SimpleEntityPrototype".
 */
export type SimpleEntityPrototype = EntityWithHealthPrototype & {
  count_as_rock_for_filtered_deconstruction?: Bool
  render_layer?: RenderLayer
  secondary_draw_order?: Int8
  random_animation_offset?: Bool
  random_variation_on_create?: Bool
  pictures?: SpriteVariations
  picture?: Sprite4Way
  animations?: AnimationVariations
  lower_render_layer?: RenderLayer
  lower_pictures?: SpriteVariations
  stateless_visualisation_variations?: StatelessVisualisations[] | {}
}
/**
 * https://lua-api.factorio.com/stable/prototypes/SimpleEntityWithForcePrototype.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "SimpleEntityWithForcePrototype".
 */
export type SimpleEntityWithForcePrototype = SimpleEntityWithOwnerPrototype
/**
 * https://lua-api.factorio.com/stable/prototypes/SimpleEntityWithOwnerPrototype.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "SimpleEntityWithOwnerPrototype".
 */
export type SimpleEntityWithOwnerPrototype = EntityWithOwnerPrototype & {
  render_layer?: RenderLayer
  secondary_draw_order?: Int8
  random_animation_offset?: Bool
  random_variation_on_create?: Bool
  pictures?: SpriteVariations
  picture?: Sprite4Way
  animations?: AnimationVariations
  lower_render_layer?: RenderLayer
  lower_pictures?: SpriteVariations
  stateless_visualisation_variations?: StatelessVisualisations[] | {}
  force_visibility?: ForceCondition
}
/**
 * https://lua-api.factorio.com/stable/prototypes/SmokePrototype.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "SmokePrototype".
 */
export type SmokePrototype = EntityPrototype & {
  animation?: Animation
  cyclic?: Bool
  duration?: Uint32
  spread_duration?: Uint32
  fade_away_duration?: Uint32
  fade_in_duration?: Uint32
  start_scale?: Double
  end_scale?: Double
  color?: Color
  affected_by_wind?: Bool
  show_when_smoke_off?: Bool
  render_layer?: RenderLayer
  movement_slow_down_factor?: Double
  glow_fade_away_duration?: Uint32
  glow_animation?: Animation
}
/**
 * https://lua-api.factorio.com/stable/prototypes/SmokeWithTriggerPrototype.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "SmokeWithTriggerPrototype".
 */
export type SmokeWithTriggerPrototype = SmokePrototype & {
  action?: Trigger
  action_cooldown?: Uint32
  particle_count?: Uint8
  particle_distance_scale_factor?: Float
  spread_duration_variation?: Uint32
  particle_duration_variation?: Uint32
  particle_spread?: Vector
  particle_scale_factor?: Vector
  wave_distance?: Vector
  wave_speed?: Vector
  attach_to_target?: Bool
  fade_when_attachment_is_destroyed?: Bool
}
/**
 * https://lua-api.factorio.com/stable/prototypes/SolarPanelEquipmentPrototype.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "SolarPanelEquipmentPrototype".
 */
export type SolarPanelEquipmentPrototype = EquipmentPrototype & {
  power: Energy
}
/**
 * https://lua-api.factorio.com/stable/prototypes/SolarPanelPrototype.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "SolarPanelPrototype".
 */
export type SolarPanelPrototype = EntityWithOwnerPrototype & {
  energy_source: ElectricEnergySource
  picture?: SpriteVariations
  production: Energy
  overlay?: SpriteVariations
}
/**
 * https://lua-api.factorio.com/stable/prototypes/SpaceConnectionDistanceTraveledAchievementPrototype.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "SpaceConnectionDistanceTraveledAchievementPrototype".
 */
export type SpaceConnectionDistanceTraveledAchievementPrototype = AchievementPrototype & {
  tracked_connection: SpaceConnectionID
  distance: Uint32
  reversed: Bool
}
/**
 * https://lua-api.factorio.com/stable/prototypes/SpaceConnectionPrototype.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "SpaceConnectionPrototype".
 */
export type SpaceConnectionPrototype = Prototype & {
  from: SpaceLocationID
  to: SpaceLocationID
  length?: Uint32
  asteroid_spawn_definitions?: SpaceConnectionAsteroidSpawnDefinition[] | {}
  icons?: IconData[] | {}
  icon?: FileName
  icon_size?: SpriteSizeType
}
/**
 * https://lua-api.factorio.com/stable/prototypes/SpacePlatformHubPrototype.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "SpacePlatformHubPrototype".
 */
export type SpacePlatformHubPrototype = EntityWithOwnerPrototype & {
  graphics_set?: CargoBayConnectableGraphicsSet
  inventory_size: ItemStackIndex
  dump_container: EntityID
  persistent_ambient_sounds?: PersistentWorldAmbientSoundsDefinition
  surface_render_parameters?: SurfaceRenderParameters
  circuit_wire_max_distance?: Double
  draw_copper_wires?: Bool
  draw_circuit_wires?: Bool
  circuit_connector?: CircuitConnectorDefinition
  default_speed_signal?: SignalIDConnector
  default_damage_taken_signal?: SignalIDConnector
  platform_repair_speed_modifier?: Float
  weight?: Weight
  cargo_station_parameters: CargoStationParameters
}
/**
 * https://lua-api.factorio.com/stable/prototypes/SpeechBubblePrototype.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "SpeechBubblePrototype".
 */
export type SpeechBubblePrototype = EntityPrototype & {
  style: String
  wrapper_flow_style?: String
  y_offset?: Double
  fade_in_out_ticks?: Uint32
}
/**
 * https://lua-api.factorio.com/stable/prototypes/SpiderLegPrototype.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "SpiderLegPrototype".
 */
export type SpiderLegPrototype = EntityWithOwnerPrototype & {
  stretch_force_scalar?: Double
  hip_flexibility?: Double
  knee_height: Double
  knee_distance_factor: Double
  ankle_height?: Double
  initial_movement_speed: Double
  movement_acceleration: Double
  target_position_randomisation_distance: Double
  minimal_step_size: Double
  base_position_selection_distance: Double
  movement_based_position_selection_distance: Double
  graphics_set?: {
    joint_turn_offset?: Float
    joint_render_layer?: RenderLayer
    joint?: RotatedSprite
    joint_shadow?: RotatedSprite
    upper_part?: SpiderLegPart
    lower_part?: SpiderLegPart
    upper_part_shadow?: SpiderLegPart
    lower_part_shadow?: SpiderLegPart
    upper_part_water_reflection?: SpiderLegPart
    lower_part_water_reflection?: SpiderLegPart
    foot?: RotatedSprite
    foot_shadow?: RotatedSprite
  }
  walking_sound_volume_modifier?: Float
  walking_sound_speed_modifier?: Float
  upper_leg_dying_trigger_effects?: SpiderLegTriggerEffect[] | {}
  lower_leg_dying_trigger_effects?: SpiderLegTriggerEffect[] | {}
}
/**
 * https://lua-api.factorio.com/stable/prototypes/SpiderUnitPrototype.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "SpiderUnitPrototype".
 */
export type SpiderUnitPrototype = EntityWithOwnerPrototype & {
  spider_engine: SpiderEngineSpecification
  height: Float
  torso_bob_speed?: Float
  torso_rotation_speed?: Float
  graphics_set?: SpiderTorsoGraphicsSet
  absorptions_to_join_attack?: {
    [k: string]: Float
  }
  spawning_time_modifier?: Double
  radar_range?: Uint32
  attack_parameters: AttackParameters
  dying_sound?: Sound
  warcry?: Sound
  vision_distance: Double
  distraction_cooldown: Uint32
  min_pursue_time?: Uint32
  max_pursue_distance?: Double
  ai_settings?: UnitAISettings
}
/**
 * https://lua-api.factorio.com/stable/prototypes/SpiderVehiclePrototype.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "SpiderVehiclePrototype".
 */
export type SpiderVehiclePrototype = VehiclePrototype & {
  energy_source: BurnerEnergySource | VoidEnergySource
  inventory_size: ItemStackIndex
  graphics_set?: SpiderVehicleGraphicsSet
  spider_engine: SpiderEngineSpecification
  height: Float
  movement_energy_consumption: Energy
  automatic_weapon_cycling: Bool
  chain_shooting_cooldown_modifier: Float
  torso_rotation_speed?: Float
  torso_bob_speed?: Float
  trash_inventory_size?: ItemStackIndex
  guns?: ItemID[] | {}
}
/**
 * https://lua-api.factorio.com/stable/prototypes/SplitterPrototype.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "SplitterPrototype".
 */
export type SplitterPrototype = TransportBeltConnectablePrototype & {
  structure?: Animation4Way
  structure_patch?: Animation4Way
  frozen_patch?: Sprite4Way
  structure_animation_speed_coefficient?: Double
  structure_animation_movement_cooldown?: Uint32
  related_transport_belt?: EntityID
}
/**
 * https://lua-api.factorio.com/stable/prototypes/StickerPrototype.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "StickerPrototype".
 */
export type StickerPrototype = EntityPrototype & {
  duration_in_ticks: Uint32
  animation?: Animation
  render_layer?: RenderLayer
  damage_interval?: Uint32
  spread_fire_entity?: EntityID
  fire_spread_cooldown?: Uint8
  fire_spread_radius?: Float
  stickers_per_square_meter?: Float
  force_visibility?: ForceCondition
  single_particle?: Bool
  damage_per_tick?: DamageParameters
  target_movement_modifier?: Float
  target_movement_modifier_from?: Float
  target_movement_modifier_to?: Float
  target_movement_max?: Float
  target_movement_max_from?: Float
  target_movement_max_to?: Float
  ground_target?: Bool
  vehicle_speed_modifier?: Float
  vehicle_speed_modifier_from?: Float
  vehicle_speed_modifier_to?: Float
  vehicle_speed_max?: Float
  vehicle_speed_max_from?: Float
  vehicle_speed_max_to?: Float
  vehicle_friction_modifier?: Float
  vehicle_friction_modifier_from?: Float
  vehicle_friction_modifier_to?: Float
  selection_box_type?: CursorBoxType
  update_effects?: TriggerEffectWithCooldown[] | {}
}
/**
 * https://lua-api.factorio.com/stable/prototypes/StorageTankPrototype.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "StorageTankPrototype".
 */
export type StorageTankPrototype = EntityWithOwnerPrototype & {
  fluid_box: FluidBox
  window_bounding_box: BoundingBox
  pictures?: {
    picture?: Sprite4Way
    frozen_patch?: Sprite4Way
    window_background?: Sprite
    fluid_background?: Sprite
    flow_sprite?: Sprite
    gas_flow?: Animation
  }
  flow_length_in_ticks: Uint32
  two_direction_only?: Bool
  show_fluid_icon?: Bool
  circuit_wire_max_distance?: Double
  draw_copper_wires?: Bool
  draw_circuit_wires?: Bool
  /**
   * @minItems 4
   * @maxItems 4
   */
  circuit_connector?: [
    CircuitConnectorDefinition,
    CircuitConnectorDefinition,
    CircuitConnectorDefinition,
    CircuitConnectorDefinition,
  ]
}
/**
 * https://lua-api.factorio.com/stable/prototypes/SurfacePropertyPrototype.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "SurfacePropertyPrototype".
 */
export type SurfacePropertyPrototype = Prototype & {
  localised_unit_key?: String
  default_value: Double
  is_time?: Bool
}
/**
 * https://lua-api.factorio.com/stable/prototypes/SurfacePrototype.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "SurfacePrototype".
 */
export type SurfacePrototype = Prototype & {
  surface_properties?: {
    [k: string]: Double
  }
  icon?: FileName
  icon_size?: SpriteSizeType
}
/**
 * https://lua-api.factorio.com/stable/prototypes/TechnologyPrototype.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "TechnologyPrototype".
 */
export type TechnologyPrototype = Prototype & {
  icons?: IconData[] | {}
  icon?: FileName
  icon_size?: SpriteSizeType
  upgrade?: Bool
  enabled?: Bool
  essential?: Bool
  visible_when_disabled?: Bool
  ignore_tech_cost_multiplier?: Bool
  allows_productivity?: Bool
  research_trigger?: TechnologyTrigger
  unit?: TechnologyUnit
  max_level?: Uint32 | 'infinite'
  prerequisites?: TechnologyID[] | {}
  effects?: Modifier[] | {}
}
/**
 * https://lua-api.factorio.com/stable/prototypes/TemporaryContainerPrototype.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "TemporaryContainerPrototype".
 */
export type TemporaryContainerPrototype = ContainerPrototype & {
  destroy_on_empty?: Bool
  time_to_live?: Uint32
  alert_after_time?: Uint32
}
/**
 * https://lua-api.factorio.com/stable/prototypes/ThrusterPrototype.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "ThrusterPrototype".
 */
export type ThrusterPrototype = EntityWithOwnerPrototype & {
  min_performance: ThrusterPerformancePoint
  max_performance: ThrusterPerformancePoint
  fuel_fluid_box: FluidBox
  oxidizer_fluid_box: FluidBox
  graphics_set?: ThrusterGraphicsSet
  plumes?: PlumesSpecification
}
/**
 * https://lua-api.factorio.com/stable/prototypes/TileGhostPrototype.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "TileGhostPrototype".
 */
export type TileGhostPrototype = EntityPrototype
/**
 * https://lua-api.factorio.com/stable/prototypes/TilePrototype.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "TilePrototype".
 */
export type TilePrototype = Prototype & {
  collision_mask: CollisionMaskConnector
  layer: Uint8
  build_animations?: Animation4Way
  build_animations_background?: Animation4Way
  built_animation_frame?: Uint32
  variants: TileTransitionsVariants
  map_color: Color
  icons?: IconData[] | {}
  icon?: FileName
  icon_size?: SpriteSizeType
  lowland_fog?: Bool
  transition_overlay_layer_offset?: Int8
  sprite_usage_surface?: SpriteUsageSurfaceHint
  layer_group?: TileRenderLayer
  transition_merges_with_tile?: TileID
  effect_color?: Color
  tint?: Color
  particle_tints?: TileBasedParticleTints
  walking_sound?: Sound
  landing_steps_sound?: Sound
  driving_sound?: Sound
  build_sound?:
    | Sound
    | {
        small?: Sound
        medium?: Sound
        large?: Sound
        animated?: Sound
      }
  mined_sound?: Sound
  walking_speed_modifier?: Double
  vehicle_friction_modifier?: Double
  decorative_removal_probability?: Float
  allowed_neighbors?: TileID[] | {}
  needs_correction?: Bool
  minable?: MinableProperties
  fluid?: FluidID
  next_direction?: TileID
  can_be_part_of_blueprint?: Bool
  is_foundation?: Bool
  destroys_dropped_items?: Bool
  allows_being_covered?: Bool
  searchable?: Bool
  max_health?: Float
  weight?: Weight
  dying_explosion?: ExplosionDefinition | ExplosionDefinition[] | {}
  absorptions_per_second?: {
    [k: string]: Double
  }
  default_cover_tile?: TileID
  frozen_variant?: TileID
  thawed_variant?: TileID
  effect?: TileEffectDefinitionID
  trigger_effect?: TriggerEffect
  default_destroyed_dropped_item_trigger?: Trigger
  scorch_mark_color?: Color
  check_collision_with_entities?: Bool
  effect_color_secondary?: Color
  effect_is_opaque?: Bool
  transitions?: TileTransitionsToTiles[] | {}
  transitions_between_transitions?: TileTransitionsBetweenTransitions[] | {}
  autoplace?: AutoplaceSpecification
  placeable_by?: ItemToPlace | ItemToPlace[] | {}
  bound_decoratives?: DecorativeID | DecorativeID[] | {}
  ambient_sounds_group?: TileID
  ambient_sounds?: WorldAmbientSoundDefinition | WorldAmbientSoundDefinition[] | {}
}
/**
 * https://lua-api.factorio.com/stable/prototypes/TipsAndTricksItem.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "TipsAndTricksItem".
 */
export type TipsAndTricksItem = PrototypeBase & {
  image?: FileName
  simulation?: SimulationDefinition
  tag?: String
  category?: String
  indent?: Uint8
  is_title?: Bool
  trigger?: TipTrigger
  skip_trigger?: TipTrigger
  tutorial?: String
  starting_status?: TipStatus
  dependencies?: String[] | {}
  player_input_method_filter?: PlayerInputMethodFilter
  icons?: IconData[] | {}
  icon?: FileName
  icon_size?: SpriteSizeType
}
/**
 * https://lua-api.factorio.com/stable/prototypes/TrainPathAchievementPrototype.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "TrainPathAchievementPrototype".
 */
export type TrainPathAchievementPrototype = AchievementPrototype & {
  minimum_distance: Double
}
/**
 * https://lua-api.factorio.com/stable/prototypes/TrainStopPrototype.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "TrainStopPrototype".
 */
export type TrainStopPrototype = EntityWithOwnerPrototype & {
  animation_ticks_per_frame: Uint32
  rail_overlay_animations?: Animation4Way
  animations?: Animation4Way
  top_animations?: Animation4Way
  default_train_stopped_signal?: SignalIDConnector
  default_trains_count_signal?: SignalIDConnector
  default_trains_limit_signal?: SignalIDConnector
  default_priority_signal?: SignalIDConnector
  circuit_wire_max_distance?: Double
  draw_copper_wires?: Bool
  draw_circuit_wires?: Bool
  color?: Color
  chart_name?: Bool
  light1?: TrainStopLight
  light2?: TrainStopLight
  drawing_boxes?: {
    north: BoundingBox
    east: BoundingBox
    south: BoundingBox
    west: BoundingBox
  }
  /**
   * @minItems 4
   * @maxItems 4
   */
  circuit_connector?: [
    CircuitConnectorDefinition,
    CircuitConnectorDefinition,
    CircuitConnectorDefinition,
    CircuitConnectorDefinition,
  ]
}
/**
 * https://lua-api.factorio.com/stable/prototypes/TransportBeltPrototype.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "TransportBeltPrototype".
 */
export type TransportBeltPrototype = TransportBeltConnectablePrototype & {
  connector_frame_sprites?: TransportBeltConnectorFrame
  circuit_wire_max_distance?: Double
  draw_copper_wires?: Bool
  draw_circuit_wires?: Bool
  circuit_connector?: CircuitConnectorDefinition[] | {}
  related_underground_belt?: EntityID
}
/**
 * https://lua-api.factorio.com/stable/prototypes/TrivialSmokePrototype.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "TrivialSmokePrototype".
 */
export type TrivialSmokePrototype = Prototype & {
  animation: Animation
  duration: Uint32
  glow_animation?: Animation
  color?: Color
  start_scale?: Float
  end_scale?: Float
  movement_slow_down_factor?: Double
  spread_duration?: Uint32
  fade_away_duration?: Uint32
  fade_in_duration?: Uint32
  glow_fade_away_duration?: Uint32
  cyclic?: Bool
  affected_by_wind?: Bool
  show_when_smoke_off?: Bool
  render_layer?: RenderLayer
}
/**
 * https://lua-api.factorio.com/stable/prototypes/TutorialDefinition.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "TutorialDefinition".
 */
export type TutorialDefinition = PrototypeBase & {
  scenario: String
}
/**
 * https://lua-api.factorio.com/stable/prototypes/UndergroundBeltPrototype.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "UndergroundBeltPrototype".
 */
export type UndergroundBeltPrototype = TransportBeltConnectablePrototype & {
  max_distance: Uint8
  structure?: {
    direction_in?: Sprite4Way
    direction_out?: Sprite4Way
    back_patch?: Sprite4Way
    front_patch?: Sprite4Way
    direction_in_side_loading?: Sprite4Way
    direction_out_side_loading?: Sprite4Way
    frozen_patch_in?: Sprite4Way
    frozen_patch_out?: Sprite4Way
  }
  underground_sprite?: Sprite
  underground_remove_belts_sprite?: Sprite
  max_distance_underground_remove_belts_sprite?: Sprite
  underground_collision_mask?: CollisionMaskConnector
  max_distance_tint?: Color
}
/**
 * https://lua-api.factorio.com/stable/prototypes/UnitPrototype.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "UnitPrototype".
 */
export type UnitPrototype = EntityWithOwnerPrototype & {
  run_animation: RotatedAnimation
  attack_parameters: AttackParameters
  warcry?: Sound
  movement_speed: Float
  distance_per_frame: Float
  distraction_cooldown: Uint32
  vision_distance: Double
  rotation_speed?: Float
  dying_sound?: Sound
  min_pursue_time?: Uint32
  has_belt_immunity?: Bool
  max_pursue_distance?: Double
  radar_range?: Uint32
  ai_settings?: UnitAISettings
  move_while_shooting?: Bool
  can_open_gates?: Bool
  affected_by_tiles?: Bool
  render_layer?: RenderLayer
  light?: LightDefinition
  absorptions_to_join_attack?: {
    [k: string]: Float
  }
  spawning_time_modifier?: Double
  walking_sound?: Sound
  alternative_attacking_frame_sequence?: UnitAlternativeFrameSequence
  running_sound_animation_positions?: Float[] | {}
}
/**
 * https://lua-api.factorio.com/stable/prototypes/UseEntityInEnergyProductionAchievementPrototype.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "UseEntityInEnergyProductionAchievementPrototype".
 */
export type UseEntityInEnergyProductionAchievementPrototype = AchievementPrototype & {
  entity: EntityID
  consumed_condition?: ItemIDFilter
  produced_condition?: ItemIDFilter
  required_to_build?: EntityID
}
/**
 * https://lua-api.factorio.com/stable/prototypes/UseItemAchievementPrototype.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "UseItemAchievementPrototype".
 */
export type UseItemAchievementPrototype = AchievementPrototype & {
  to_use: ItemID
  limit_quality: QualityID
  amount?: Uint32
  limited_to_one_game?: Bool
}
/**
 * https://lua-api.factorio.com/stable/prototypes/UtilityConstants.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "UtilityConstants".
 */
export type UtilityConstants = PrototypeBase & {
  entity_button_background_color: Color
  building_buildable_too_far_tint: Color
  building_buildable_tint: Color
  building_not_buildable_tint: Color
  building_ignorable_tint: Color
  building_no_tint: Color
  underground_belt_max_distance_tint: Color
  underground_pipe_max_distance_tint: Color
  ghost_shader_tint: GhostTintSet
  ghost_shaderless_tint: GhostTintSet
  ghost_shimmer_settings: GhostShimmerConfig
  probability_product_count_tint: Color
  zero_count_value_tint: Color
  equipment_default_background_color: Color
  equipment_default_background_border_color: Color
  equipment_default_grabbed_background_color: Color
  turret_range_visualization_color: Color
  capsule_range_visualization_color: Color
  agricultural_range_visualization_color: Color
  artillery_range_visualization_color: Color
  chart: ChartUtilityConstants
  gui_remark_color: Color
  gui_search_match_foreground_color: Color
  gui_search_match_background_color: Color
  default_player_force_color: Color
  default_enemy_force_color: Color
  default_other_force_color: Color
  deconstruct_mark_tint: Color
  rail_planner_count_button_color: Color
  count_button_size: Int32
  logistic_gui_unselected_network_highlight_tint: Color
  logistic_gui_selected_network_highlight_tint: Color
  chart_search_highlight: Color
  selected_chart_search_highlight: Color
  zoom_to_world_can_use_nightvision: Bool
  zoom_to_world_effect_strength: Float
  max_logistic_filter_count: LogisticFilterIndex
  max_terrain_building_size: Uint8
  small_area_size: Float
  medium_area_size: Float
  large_area_size: Float
  small_blueprint_area_size: Float
  medium_blueprint_area_size: Float
  large_blueprint_area_size: Float
  enabled_recipe_slot_tint: Color
  disabled_recipe_slot_tint: Color
  disabled_recipe_slot_background_tint: Color
  forced_enabled_recipe_slot_background_tint: Color
  rail_segment_colors: Color[] | {}
  player_colors:
    | {
        name: String
        player_color: Color
        chat_color: Color
      }[]
    | {}
  server_command_console_chat_color: Color
  script_command_console_chat_color: Color
  default_alert_icon_scale: Float
  default_alert_icon_shift_by_type?: {
    [k: string]: Vector
  }
  default_alert_icon_scale_by_type?: {
    [k: string]: Float
  }
  bonus_gui_ordering: {
    artillery_range: Order
    worker_robots: Order
    character: Order
    follower_robots: Order
    research_speed: Order
    beacon_distribution: Order
    inserter: Order
    stack_inserter: Order
    bulk_inserter: Order
    turret_attack: Order
    mining_productivity: Order
    train_braking_force: Order
  }
  daytime_color_lookup: DaytimeColorLookupTable
  zoom_to_world_daytime_color_lookup: DaytimeColorLookupTable
  frozen_color_lookup: ColorLookupTable
  map_editor: {
    clone_editor_copy_source_color: Color
    clone_editor_copy_destination_allowed_color: Color
    clone_editor_copy_destination_not_allowed_color: Color
    clone_editor_brush_source_color: Color
    clone_editor_brush_destination_color: Color
    clone_editor_brush_cursor_preview_tint: Color
    clone_editor_brush_world_preview_tint: Color
    script_editor_select_area_color: Color
    script_editor_drag_area_color: Color
    force_editor_select_area_color: Color
    cliff_editor_remove_cliffs_color: Color
    tile_editor_selection_preview_tint: Color
    tile_editor_area_selection_color: Color
    decorative_editor_selection_preview_tint: Color
    tile_editor_selection_preview_radius: Uint8
    decorative_editor_selection_preview_radius: Uint8
  }
  drop_item_radius: Float
  checkerboard_white: Color
  checkerboard_black: Color
  item_outline_color: Color
  item_outline_radius: Float
  item_outline_inset: Float
  item_outline_sharpness: Float
  item_default_random_tint_strength: Color
  spawner_evolution_factor_health_modifier: Float
  item_health_bar_colors:
    | {
        threshold: Float
        color: Color
      }[]
    | {}
  item_ammo_magazine_left_bar_color: Color
  item_tool_durability_bar_color: Color
  filter_outline_color: Color
  icon_shadow_radius: Float
  icon_shadow_inset: Float
  icon_shadow_sharpness: Float
  icon_shadow_color: Color
  clipboard_history_size: Uint32
  recipe_step_limit: Uint32
  manual_rail_building_reach_modifier: Double
  train_temporary_stop_wait_time: Uint32
  train_time_wait_condition_default: Uint32
  train_inactivity_wait_condition_default: Uint32
  default_trigger_target_mask_by_type?: {
    [k: string]: TriggerTargetMask
  }
  unit_group_pathfind_resolution: Int8
  unit_group_max_pursue_distance: Double
  dynamic_recipe_overload_factor: Double
  minimum_recipe_overload_multiplier: Uint32
  maximum_recipe_overload_multiplier: Uint32
  entity_renderer_search_box_limits: {
    left: Uint8
    top: Uint8
    right: Uint8
    bottom: Uint8
  }
  light_renderer_search_distance_limit: Uint8
  tree_leaf_distortion_strength_far: Vector
  tree_leaf_distortion_distortion_far: Vector
  tree_leaf_distortion_speed_far: Vector
  tree_leaf_distortion_strength_near: Vector
  tree_leaf_distortion_distortion_near: Vector
  tree_leaf_distortion_speed_near: Vector
  tree_shadow_roughness: Float
  tree_shadow_speed: Float
  missing_preview_sprite_location: FileName
  main_menu_background_image_location: FileName
  main_menu_simulations?: {
    [k: string]: SimulationDefinition
  }
  main_menu_background_vignette_intensity: Float
  main_menu_background_vignette_sharpness: Float
  default_scorch_mark_color: Color
  color_filters?:
    | {
        name: String
        localised_name: LocalisedString
        matrix: (Float[] | {})[] | {}
      }[]
    | {}
  minimap_slot_hovered_tint: Color
  minimap_slot_clicked_tint: Color
  clear_cursor_volume_modifier: Float
  weapons_in_simulation_volume_modifier: Float
  explosions_in_simulation_volume_modifier: Float
  enemies_in_simulation_volume_modifier: Float
  low_energy_robot_estimate_multiplier: Double
  asteroid_spawning_offset: SimpleBoundingBox
  asteroid_fading_range: Float
  asteroid_spawning_with_random_orientation_max_speed: Double
  asteroid_position_offset_to_speed_coefficient: Double
  asteroid_collector_navmesh_refresh_tick_interval: Uint32
  asteroid_collector_blockage_update_tile_distance: Uint32
  asteroid_collector_max_nurbs_control_point_separation: Double
  asteroid_collector_static_head_swing_strength_scale: Double
  asteroid_collector_static_head_swing_segment_count: Uint32
  space_platform_default_speed_formula: MathExpression
  space_platform_relative_speed_factor: Double
  space_platform_starfield_movement_vector: Vector
  space_platform_max_size: SimpleBoundingBox
  space_platform_dump_cooldown: Uint32
  default_item_weight: Weight
  rocket_lift_weight: Weight
  max_fluid_flow: FluidAmount
  default_pipeline_extent: Double
  default_planet_procession_set: ProcessionSet
  default_platform_procession_set: ProcessionSet
  landing_area_clear_zone_radius: Float
  landing_area_max_radius: Float
  lightning_attractor_collection_range_color: Color
  lightning_attractor_protection_range_color: Color
  ejected_item_lifetime: MapTick
  ejected_item_speed: Double
  ejected_item_direction_variation: Double
  ejected_item_friction: Double
  train_visualization: TrainVisualizationConstants
  default_collision_masks: {
    [k: string]: CollisionMaskConnector
  }
  show_chunk_components_collision_mask: CollisionMaskConnector
  building_collision_mask: CollisionMaskConnector
  water_collision_mask: CollisionMaskConnector
  ghost_layer: CollisionLayerID
  train_pushed_by_player_max_speed: Double
  train_pushed_by_player_max_acceleration: Double
  train_pushed_by_player_ignores_friction: Bool
  freezing_temperature: Double
  train_on_elevated_rail_shadow_shift_multiplier: Vector
  select_group_row_count: Uint8
  select_slot_row_count: Uint8
  inventory_width: Uint32
  module_inventory_width: Uint32
  tooltip_monitor_edge_border: Int32
  flying_text_ttl: Uint32
  train_path_finding: {
    train_stop_penalty: Uint32
    stopped_manually_controlled_train_penalty: Uint32
    stopped_manually_controlled_train_without_passenger_penalty: Uint32
    signal_reserved_by_circuit_network_penalty: Uint32
    train_in_station_penalty: Uint32
    train_in_station_with_no_other_valid_stops_in_schedule: Uint32
    train_arriving_to_station_penalty: Uint32
    train_arriving_to_signal_penalty: Uint32
    train_waiting_at_signal_penalty: Uint32
    train_waiting_at_signal_tick_multiplier_penalty: Float
    train_with_no_path_penalty: Uint32
    train_auto_without_schedule_penalty: Uint32
  }
  max_belt_stack_size: Uint8
  inserter_hand_stack_items_per_sprite: ItemCountType
  inserter_hand_stack_max_sprites: ItemCountType
  remote_view_LPF_min_cutoff_frequency: Float
  remote_view_LPF_max_cutoff_frequency: Float
  walking_sound_count_reduction_rate: Float
  moving_sound_count_reduction_rate: Float
  environment_sounds_transition_fade_in_ticks: Uint32
  time_to_show_full_health_bar: MapTick
}
/**
 * https://lua-api.factorio.com/stable/prototypes/UtilitySounds.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "UtilitySounds".
 */
export type UtilitySounds = PrototypeBase & {
  gui_click: Sound
  list_box_click: Sound
  build_small: Sound
  build_medium: Sound
  build_large: Sound
  build_huge: Sound
  cannot_build: Sound
  build_blueprint_small: Sound
  build_blueprint_medium: Sound
  build_blueprint_large: Sound
  build_blueprint_huge: Sound
  build_ghost_upgrade: Sound
  build_ghost_upgrade_cancel: Sound
  build_animated_small: Sound
  build_animated_medium: Sound
  build_animated_large: Sound
  build_animated_huge: Sound
  deconstruct_small: Sound
  deconstruct_medium: Sound
  deconstruct_large: Sound
  deconstruct_huge: Sound
  deconstruct_robot: Sound
  rotated_small: Sound
  rotated_medium: Sound
  rotated_large: Sound
  rotated_huge: Sound
  axe_mining_ore: Sound
  axe_mining_stone: Sound
  mining_wood: Sound
  axe_fighting: Sound
  alert_destroyed: Sound
  console_message: Sound
  scenario_message: Sound
  new_objective: Sound
  game_lost: Sound
  game_won: Sound
  metal_walking_sound: Sound
  research_completed: Sound
  default_manual_repair: Sound
  crafting_finished: Sound
  inventory_click: Sound
  inventory_move: Sound
  clear_cursor: Sound
  armor_insert: Sound
  armor_remove: Sound
  achievement_unlocked: Sound
  wire_connect_pole: Sound
  wire_disconnect: Sound
  wire_pickup: Sound
  tutorial_notice: Sound
  smart_pipette: Sound
  switch_gun: Sound
  picked_up_item: Sound
  paste_activated: Sound
  item_deleted: Sound
  entity_settings_pasted: Sound
  entity_settings_copied: Sound
  item_spawned: Sound
  confirm: Sound
  undo: Sound
  drop_item: Sound
  rail_plan_start: Sound
  default_driving_sound: InterruptibleSound
  default_landing_steps: Sound
  segment_dying_sound?: Sound
}
/**
 * https://lua-api.factorio.com/stable/prototypes/UtilitySprites.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "UtilitySprites".
 */
export type UtilitySprites = PrototypeBase & {
  cursor_box: {
    regular: BoxSpecification[] | {}
    multiplayer_selection: BoxSpecification[] | {}
    not_allowed: BoxSpecification[] | {}
    copy: BoxSpecification[] | {}
    electricity: BoxSpecification[] | {}
    logistics: BoxSpecification[] | {}
    pair: BoxSpecification[] | {}
    train_visualization: BoxSpecification[] | {}
    blueprint_snap_rectangle: BoxSpecification[] | {}
    rts_selected: BoxSpecification[] | {}
    rts_to_be_selected: BoxSpecification[] | {}
  }
  platform_entity_build_animations?: {
    back_left: EntityBuildAnimationPiece
    back_right: EntityBuildAnimationPiece
    front_left: EntityBuildAnimationPiece
    front_right: EntityBuildAnimationPiece
  }
  bookmark: Sprite
  center: Sprite
  check_mark: Sprite
  check_mark_white: Sprite
  check_mark_green: Sprite
  check_mark_dark_green: Sprite
  not_played_yet_green: Sprite
  not_played_yet_dark_green: Sprite
  played_green: Sprite
  played_dark_green: Sprite
  close_fat: Sprite
  close: Sprite
  close_black: Sprite
  backward_arrow: Sprite
  backward_arrow_black: Sprite
  forward_arrow: Sprite
  forward_arrow_black: Sprite
  recipe_arrow: Sprite
  close_map_preview: Sprite
  color_picker: Sprite
  change_recipe: Sprite
  dropdown: Sprite
  downloading: Sprite
  downloaded: Sprite
  equipment_grid: Sprite
  expand_dots: Sprite
  export: Sprite
  import: Sprite
  map: Sprite
  map_exchange_string: Sprite
  missing_mod_icon: Sprite
  not_available: Sprite
  not_available_black: Sprite
  play: Sprite
  stop: Sprite
  preset: Sprite
  refresh: Sprite
  reset: Sprite
  reset_white: Sprite
  shuffle: Sprite
  station_name: Sprite
  search: Sprite
  sync_mods: Sprite
  trash: Sprite
  trash_white: Sprite
  copy: Sprite
  reassign: Sprite
  warning: Sprite
  warning_white: Sprite
  list_view: Sprite
  grid_view: Sprite
  slots_view: Sprite
  reference_point: Sprite
  mouse_cursor: Sprite
  mouse_cursor_macos: Sprite
  mod_category: Sprite
  mod_last_updated: Sprite
  mod_downloads_count: Sprite
  item_to_be_delivered_symbol: Sprite
  rebuild_mark: Sprite
  any_quality: Sprite
  mod_dependency_arrow: Sprite
  add: Sprite
  add_white: Sprite
  clone: Sprite
  go_to_arrow: Sprite
  pause: Sprite
  speed_down: Sprite
  speed_up: Sprite
  editor_speed_down: Sprite
  editor_pause: Sprite
  editor_play: Sprite
  editor_speed_up: Sprite
  tick_once: Sprite
  tick_sixty: Sprite
  tick_custom: Sprite
  search_icon: Sprite
  too_far: Sprite
  shoot_cursor_green: Sprite
  shoot_cursor_red: Sprite
  electricity_icon: Sprite
  lightning_warning_icon: Sprite
  fuel_icon: Sprite
  ammo_icon: Sprite
  fluid_icon: Sprite
  warning_icon: Sprite
  danger_icon: Sprite
  destroyed_icon: Sprite
  recharge_icon: Sprite
  no_path_icon: Sprite
  destination_full_icon: Sprite
  too_far_from_roboport_icon: Sprite
  pump_cannot_connect_icon: Sprite
  not_enough_repair_packs_icon: Sprite
  not_enough_construction_robots_icon: Sprite
  no_building_material_icon: Sprite
  no_storage_space_icon: Sprite
  no_platform_storage_space_icon: Sprite
  asteroid_collector_path_blocked_icon: Sprite
  unclaimed_cargo_icon: Sprite
  no_roboport_storage_space_icon: Sprite
  cargo_bay_not_connected_icon: Sprite
  frozen_icon: Sprite
  pipeline_disabled_icon: Sprite
  electricity_icon_unplugged: Sprite
  tooltip_category_spoilable: Sprite
  resources_depleted_icon: Sprite
  game_stopped_visualization: Sprite
  health_bar_green_pip: Sprite
  health_bar_yellow_pip: Sprite
  health_bar_red_pip: Sprite
  ghost_bar_pip: Sprite
  bar_gray_pip: Sprite
  shield_bar_pip: Sprite
  hand: Sprite
  hand_black: Sprite
  entity_info_dark_background: Sprite
  medium_gui_arrow: Sprite
  small_gui_arrow: Sprite
  light_medium: Sprite
  light_small: Sprite
  light_cone: Sprite
  color_effect: Sprite
  clock: Sprite
  default_ammo_damage_modifier_icon: Sprite
  default_gun_speed_modifier_icon: Sprite
  default_turret_attack_modifier_icon: Sprite
  hint_arrow_up: Sprite
  hint_arrow_down: Sprite
  hint_arrow_right: Sprite
  hint_arrow_left: Sprite
  fluid_indication_arrow: Sprite
  fluid_indication_arrow_both_ways: Sprite
  heat_exchange_indication: Sprite
  indication_arrow: Sprite
  rail_planner_indication_arrow: Sprite
  rail_planner_indication_arrow_anchored: Sprite
  rail_planner_indication_arrow_too_far: Sprite
  rail_path_not_possible: Sprite
  indication_line: Sprite
  short_indication_line: Sprite
  short_indication_line_green: Sprite
  empty_module_slot: Sprite
  empty_armor_slot: Sprite
  empty_gun_slot: Sprite
  empty_ammo_slot: Sprite
  empty_robot_slot: Sprite
  empty_robot_material_slot: Sprite
  empty_inserter_hand_slot: Sprite
  empty_trash_slot: Sprite
  empty_drop_cargo_slot: Sprite
  upgrade_blueprint: Sprite
  slot: Sprite
  equipment_slot: Sprite
  equipment_collision: Sprite
  battery: Sprite
  green_circle: Sprite
  green_dot: Sprite
  robot_slot: Sprite
  set_bar_slot: Sprite
  missing_icon: Sprite
  deconstruction_mark: Sprite
  buildability_collision: Sprite
  buildability_elevated_collision_line: Sprite
  buildability_elevated_collision_top: Sprite
  buildability_elevated_collision_bottom: Sprite
  buildability_collision_elevated: Sprite
  upgrade_mark: Sprite
  confirm_slot: Sprite
  export_slot: Sprite
  import_slot: Sprite
  none_editor_icon: Sprite
  cable_editor_icon: Sprite
  tile_editor_icon: Sprite
  decorative_editor_icon: Sprite
  asteroid_chunk_editor_icon: Sprite
  resource_editor_icon: Sprite
  entity_editor_icon: Sprite
  item_editor_icon: Sprite
  force_editor_icon: Sprite
  clone_editor_icon: Sprite
  scripting_editor_icon: Sprite
  paint_bucket_icon: Sprite
  surface_editor_icon: Sprite
  time_editor_icon: Sprite
  cliff_editor_icon: Sprite
  brush_icon: Sprite
  spray_icon: Sprite
  cursor_icon: Sprite
  area_icon: Sprite
  line_icon: Sprite
  variations_tool_icon: Sprite
  lua_snippet_tool_icon: Sprite
  editor_selection: Sprite
  brush_square_shape: Sprite
  brush_circle_shape: Sprite
  player_force_icon: Sprite
  neutral_force_icon: Sprite
  enemy_force_icon: Sprite
  nature_icon: Sprite
  no_nature_icon: Sprite
  multiplayer_waiting_icon: Sprite
  spawn_flag: Sprite
  questionmark: Sprite
  copper_wire: Sprite
  green_wire: Sprite
  red_wire: Sprite
  copper_wire_highlight: Sprite
  green_wire_highlight: Sprite
  red_wire_highlight: Sprite
  wire_shadow: Sprite
  and_or: Sprite
  left_arrow: Sprite
  right_arrow: Sprite
  down_arrow: Sprite
  enter: Sprite
  move_tag: Sprite
  side_menu_blueprint_library_icon: Sprite
  side_menu_production_icon: Sprite
  side_menu_bonus_icon: Sprite
  side_menu_tutorials_icon: Sprite
  side_menu_factoriopedia_icon: Sprite
  side_menu_train_icon: Sprite
  side_menu_achievements_icon: Sprite
  side_menu_menu_icon: Sprite
  side_menu_map_icon: Sprite
  side_menu_space_platforms_icon: Sprite
  side_menu_technology_icon: Sprite
  side_menu_logistic_networks_icon: Sprite
  side_menu_players_icon: Sprite
  circuit_network_panel: Sprite
  logistic_network_panel_white: Sprite
  logistic_network_panel_black: Sprite
  rename_icon: Sprite
  achievement_warning: Sprite
  achievement_label: Sprite
  achievement_label_completed: Sprite
  achievement_label_failed: Sprite
  rail_signal_placement_indicator: Sprite
  train_stop_placement_indicator: Sprite
  rail_support_placement_indicator: Sprite
  placement_indicator_leg: Sprite
  grey_rail_signal_placement_indicator: Sprite
  grey_placement_indicator_leg: Sprite
  logistic_radius_visualization: Sprite
  construction_radius_visualization: Sprite
  track_button: Sprite
  track_button_white: Sprite
  show_logistics_network_in_map_view: Sprite
  show_electric_network_in_map_view: Sprite
  show_turret_range_in_map_view: Sprite
  show_train_station_names_in_map_view: Sprite
  show_player_names_in_map_view: Sprite
  show_tags_in_map_view: Sprite
  show_worker_robots_in_map_view: Sprite
  show_rail_signal_states_in_map_view: Sprite
  show_recipe_icons_in_map_view: Sprite
  show_pipelines_in_map_view: Sprite
  train_stop_in_map_view: Sprite
  train_stop_disabled_in_map_view: Sprite
  train_stop_full_in_map_view: Sprite
  custom_tag_in_map_view: Sprite
  covered_chunk: Sprite
  white_square: Sprite
  white_square_icon: Sprite
  white_mask: Sprite
  crafting_machine_recipe_not_unlocked: Sprite
  filter_blacklist: Sprite
  gps_map_icon: Sprite
  custom_tag_icon: Sprite
  space_age_icon: Sprite
  tip_icon: Sprite
  underground_remove_belts: Sprite
  max_distance_underground_remove_belts: Sprite
  underground_remove_pipes: Sprite
  underground_pipe_connection: Sprite
  ghost_cursor: Sprite
  tile_ghost_cursor: Sprite
  force_ghost_cursor: Sprite
  force_tile_ghost_cursor: Sprite
  cross_select: Sprite
  crosshair: Sprite
  expand: Sprite
  collapse: Sprite
  status_working: Sprite
  status_not_working: Sprite
  status_yellow: Sprite
  status_blue: Sprite
  status_inactive: Sprite
  gradient: Sprite
  output_console_gradient: Sprite
  select_icon_white: Sprite
  select_icon_black: Sprite
  notification: Sprite
  alert_arrow: Sprite
  pin_arrow: Sprite
  pin_center: Sprite
  technology_white: Sprite
  feedback: Sprite
  sort_by_name: Sprite
  sort_by_time: Sprite
  parametrise: Sprite
  fluid_visualization_connection: Sprite
  fluid_visualization_connection_both_ways: Sprite
  fluid_visualization_connection_underground: Sprite
  fluid_visualization_extent_arrow: Sprite
  starmap_platform_moving: Sprite
  starmap_platform_moving_hovered: Sprite
  starmap_platform_moving_clicked: Sprite
  starmap_platform_stopped: Sprite
  starmap_platform_stopped_hovered: Sprite
  starmap_platform_stopped_clicked: Sprite
  starmap_platform_stacked: Sprite
  starmap_platform_stacked_hovered: Sprite
  starmap_platform_stacked_clicked: Sprite
  starmap_star: Sprite
  controller_joycon_a: Sprite
  controller_joycon_b: Sprite
  controller_joycon_x: Sprite
  controller_joycon_y: Sprite
  controller_joycon_back: Sprite
  controller_joycon_start: Sprite
  controller_joycon_leftstick: Sprite
  controller_joycon_rightstick: Sprite
  controller_joycon_leftshoulder: Sprite
  controller_joycon_rightshoulder: Sprite
  controller_joycon_dpup: Sprite
  controller_joycon_dpdown: Sprite
  controller_joycon_dpleft: Sprite
  controller_joycon_dpright: Sprite
  controller_joycon_paddle1: Sprite
  controller_joycon_paddle2: Sprite
  controller_joycon_paddle3: Sprite
  controller_joycon_paddle4: Sprite
  controller_joycon_righttrigger: Sprite
  controller_joycon_lefttrigger: Sprite
  controller_joycon_left_stick: Sprite
  controller_joycon_right_stick: Sprite
  controller_joycon_black_a: Sprite
  controller_joycon_black_b: Sprite
  controller_joycon_black_x: Sprite
  controller_joycon_black_y: Sprite
  controller_joycon_black_back: Sprite
  controller_joycon_black_start: Sprite
  controller_joycon_black_leftstick: Sprite
  controller_joycon_black_rightstick: Sprite
  controller_joycon_black_leftshoulder: Sprite
  controller_joycon_black_rightshoulder: Sprite
  controller_joycon_black_dpup: Sprite
  controller_joycon_black_dpdown: Sprite
  controller_joycon_black_dpleft: Sprite
  controller_joycon_black_dpright: Sprite
  controller_joycon_black_paddle1: Sprite
  controller_joycon_black_paddle2: Sprite
  controller_joycon_black_paddle3: Sprite
  controller_joycon_black_paddle4: Sprite
  controller_joycon_black_righttrigger: Sprite
  controller_joycon_black_lefttrigger: Sprite
  controller_joycon_black_left_stick: Sprite
  controller_joycon_black_right_stick: Sprite
  controller_xbox_a: Sprite
  controller_xbox_b: Sprite
  controller_xbox_x: Sprite
  controller_xbox_y: Sprite
  controller_xbox_back: Sprite
  controller_xbox_start: Sprite
  controller_xbox_leftstick: Sprite
  controller_xbox_rightstick: Sprite
  controller_xbox_leftshoulder: Sprite
  controller_xbox_rightshoulder: Sprite
  controller_xbox_dpup: Sprite
  controller_xbox_dpdown: Sprite
  controller_xbox_dpleft: Sprite
  controller_xbox_dpright: Sprite
  controller_xbox_righttrigger: Sprite
  controller_xbox_lefttrigger: Sprite
  controller_xbox_left_stick: Sprite
  controller_xbox_right_stick: Sprite
  controller_xbox_black_a: Sprite
  controller_xbox_black_b: Sprite
  controller_xbox_black_x: Sprite
  controller_xbox_black_y: Sprite
  controller_xbox_black_back: Sprite
  controller_xbox_black_start: Sprite
  controller_xbox_black_leftstick: Sprite
  controller_xbox_black_rightstick: Sprite
  controller_xbox_black_leftshoulder: Sprite
  controller_xbox_black_rightshoulder: Sprite
  controller_xbox_black_dpup: Sprite
  controller_xbox_black_dpdown: Sprite
  controller_xbox_black_dpleft: Sprite
  controller_xbox_black_dpright: Sprite
  controller_xbox_black_righttrigger: Sprite
  controller_xbox_black_lefttrigger: Sprite
  controller_xbox_black_left_stick: Sprite
  controller_xbox_black_right_stick: Sprite
  controller_ps_a: Sprite
  controller_ps_b: Sprite
  controller_ps_x: Sprite
  controller_ps_y: Sprite
  controller_ps_back: Sprite
  controller_ps_start: Sprite
  controller_ps_leftstick: Sprite
  controller_ps_rightstick: Sprite
  controller_ps_leftshoulder: Sprite
  controller_ps_rightshoulder: Sprite
  controller_ps_dpup: Sprite
  controller_ps_dpdown: Sprite
  controller_ps_dpleft: Sprite
  controller_ps_dpright: Sprite
  controller_ps_righttrigger: Sprite
  controller_ps_lefttrigger: Sprite
  controller_ps_left_stick: Sprite
  controller_ps_right_stick: Sprite
  controller_ps_black_a: Sprite
  controller_ps_black_b: Sprite
  controller_ps_black_x: Sprite
  controller_ps_black_y: Sprite
  controller_ps_black_back: Sprite
  controller_ps_black_start: Sprite
  controller_ps_black_leftstick: Sprite
  controller_ps_black_rightstick: Sprite
  controller_ps_black_leftshoulder: Sprite
  controller_ps_black_rightshoulder: Sprite
  controller_ps_black_dpup: Sprite
  controller_ps_black_dpdown: Sprite
  controller_ps_black_dpleft: Sprite
  controller_ps_black_dpright: Sprite
  controller_ps_black_righttrigger: Sprite
  controller_ps_black_lefttrigger: Sprite
  controller_ps_black_left_stick: Sprite
  controller_ps_black_right_stick: Sprite
  controller_steamdeck_a: Sprite
  controller_steamdeck_b: Sprite
  controller_steamdeck_x: Sprite
  controller_steamdeck_y: Sprite
  controller_steamdeck_back: Sprite
  controller_steamdeck_start: Sprite
  controller_steamdeck_leftstick: Sprite
  controller_steamdeck_rightstick: Sprite
  controller_steamdeck_leftshoulder: Sprite
  controller_steamdeck_rightshoulder: Sprite
  controller_steamdeck_dpup: Sprite
  controller_steamdeck_dpdown: Sprite
  controller_steamdeck_dpleft: Sprite
  controller_steamdeck_dpright: Sprite
  controller_steamdeck_paddle1: Sprite
  controller_steamdeck_paddle2: Sprite
  controller_steamdeck_paddle3: Sprite
  controller_steamdeck_paddle4: Sprite
  controller_steamdeck_righttrigger: Sprite
  controller_steamdeck_lefttrigger: Sprite
  controller_steamdeck_left_stick: Sprite
  controller_steamdeck_right_stick: Sprite
  controller_steamdeck_black_a: Sprite
  controller_steamdeck_black_b: Sprite
  controller_steamdeck_black_x: Sprite
  controller_steamdeck_black_y: Sprite
  controller_steamdeck_black_back: Sprite
  controller_steamdeck_black_start: Sprite
  controller_steamdeck_black_leftstick: Sprite
  controller_steamdeck_black_rightstick: Sprite
  controller_steamdeck_black_leftshoulder: Sprite
  controller_steamdeck_black_rightshoulder: Sprite
  controller_steamdeck_black_dpup: Sprite
  controller_steamdeck_black_dpdown: Sprite
  controller_steamdeck_black_dpleft: Sprite
  controller_steamdeck_black_dpright: Sprite
  controller_steamdeck_black_paddle1: Sprite
  controller_steamdeck_black_paddle2: Sprite
  controller_steamdeck_black_paddle3: Sprite
  controller_steamdeck_black_paddle4: Sprite
  controller_steamdeck_black_righttrigger: Sprite
  controller_steamdeck_black_lefttrigger: Sprite
  controller_steamdeck_black_left_stick: Sprite
  controller_steamdeck_black_right_stick: Sprite
  clouds: Animation
  arrow_button: Animation
  explosion_chart_visualization: Animation
  refresh_white: Animation
  navmesh_pending_icon: Animation
  inserter_stack_size_bonus_modifier_icon: Sprite
  inserter_stack_size_bonus_modifier_constant?: Sprite
  bulk_inserter_capacity_bonus_modifier_icon: Sprite
  bulk_inserter_capacity_bonus_modifier_constant?: Sprite
  laboratory_speed_modifier_icon: Sprite
  laboratory_speed_modifier_constant?: Sprite
  character_logistic_trash_slots_modifier_icon: Sprite
  character_logistic_trash_slots_modifier_constant?: Sprite
  maximum_following_robots_count_modifier_icon: Sprite
  maximum_following_robots_count_modifier_constant?: Sprite
  worker_robot_speed_modifier_icon: Sprite
  worker_robot_speed_modifier_constant?: Sprite
  worker_robot_storage_modifier_icon: Sprite
  worker_robot_storage_modifier_constant?: Sprite
  create_ghost_on_entity_death_modifier_icon: Sprite
  create_ghost_on_entity_death_modifier_constant?: Sprite
  turret_attack_modifier_icon: Sprite
  turret_attack_modifier_constant?: Sprite
  ammo_damage_modifier_icon: Sprite
  ammo_damage_modifier_constant?: Sprite
  give_item_modifier_icon: Sprite
  give_item_modifier_constant?: Sprite
  gun_speed_modifier_icon: Sprite
  gun_speed_modifier_constant?: Sprite
  unlock_recipe_modifier_icon: Sprite
  unlock_recipe_modifier_constant?: Sprite
  character_crafting_speed_modifier_icon: Sprite
  character_crafting_speed_modifier_constant?: Sprite
  character_mining_speed_modifier_icon: Sprite
  character_mining_speed_modifier_constant?: Sprite
  character_running_speed_modifier_icon: Sprite
  character_running_speed_modifier_constant?: Sprite
  character_build_distance_modifier_icon: Sprite
  character_build_distance_modifier_constant?: Sprite
  character_item_drop_distance_modifier_icon: Sprite
  character_item_drop_distance_modifier_constant?: Sprite
  character_reach_distance_modifier_icon: Sprite
  character_reach_distance_modifier_constant?: Sprite
  character_resource_reach_distance_modifier_icon: Sprite
  character_resource_reach_distance_modifier_constant?: Sprite
  character_item_pickup_distance_modifier_icon: Sprite
  character_item_pickup_distance_modifier_constant?: Sprite
  character_loot_pickup_distance_modifier_icon: Sprite
  character_loot_pickup_distance_modifier_constant?: Sprite
  character_inventory_slots_bonus_modifier_icon: Sprite
  character_inventory_slots_bonus_modifier_constant?: Sprite
  deconstruction_time_to_live_modifier_icon: Sprite
  deconstruction_time_to_live_modifier_constant?: Sprite
  max_failed_attempts_per_tick_per_construction_queue_modifier_icon: Sprite
  max_failed_attempts_per_tick_per_construction_queue_modifier_constant?: Sprite
  max_successful_attempts_per_tick_per_construction_queue_modifier_icon: Sprite
  max_successful_attempts_per_tick_per_construction_queue_modifier_constant?: Sprite
  character_health_bonus_modifier_icon: Sprite
  character_health_bonus_modifier_constant?: Sprite
  mining_drill_productivity_bonus_modifier_icon: Sprite
  mining_drill_productivity_bonus_modifier_constant?: Sprite
  train_braking_force_bonus_modifier_icon: Sprite
  train_braking_force_bonus_modifier_constant?: Sprite
  worker_robot_battery_modifier_icon: Sprite
  worker_robot_battery_modifier_constant?: Sprite
  laboratory_productivity_modifier_icon: Sprite
  laboratory_productivity_modifier_constant?: Sprite
  follower_robot_lifetime_modifier_icon: Sprite
  follower_robot_lifetime_modifier_constant?: Sprite
  artillery_range_modifier_icon: Sprite
  artillery_range_modifier_constant?: Sprite
  nothing_modifier_icon: Sprite
  nothing_modifier_constant?: Sprite
  character_additional_mining_categories_modifier_icon: Sprite
  character_additional_mining_categories_modifier_constant?: Sprite
  character_logistic_requests_modifier_icon: Sprite
  character_logistic_requests_modifier_constant?: Sprite
  unlock_space_location_modifier_icon: Sprite
  unlock_space_location_modifier_constant?: Sprite
  unlock_quality_modifier_icon: Sprite
  unlock_quality_modifier_constant?: Sprite
  unlock_space_platforms_modifier_icon: Sprite
  unlock_space_platforms_modifier_constant?: Sprite
  unlock_circuit_network_modifier_icon: Sprite
  unlock_circuit_network_modifier_constant?: Sprite
  cargo_landing_pad_count_modifier_icon: Sprite
  cargo_landing_pad_count_modifier_constant?: Sprite
  change_recipe_productivity_modifier_icon: Sprite
  change_recipe_productivity_modifier_constant?: Sprite
  cliff_deconstruction_enabled_modifier_icon: Sprite
  cliff_deconstruction_enabled_modifier_constant?: Sprite
  mining_with_fluid_modifier_icon: Sprite
  mining_with_fluid_modifier_constant?: Sprite
  rail_support_on_deep_oil_ocean_modifier_icon: Sprite
  rail_support_on_deep_oil_ocean_modifier_constant?: Sprite
  rail_planner_allow_elevated_rails_modifier_icon: Sprite
  rail_planner_allow_elevated_rails_modifier_constant?: Sprite
  beacon_distribution_modifier_icon: Sprite
  beacon_distribution_modifier_constant?: Sprite
  belt_stack_size_bonus_modifier_icon: Sprite
  belt_stack_size_bonus_modifier_constant?: Sprite
  vehicle_logistics_modifier_icon: Sprite
  vehicle_logistics_modifier_constant?: Sprite
}
/**
 * https://lua-api.factorio.com/stable/prototypes/VirtualSignalPrototype.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "VirtualSignalPrototype".
 */
export type VirtualSignalPrototype = Prototype & {
  icons?: IconData[] | {}
  icon?: FileName
  icon_size?: SpriteSizeType
}
/**
 * https://lua-api.factorio.com/stable/prototypes/WallPrototype.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "WallPrototype".
 */
export type WallPrototype = EntityWithOwnerPrototype & {
  pictures?: {
    single?: SpriteVariations
    straight_vertical?: SpriteVariations
    straight_horizontal?: SpriteVariations
    corner_right_down?: SpriteVariations
    corner_left_down?: SpriteVariations
    t_up?: SpriteVariations
    ending_right?: SpriteVariations
    ending_left?: SpriteVariations
    filling?: SpriteVariations
    water_connection_patch?: Sprite4Way
    gate_connection_patch?: Sprite4Way
  }
  visual_merge_group?: Uint32
  circuit_wire_max_distance?: Double
  draw_copper_wires?: Bool
  draw_circuit_wires?: Bool
  circuit_connector?: CircuitConnectorDefinition
  default_output_signal?: SignalIDConnector
  wall_diode_green?: Sprite4Way
  wall_diode_red?: Sprite4Way
  wall_diode_green_light_top?: LightDefinition
  wall_diode_green_light_right?: LightDefinition
  wall_diode_green_light_bottom?: LightDefinition
  wall_diode_green_light_left?: LightDefinition
  wall_diode_red_light_top?: LightDefinition
  wall_diode_red_light_right?: LightDefinition
  wall_diode_red_light_bottom?: LightDefinition
  wall_diode_red_light_left?: LightDefinition
  connected_gate_visualization?: Sprite
}

export interface FactorioDataRaw {
  ammo?: {
    [k: string]: AmmoItemPrototype
  }
  armor?: {
    [k: string]: ArmorPrototype
  }
  'assembling-machine'?: {
    [k: string]: AssemblingMachinePrototype
  }
  blueprint?: {
    [k: string]: BlueprintItemPrototype
  }
  'blueprint-book'?: {
    [k: string]: BlueprintBookPrototype
  }
  capsule?: {
    [k: string]: CapsulePrototype
  }
  character?: {
    [k: string]: CharacterPrototype
  }
  'copy-paste-tool'?: {
    [k: string]: CopyPasteToolPrototype
  }
  'deconstruction-item'?: {
    [k: string]: DeconstructionItemPrototype
  }
  fluid?: {
    [k: string]: FluidPrototype
  }
  furnace?: {
    [k: string]: FurnacePrototype
  }
  gun?: {
    [k: string]: GunPrototype
  }
  item?: {
    [k: string]: ItemPrototype
  }
  'item-with-entity-data'?: {
    [k: string]: ItemWithEntityDataPrototype
  }
  module?: {
    [k: string]: ModulePrototype
  }
  'rail-planner'?: {
    [k: string]: RailPlannerPrototype
  }
  recipe?: {
    [k: string]: RecipePrototype
  }
  'repair-tool'?: {
    [k: string]: RepairToolPrototype
  }
  'rocket-silo'?: {
    [k: string]: RocketSiloPrototype
  }
  'selection-tool'?: {
    [k: string]: SelectionToolPrototype
  }
  'space-platform-starter-pack'?: {
    [k: string]: SpacePlatformStarterPackPrototype
  }
  'spidertron-remote'?: {
    [k: string]: SpidertronRemotePrototype
  }
  tool?: {
    [k: string]: ToolPrototype
  }
  'upgrade-item'?: {
    [k: string]: UpgradeItemPrototype
  }
}
/**
 * https://lua-api.factorio.com/stable/prototypes/PrototypeBase.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "PrototypeBase".
 */
export interface PrototypeBase {
  type: String
  name: String
  order?: Order
  localised_name?: LocalisedString
  localised_description?: LocalisedString
  factoriopedia_description?: LocalisedString
  subgroup?: ItemSubGroupID
  hidden?: Bool
  hidden_in_factoriopedia?: Bool
  parameter?: Bool
  factoriopedia_simulation?: SimulationDefinition
}
/**
 * https://lua-api.factorio.com/stable/types/SimulationDefinition.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "SimulationDefinition".
 */
export interface SimulationDefinition {
  planet?: SpaceLocationID
  game_view_settings?: GameViewSettings
  save?: FileName
  init_file?: FileName
  init?: String
  update_file?: FileName
  update?: String
  mods?: String[] | {}
  init_update_count?: Uint32
  length?: Uint32
  generate_map?: Bool
  checkboard?: Bool
  hide_health_bars?: Bool
  mute_technology_finished_sound?: Bool
  mute_alert_sounds?: Bool
  volume_modifier?: Float
  override_volume?: Bool
  mute_wind_sounds?: Bool
  hide_factoriopedia_gradient?: Bool
}
/**
 * https://lua-api.factorio.com/stable/types/GameViewSettings.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "GameViewSettings".
 */
export interface GameViewSettings {
  default_show_value?: Bool
  show_controller_gui?: Bool
  show_minimap?: Bool
  show_research_info?: Bool
  show_entity_info?: Bool
  show_alert_gui?: Bool
  update_entity_selection?: Bool
  show_rail_block_visualisation?: Bool
  show_side_menu?: Bool
  show_map_view_options?: Bool
  show_entity_tooltip?: Bool
  show_quickbar?: Bool
  show_shortcut_bar?: Bool
  show_crafting_queue?: Bool
  show_tool_bar?: Bool
  show_hotkey_suggestions?: Bool
  show_surface_list?: Bool
}
/**
 * https://lua-api.factorio.com/stable/types/IconData.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "IconData".
 */
export interface IconData {
  icon: FileName
  icon_size?: SpriteSizeType
  tint?: Color
  shift?: Vector
  scale?: Double
  draw_background?: Bool
}
/**
 * https://lua-api.factorio.com/stable/types/CollisionMaskConnector.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "CollisionMaskConnector".
 */
export interface CollisionMaskConnector {
  layers: {
    [k: string]: true
  }
  not_colliding_with_itself?: Bool
  consider_tile_transitions?: Bool
  colliding_with_tiles_only?: Bool
}
/**
 * https://lua-api.factorio.com/stable/types/SpriteSource.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "SpriteSource".
 */
export interface SpriteSource {
  filename?: FileName
  size?: SpriteSizeType | [SpriteSizeType, SpriteSizeType]
  width?: SpriteSizeType
  height?: SpriteSizeType
  x?: SpriteSizeType
  y?: SpriteSizeType
  /**
   * @minItems 2
   * @maxItems 2
   */
  position?: [SpriteSizeType, SpriteSizeType]
  load_in_minimal_mode?: Bool
  premul_alpha?: Bool
  allow_forced_downscale?: Bool
}
/**
 * https://lua-api.factorio.com/stable/types/Sound.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "Sound".
 */
export interface Sound {
  [k: string]: unknown
}
/**
 * https://lua-api.factorio.com/stable/types/ColorHintSpecification.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "ColorHintSpecification".
 */
export interface ColorHintSpecification {
  text?: String
  text_color?: Color
}
/**
 * https://lua-api.factorio.com/stable/types/SpoilToTriggerResult.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "SpoilToTriggerResult".
 */
export interface SpoilToTriggerResult {
  trigger: Trigger
  items_per_trigger: ItemCountType
}
/**
 * https://lua-api.factorio.com/stable/types/TriggerItem.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "TriggerItem".
 */
export interface TriggerItem {
  entity_flags?: EntityPrototypeFlags
  collision_mask?: CollisionMaskConnector
  ignore_collision_condition?: Bool
  trigger_target_mask?: TriggerTargetMask
  repeat_count?: Uint32
  probability?: Float
  action_delivery?: TriggerDelivery | TriggerDelivery[] | {}
  force?: ForceCondition
}
/**
 * https://lua-api.factorio.com/stable/types/TriggerDeliveryItem.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "TriggerDeliveryItem".
 */
export interface TriggerDeliveryItem {
  source_effects?: TriggerEffect
  target_effects?: TriggerEffect
}
/**
 * https://lua-api.factorio.com/stable/types/TriggerEffect.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "TriggerEffect".
 */
export interface TriggerEffect {
  [k: string]: unknown
}
/**
 * https://lua-api.factorio.com/stable/types/ItemProductPrototype.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "ItemProductPrototype".
 */
export interface ItemProductPrototype {
  type: 'item'
  name: ItemID
  amount?: Double
  amount_min?: Uint16
  amount_max?: Uint16
  probability?: Double
  ignored_by_stats?: Uint16
  ignored_by_productivity?: Uint16
  show_details_in_recipe_tooltip?: Bool
  extra_count_fraction?: Float
  percent_spoiled?: Float
}
/**
 * https://lua-api.factorio.com/stable/types/AmmoType.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "AmmoType".
 */
export interface AmmoType {
  action?: Trigger
  clamp_position?: Bool
  energy_consumption?: Energy
  range_modifier?: Double
  cooldown_modifier?: Double
  consumption_modifier?: Float
  target_type?: 'entity' | 'position' | 'direction'
  source_type?: AmmoSourceType
  target_filter?: EntityID[] | {}
}
/**
 * https://lua-api.factorio.com/stable/types/Resistance.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "Resistance".
 */
export interface Resistance {
  type: DamageTypeID
  decrease?: Float
  percent?: Float
}
/**
 * https://lua-api.factorio.com/stable/types/InterruptibleSound.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "InterruptibleSound".
 */
export interface InterruptibleSound {
  sound?: Sound
  minimal_change_per_tick?: Float
  stopped_sound?: Sound
  minimal_sound_duration_for_stopped_sound?: Uint16
  fade_ticks?: Uint32
}
/**
 * https://lua-api.factorio.com/stable/types/TileBuildabilityRule.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "TileBuildabilityRule".
 */
export interface TileBuildabilityRule {
  area: SimpleBoundingBox
  required_tiles?: CollisionMaskConnector
  colliding_tiles?: CollisionMaskConnector
  remove_on_collision?: Bool
}
/**
 * https://lua-api.factorio.com/stable/types/MinableProperties.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "MinableProperties".
 */
export interface MinableProperties {
  mining_time: Double
  include_in_show_counts?: Bool
  results?: ProductPrototype[] | {}
  result?: ItemID
  fluid_amount?: FluidAmount
  mining_particle?: ParticleID
  required_fluid?: FluidID
  count?: Uint16
  mining_trigger?: Trigger
}
/**
 * https://lua-api.factorio.com/stable/types/FluidProductPrototype.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "FluidProductPrototype".
 */
export interface FluidProductPrototype {
  type: 'fluid'
  name: FluidID
  amount?: FluidAmount
  amount_min?: FluidAmount
  amount_max?: FluidAmount
  probability?: Double
  ignored_by_stats?: FluidAmount
  ignored_by_productivity?: FluidAmount
  temperature?: Float
  fluidbox_index?: Uint32
  show_details_in_recipe_tooltip?: Bool
}
/**
 * https://lua-api.factorio.com/stable/types/ResearchProgressProductPrototype.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "ResearchProgressProductPrototype".
 */
export interface ResearchProgressProductPrototype {
  type: 'research-progress'
  amount?: Double
  research_item: ItemID
}
/**
 * https://lua-api.factorio.com/stable/types/SurfaceCondition.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "SurfaceCondition".
 */
export interface SurfaceCondition {
  property: SurfacePropertyID
  min?: Double
  max?: Double
}
/**
 * https://lua-api.factorio.com/stable/types/TriggerEffectItem.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "TriggerEffectItem".
 */
export interface TriggerEffectItem {
  repeat_count?: Uint16
  repeat_count_deviation?: Uint16
  probability?: Float
  affects_target?: Bool
  show_in_tooltip?: Bool
  damage_type_filters?: DamageTypeFilters
}
/**
 * https://lua-api.factorio.com/stable/types/WorkingSound.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "WorkingSound".
 */
export interface WorkingSound {
  [k: string]: unknown
}
/**
 * https://lua-api.factorio.com/stable/types/RadiusVisualisationSpecification.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "RadiusVisualisationSpecification".
 */
export interface RadiusVisualisationSpecification {
  sprite?: Sprite
  distance?: Double
  offset?: Vector
  draw_in_cursor?: Bool
  draw_on_selection?: Bool
}
/**
 * https://lua-api.factorio.com/stable/types/StatelessVisualisation.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "StatelessVisualisation".
 */
export interface StatelessVisualisation {
  animation?: AnimationVariations
  shadow?: AnimationVariations
  light?: LightDefinition
  count?: Uint16
  min_count?: Uint16
  max_count?: Uint16
  period?: Uint16
  particle_tick_offset?: Float
  probability?: Float
  offset_x?: RangedValue
  offset_y?: RangedValue
  offset_z?: RangedValue
  speed_x?: RangedValue
  speed_y?: RangedValue
  speed_z?: RangedValue
  acceleration_x?: Float
  acceleration_y?: Float
  acceleration_z?: Float
  movement_slowdown_factor_x?: Float
  movement_slowdown_factor_y?: Float
  movement_slowdown_factor_z?: Float
  scale?: RangedValue
  begin_scale?: Float
  end_scale?: Float
  fade_in_progress_duration?: Float
  fade_out_progress_duration?: Float
  spread_progress_duration?: Float
  adjust_animation_speed_by_base_scale?: Bool
  affected_by_wind?: Bool
  render_layer?: RenderLayer
  positions?: Vector[] | {}
  nested_visualisations?: StatelessVisualisation | StatelessVisualisation[] | {}
  can_lay_on_the_ground?: Bool
}
/**
 * https://lua-api.factorio.com/stable/types/Stripe.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "Stripe".
 */
export interface Stripe {
  width_in_frames: Uint32
  height_in_frames: Uint32
  filename: FileName
  x?: Uint32
  y?: Uint32
}
/**
 * https://lua-api.factorio.com/stable/types/ItemToPlace.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "ItemToPlace".
 */
export interface ItemToPlace {
  item: ItemID
  count: ItemCountType
}
/**
 * https://lua-api.factorio.com/stable/types/AutoplaceSpecification.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "AutoplaceSpecification".
 */
export interface AutoplaceSpecification {
  control?: AutoplaceControlID
  default_enabled?: Bool
  force?: 'enemy' | 'player' | 'neutral' | String
  order?: Order
  placement_density?: Uint32
  tile_restriction?: (TileID | [TileID, TileID])[] | {}
  probability_expression: NoiseExpression
  richness_expression?: NoiseExpression
  local_expressions?: {
    [k: string]: NoiseExpression
  }
  local_functions?: {
    [k: string]: NoiseFunction
  }
}
/**
 * https://lua-api.factorio.com/stable/types/NoiseFunction.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "NoiseFunction".
 */
export interface NoiseFunction {
  parameters: String[] | {}
  expression: NoiseExpression
  local_expressions?: {
    [k: string]: NoiseExpression
  }
  local_functions?: {
    [k: string]: NoiseFunction
  }
}
/**
 * https://lua-api.factorio.com/stable/types/WaterReflectionDefinition.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "WaterReflectionDefinition".
 */
export interface WaterReflectionDefinition {
  pictures?: SpriteVariations
  orientation_to_variation?: Bool
  rotate?: Bool
}
/**
 * https://lua-api.factorio.com/stable/types/IconDrawSpecification.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "IconDrawSpecification".
 */
export interface IconDrawSpecification {
  shift?: Vector
  scale?: Float
  scale_for_many?: Float
  renderLayer?: 'entity-info-icon-below' | 'entity-info-icon-above' | 'air-entity-info-icon'
}
/**
 * https://lua-api.factorio.com/stable/types/IconSequencePositioning.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "IconSequencePositioning".
 */
export interface IconSequencePositioning {
  inventory_index: number
  max_icons_per_row?: Uint8
  max_icon_rows?: Uint8
  shift?: Vector
  scale?: Float
  separation_multiplier?: Float
  multi_row_initial_height_modifier?: Float
}
/**
 * https://lua-api.factorio.com/stable/types/LootItem.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "LootItem".
 */
export interface LootItem {
  item: ItemID
  probability?: Double
  count_min?: Double
  count_max?: Double
}
/**
 * https://lua-api.factorio.com/stable/types/AttackReactionItem.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "AttackReactionItem".
 */
export interface AttackReactionItem {
  range: Float
  action?: Trigger
  reaction_modifier?: Float
  damage_type?: DamageTypeID
}
/**
 * https://lua-api.factorio.com/stable/types/Sprite4Way.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "Sprite4Way".
 */
export interface Sprite4Way {
  [k: string]: unknown
}
/**
 * https://lua-api.factorio.com/stable/types/BaseEnergySource.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "BaseEnergySource".
 */
export interface BaseEnergySource {
  emissions_per_minute?: {
    [k: string]: Double
  }
  render_no_power_icon?: Bool
  render_no_network_icon?: Bool
}
/**
 * https://lua-api.factorio.com/stable/types/SmokeSource.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "SmokeSource".
 */
export interface SmokeSource {
  name: TrivialSmokeID
  frequency: Float
  offset?: Float
  position?: Vector
  has_8_directions?: Bool
  north_position?: Vector
  north_east_position?: Vector
  east_position?: Vector
  south_east_position?: Vector
  south_position?: Vector
  south_west_position?: Vector
  west_position?: Vector
  north_west_position?: Vector
  deviation?: Vector
  starting_frame?: Uint16
  starting_frame_deviation?: Uint16
  height?: Float
  height_deviation?: Float
  starting_vertical_speed?: Float
  starting_vertical_speed_deviation?: Float
  vertical_speed_slowdown?: Float
}
/**
 * https://lua-api.factorio.com/stable/types/LightFlickeringDefinition.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "LightFlickeringDefinition".
 */
export interface LightFlickeringDefinition {
  minimum_intensity?: Float
  maximum_intensity?: Float
  derivation_change_frequency?: Float
  derivation_change_deviation?: Float
  border_fix_speed?: Float
  minimum_light_size?: Float
  light_intensity_to_size_coefficient?: Float
  color?: Color
}
/**
 * https://lua-api.factorio.com/stable/types/HeatConnection.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "HeatConnection".
 */
export interface HeatConnection {
  position: MapPosition
  direction: Direction
}
/**
 * https://lua-api.factorio.com/stable/types/FluidBox.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "FluidBox".
 */
export interface FluidBox {
  volume: FluidAmount
  pipe_connections: PipeConnectionDefinition[] | {}
  filter?: FluidID
  render_layer?: RenderLayer
  draw_only_when_connected?: Bool
  hide_connection_info?: Bool
  pipe_covers?: Sprite4Way
  pipe_covers_frozen?: Sprite4Way
  pipe_picture?: Sprite4Way
  pipe_picture_frozen?: Sprite4Way
  mirrored_pipe_picture?: Sprite4Way
  mirrored_pipe_picture_frozen?: Sprite4Way
  minimum_temperature?: Float
  maximum_temperature?: Float
  max_pipeline_extent?: Uint32
  production_type?: 'none' | 'input' | 'input-output' | 'output'
  secondary_draw_order?: Int8
  secondary_draw_orders?: {
    north?: Int8
    east?: Int8
    south?: Int8
    west?: Int8
  }
  always_draw_covers?: Bool
  enable_working_visualisations?: String[] | {}
}
/**
 * https://lua-api.factorio.com/stable/types/PipeConnectionDefinition.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "PipeConnectionDefinition".
 */
export interface PipeConnectionDefinition {
  flow_direction?: 'input-output' | 'input' | 'output'
  connection_type?: 'normal' | 'underground' | 'linked'
  enable_working_visualisations?: String[] | {}
  direction?: Direction
  position?: MapPosition
  /**
   * @minItems 4
   * @maxItems 4
   */
  positions?: [MapPosition, MapPosition, MapPosition, MapPosition]
  connection_category?: String | String[] | {}
  max_underground_distance?: Uint8
  max_distance_tint?: Color
  underground_collision_mask?: CollisionMaskConnector
  linked_connection_id?: FluidBoxLinkedConnectionID
}
/**
 * https://lua-api.factorio.com/stable/types/EffectReceiver.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "EffectReceiver".
 */
export interface EffectReceiver {
  base_effect?: Effect
  uses_module_effects?: Bool
  uses_beacon_effects?: Bool
  uses_surface_effects?: Bool
}
/**
 * https://lua-api.factorio.com/stable/types/Effect.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "Effect".
 */
export interface Effect {
  consumption?: EffectValue
  speed?: EffectValue
  productivity?: EffectValue
  pollution?: EffectValue
  quality?: EffectValue
}
/**
 * https://lua-api.factorio.com/stable/types/WorkingVisualisations.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "WorkingVisualisations".
 */
export interface WorkingVisualisations {
  animation?: Animation4Way
  idle_animation?: Animation4Way
  always_draw_idle_animation?: Bool
  default_recipe_tint?: GlobalRecipeTints
  recipe_not_set_tint?: GlobalRecipeTints
  states?: VisualState[] | {}
  working_visualisations?: unknown
  shift_animation_waypoints?: ShiftAnimationWaypoints
  shift_animation_waypoint_stop_duration?: Uint16
  shift_animation_transition_duration?: Uint16
  status_colors?: StatusColors
}
/**
 * https://lua-api.factorio.com/stable/types/Animation4Way.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "Animation4Way".
 */
export interface Animation4Way {
  [k: string]: unknown
}
/**
 * https://lua-api.factorio.com/stable/types/GlobalRecipeTints.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "GlobalRecipeTints".
 */
export interface GlobalRecipeTints {
  primary?: Color
  secondary?: Color
  tertiary?: Color
  quaternary?: Color
}
/**
 * https://lua-api.factorio.com/stable/types/VisualState.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "VisualState".
 */
export interface VisualState {
  name: String
  next_active: String
  next_inactive: String
  duration: Uint8
  color?: Color
}
/**
 * https://lua-api.factorio.com/stable/types/ShiftAnimationWaypoints.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "ShiftAnimationWaypoints".
 */
export interface ShiftAnimationWaypoints {
  north: Vector[] | {}
  east: Vector[] | {}
  south: Vector[] | {}
  west: Vector[] | {}
}
/**
 * https://lua-api.factorio.com/stable/types/StatusColors.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "StatusColors".
 */
export interface StatusColors {
  idle?: Color
  no_minable_resources?: Color
  full_output?: Color
  insufficient_input?: Color
  disabled?: Color
  no_power?: Color
  working?: Color
  low_power?: Color
}
/**
 * https://lua-api.factorio.com/stable/types/CircuitConnectorLayer.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "CircuitConnectorLayer".
 */
export interface CircuitConnectorLayer {
  north?: RenderLayer
  east?: RenderLayer
  south?: RenderLayer
  west?: RenderLayer
}
/**
 * https://lua-api.factorio.com/stable/types/CircuitConnectorSecondaryDrawOrder.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "CircuitConnectorSecondaryDrawOrder".
 */
export interface CircuitConnectorSecondaryDrawOrder {
  north?: Int8
  east?: Int8
  south?: Int8
  west?: Int8
}
/**
 * https://lua-api.factorio.com/stable/types/PerceivedPerformance.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "PerceivedPerformance".
 */
export interface PerceivedPerformance {
  minimum?: Double
  maximum?: Double
  performance_to_activity_rate?: Double
}
/**
 * https://lua-api.factorio.com/stable/types/ProductionHealthEffect.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "ProductionHealthEffect".
 */
export interface ProductionHealthEffect {
  producing?: Float
  not_producing?: Float
}
/**
 * https://lua-api.factorio.com/stable/types/SignalIDConnector.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "SignalIDConnector".
 */
export interface SignalIDConnector {
  type:
    | 'virtual'
    | 'item'
    | 'fluid'
    | 'recipe'
    | 'entity'
    | 'space-location'
    | 'asteroid-chunk'
    | 'quality'
  name:
    | VirtualSignalID
    | ItemID
    | FluidID
    | RecipeID
    | EntityID
    | SpaceLocationID
    | AsteroidChunkID
    | QualityID
}
/**
 * https://lua-api.factorio.com/stable/types/CircuitConnectorDefinition.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "CircuitConnectorDefinition".
 */
export interface CircuitConnectorDefinition {
  sprites?: CircuitConnectorSprites
  points?: WireConnectionPoint
}
/**
 * https://lua-api.factorio.com/stable/types/CircuitConnectorSprites.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "CircuitConnectorSprites".
 */
export interface CircuitConnectorSprites {
  led_red: Sprite
  led_green: Sprite
  led_blue: Sprite
  led_light: LightDefinition
  connector_main?: Sprite
  connector_shadow?: Sprite
  wire_pins?: Sprite
  wire_pins_shadow?: Sprite
  led_blue_off?: Sprite
  blue_led_light_offset?: Vector
  red_green_led_light_offset?: Vector
}
/**
 * https://lua-api.factorio.com/stable/types/WireConnectionPoint.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "WireConnectionPoint".
 */
export interface WireConnectionPoint {
  wire: WirePosition
  shadow: WirePosition
}
/**
 * https://lua-api.factorio.com/stable/types/WirePosition.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "WirePosition".
 */
export interface WirePosition {
  copper?: Vector
  red?: Vector
  green?: Vector
}
/**
 * https://lua-api.factorio.com/stable/types/SelectionModeData.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "SelectionModeData".
 */
export interface SelectionModeData {
  border_color: Color
  count_button_color?: Color
  chart_color?: Color
  cursor_box_type: CursorBoxType
  mode: SelectionModeFlags
  entity_filters?: EntityID[] | {}
  entity_type_filters?: String[] | {}
  tile_filters?: TileID[] | {}
  started_sound?: Sound
  ended_sound?: Sound
  play_ended_sound_when_nothing_selected?: Bool
  entity_filter_mode?: 'whitelist' | 'blacklist'
  tile_filter_mode?: 'whitelist' | 'blacklist'
}
/**
 * https://lua-api.factorio.com/stable/types/ThrowCapsuleAction.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "ThrowCapsuleAction".
 */
export interface ThrowCapsuleAction {
  type: 'throw'
  attack_parameters: AttackParameters
  uses_stack?: Bool
}
/**
 * https://lua-api.factorio.com/stable/types/BaseAttackParameters.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "BaseAttackParameters".
 */
export interface BaseAttackParameters {
  range: Float
  cooldown: Float
  min_range?: Float
  turn_range?: Float
  fire_penalty?: Float
  rotate_penalty?: Float
  health_penalty?: Float
  range_mode?: RangeMode
  min_attack_distance?: Float
  damage_modifier?: Float
  ammo_consumption_modifier?: Float
  cooldown_deviation?: Float
  warmup?: Uint32
  lead_target_for_projectile_speed?: Float
  lead_target_for_projectile_delay?: Uint32
  movement_slow_down_cooldown?: Float
  movement_slow_down_factor?: Double
  ammo_type?: AmmoType
  activation_type?: 'shoot' | 'throw' | 'consume' | 'activate'
  sound?: LayeredSound
  animation?: RotatedAnimation
  cyclic_sound?: CyclicSound
  use_shooter_direction?: Bool
  ammo_categories?: AmmoCategoryID[] | {}
  ammo_category?: AmmoCategoryID
}
/**
 * https://lua-api.factorio.com/stable/types/CyclicSound.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "CyclicSound".
 */
export interface CyclicSound {
  begin_sound?: Sound
  middle_sound?: Sound
  end_sound?: Sound
}
/**
 * https://lua-api.factorio.com/stable/types/CircularParticleCreationSpecification.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "CircularParticleCreationSpecification".
 */
export interface CircularParticleCreationSpecification {
  name: ParticleID
  starting_frame_speed: Float
  direction?: Float
  direction_deviation?: Float
  speed?: Float
  speed_deviation?: Float
  starting_frame_speed_deviation?: Float
  height?: Float
  height_deviation?: Float
  vertical_speed?: Float
  vertical_speed_deviation?: Float
  center?: Vector
  creation_distance?: Double
  creation_distance_orientation?: Double
  use_source_position?: Bool
}
/**
 * https://lua-api.factorio.com/stable/types/ActivateEquipmentCapsuleAction.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "ActivateEquipmentCapsuleAction".
 */
export interface ActivateEquipmentCapsuleAction {
  type: 'equipment-remote'
  equipment: EquipmentID
}
/**
 * https://lua-api.factorio.com/stable/types/UseOnSelfCapsuleAction.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "UseOnSelfCapsuleAction".
 */
export interface UseOnSelfCapsuleAction {
  type: 'use-on-self'
  attack_parameters: AttackParameters
  uses_stack?: Bool
}
/**
 * https://lua-api.factorio.com/stable/types/DestroyCliffsCapsuleAction.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "DestroyCliffsCapsuleAction".
 */
export interface DestroyCliffsCapsuleAction {
  type: 'destroy-cliffs'
  attack_parameters: AttackParameters
  radius: Float
  timeout?: Uint32
  play_sound_on_failure?: Bool
  uses_stack?: Bool
}
/**
 * https://lua-api.factorio.com/stable/types/ArtilleryRemoteCapsuleAction.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "ArtilleryRemoteCapsuleAction".
 */
export interface ArtilleryRemoteCapsuleAction {
  type: 'artillery-remote'
  flare: EntityID
  play_sound_on_failure?: Bool
}
/**
 * https://lua-api.factorio.com/stable/types/CharacterArmorAnimation.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "CharacterArmorAnimation".
 */
export interface CharacterArmorAnimation {
  idle?: RotatedAnimation
  idle_with_gun: RotatedAnimation
  running?: RotatedAnimation
  running_with_gun: RotatedAnimation
  mining_with_tool: RotatedAnimation
  flipped_shadow_running_with_gun?: RotatedAnimation
  idle_in_air?: RotatedAnimation
  idle_with_gun_in_air?: RotatedAnimation
  flying?: RotatedAnimation
  flying_with_gun?: RotatedAnimation
  take_off?: RotatedAnimation
  landing?: RotatedAnimation
  armors?: ItemID[] | {}
  smoke_in_air?: SmokeSource[] | {}
  smoke_cycles_per_tick?: Float
  extra_smoke_cycles_per_tile?: Float
  mining_with_tool_particles_animation_positions?: Float[] | {}
}
/**
 * https://lua-api.factorio.com/stable/types/FootprintParticle.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "FootprintParticle".
 */
export interface FootprintParticle {
  tiles: TileID[] | {}
  particle_name?: ParticleID
  use_as_default?: Bool
}
/**
 * https://lua-api.factorio.com/stable/types/RecipeTints.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "RecipeTints".
 */
export interface RecipeTints {
  primary?: Color
  secondary?: Color
  tertiary?: Color
  quaternary?: Color
}
/**
 * https://lua-api.factorio.com/stable/types/ItemIngredientPrototype.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "ItemIngredientPrototype".
 */
export interface ItemIngredientPrototype {
  type: 'item'
  name: ItemID
  amount: Uint16
  ignored_by_stats?: Uint16
}
/**
 * https://lua-api.factorio.com/stable/types/FluidIngredientPrototype.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "FluidIngredientPrototype".
 */
export interface FluidIngredientPrototype {
  type: 'fluid'
  name: FluidID
  amount: FluidAmount
  temperature?: Float
  minimum_temperature?: Float
  maximum_temperature?: Float
  ignored_by_stats?: FluidAmount
  fluidbox_index?: Uint32
  fluidbox_multiplier?: Uint8
}
/**
 * https://lua-api.factorio.com/stable/types/CargoStationParameters.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "CargoStationParameters".
 */
export interface CargoStationParameters {
  prefer_packed_cargo_units?: Bool
  hatch_definitions?: CargoHatchDefinition[] | {}
  giga_hatch_definitions?: GigaCargoHatchDefinition[] | {}
}
/**
 * https://lua-api.factorio.com/stable/types/CargoHatchDefinition.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "CargoHatchDefinition".
 */
export interface CargoHatchDefinition {
  hatch_graphics?: Animation
  hatch_render_layer?: RenderLayer
  entering_render_layer?: RenderLayer
  offset?: Vector
  pod_shadow_offset?: Vector
  sky_slice_height?: Float
  slice_height?: Float
  travel_height?: Float
  busy_timeout_ticks?: Uint32
  hatch_opening_ticks?: Uint32
  opening_sound?: InterruptibleSound
  closing_sound?: InterruptibleSound
  cargo_unit_entity_to_spawn?: EntityID
  illumination_graphic_index?: Uint32
  receiving_cargo_units?: EntityID[] | {}
}
/**
 * https://lua-api.factorio.com/stable/types/GigaCargoHatchDefinition.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "GigaCargoHatchDefinition".
 */
export interface GigaCargoHatchDefinition {
  hatch_graphics_back?: Animation
  hatch_graphics_front?: Animation
  hatch_render_layer_back?: RenderLayer
  hatch_render_layer_front?: RenderLayer
  covered_hatches: Uint32[] | {}
  opening_sound?: InterruptibleSound
  closing_sound?: InterruptibleSound
}
/**
 * https://lua-api.factorio.com/stable/types/SpacePlatformTileDefinition.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "SpacePlatformTileDefinition".
 */
export interface SpacePlatformTileDefinition {
  tile: TileID
  position: TilePosition
}
/**
 * https://lua-api.factorio.com/stable/types/CountBasedTipTrigger.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "CountBasedTipTrigger".
 */
export interface CountBasedTipTrigger {
  count?: Uint32
}
/**
 * https://lua-api.factorio.com/stable/types/BaseStyleSpecification.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "BaseStyleSpecification".
 */
export interface BaseStyleSpecification {
  parent?: String
  horizontal_align?: HorizontalAlign
  vertical_align?: VerticalAlign
  ignored_by_search?: Bool
  never_hide_by_search?: Bool
  horizontally_stretchable?: StretchRule
  vertically_stretchable?: StretchRule
  horizontally_squashable?: StretchRule
  vertically_squashable?: StretchRule
  natural_size?: Uint32 | [Uint32, Uint32]
  size?: Uint32 | [Uint32, Uint32]
  width?: Uint32
  minimal_width?: Uint32
  maximal_width?: Uint32
  natural_width?: Uint32
  height?: Uint32
  minimal_height?: Uint32
  maximal_height?: Uint32
  natural_height?: Uint32
  padding?: Int16
  top_padding?: Int16
  right_padding?: Int16
  bottom_padding?: Int16
  left_padding?: Int16
  margin?: Int16
  top_margin?: Int16
  right_margin?: Int16
  bottom_margin?: Int16
  left_margin?: Int16
  effect?: 'compilatron-hologram'
  effect_opacity?: Float
  tooltip?: LocalisedString
}
/**
 * https://lua-api.factorio.com/stable/types/ActivityMatchingModifiers.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "ActivityMatchingModifiers".
 */
export interface ActivityMatchingModifiers {
  multiplier?: Float
  minimum?: Float
  maximum?: Float
  offset?: Float
  inverted?: Bool
}
/**
 * https://lua-api.factorio.com/stable/types/AdvancedVolumeControl.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "AdvancedVolumeControl".
 */
export interface AdvancedVolumeControl {
  attenuation?: Fade
  fades?: Fades
  darkness_threshold?: Float
}
/**
 * https://lua-api.factorio.com/stable/types/Attenuation.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "Attenuation".
 */
export interface Attenuation {
  curve_type: AttenuationType
  tuning_parameter?: Float
}
/**
 * https://lua-api.factorio.com/stable/types/Fades.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "Fades".
 */
export interface Fades {
  fade_in?: Fade
  fade_out?: Fade
}
/**
 * https://lua-api.factorio.com/stable/types/AggregationSpecification.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "AggregationSpecification".
 */
export interface AggregationSpecification {
  max_count: Uint32
  progress_threshold?: Float
  volume_reduction_rate?: Float
  remove: Bool
  count_already_playing?: Bool
  priority?: 'closest' | 'farthest' | 'newest' | 'oldest'
}
/**
 * https://lua-api.factorio.com/stable/types/AgriculturalCraneProperties.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "AgriculturalCraneProperties".
 */
export interface AgriculturalCraneProperties {
  speed: AgriculturalCraneSpeed
  min_arm_extent?: Double
  min_grappler_extent?: Double
  operation_angle?: Float
  telescope_default_extention?: Double
  origin: Vector3D
  shadow_direction: Vector3D
  parts: CranePart[] | {}
}
/**
 * https://lua-api.factorio.com/stable/types/AgriculturalCraneSpeed.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "AgriculturalCraneSpeed".
 */
export interface AgriculturalCraneSpeed {
  arm: AgriculturalCraneSpeedArm
  grappler: AgriculturalCraneSpeedGrappler
}
/**
 * https://lua-api.factorio.com/stable/types/AgriculturalCraneSpeedArm.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "AgriculturalCraneSpeedArm".
 */
export interface AgriculturalCraneSpeedArm {
  turn_rate?: Double
  extension_speed?: Double
}
/**
 * https://lua-api.factorio.com/stable/types/AgriculturalCraneSpeedGrappler.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "AgriculturalCraneSpeedGrappler".
 */
export interface AgriculturalCraneSpeedGrappler {
  vertical_turn_rate?: Double
  horizontal_turn_rate?: Double
  extension_speed?: Double
  allow_transpolar_movement?: Bool
}
/**
 * https://lua-api.factorio.com/stable/types/CranePart.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "CranePart".
 */
export interface CranePart {
  orientation_shift?: Float
  is_contractible_by_cropping?: Bool
  should_scale_for_perspective?: Bool
  scale_to_fit_model?: Bool
  allow_sprite_rotation?: Bool
  snap_start?: Float
  snap_end?: Float
  snap_end_arm_extent_multiplier?: Float
  name?: String
  dying_effect?: CranePartDyingEffect
  relative_position?: Vector3D
  relative_position_grappler?: Vector3D
  static_length?: Vector3D
  extendable_length?: Vector3D
  static_length_grappler?: Vector3D
  extendable_length_grappler?: Vector3D
  sprite?: Sprite
  rotated_sprite?: RotatedSprite
  sprite_shadow?: Sprite
  rotated_sprite_shadow?: RotatedSprite
  sprite_reflection?: Sprite
  rotated_sprite_reflection?: RotatedSprite
  layer?: Int8
}
/**
 * https://lua-api.factorio.com/stable/types/CranePartDyingEffect.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "CranePartDyingEffect".
 */
export interface CranePartDyingEffect {
  particle_effect_linear_distance_step?: Float
  explosion_linear_distance_step?: Float
  particle_effects?: CreateParticleTriggerEffectItem[] | {}
  explosion?: ExplosionDefinition
}
/**
 * https://lua-api.factorio.com/stable/types/RotatedSpriteFrame.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "RotatedSpriteFrame".
 */
export interface RotatedSpriteFrame {
  width?: SpriteSizeType
  height?: SpriteSizeType
  x?: SpriteSizeType
  y?: SpriteSizeType
  shift?: Vector
}
/**
 * https://lua-api.factorio.com/stable/types/BaseModifier.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "BaseModifier".
 */
export interface BaseModifier {
  icons?: IconData[] | {}
  icon?: FileName
  icon_size?: SpriteSizeType
  hidden?: Bool
}
/**
 * https://lua-api.factorio.com/stable/types/AndTipTrigger.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "AndTipTrigger".
 */
export interface AndTipTrigger {
  type: 'and'
  triggers: TipTrigger[] | {}
}
/**
 * https://lua-api.factorio.com/stable/types/OrTipTrigger.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "OrTipTrigger".
 */
export interface OrTipTrigger {
  type: 'or'
  triggers: TipTrigger[] | {}
}
/**
 * https://lua-api.factorio.com/stable/types/SequenceTipTrigger.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "SequenceTipTrigger".
 */
export interface SequenceTipTrigger {
  type: 'sequence'
  triggers: TipTrigger[] | {}
}
/**
 * https://lua-api.factorio.com/stable/types/DependenciesMetTipTrigger.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "DependenciesMetTipTrigger".
 */
export interface DependenciesMetTipTrigger {
  type: 'dependencies-met'
}
/**
 * https://lua-api.factorio.com/stable/types/TimeElapsedTipTrigger.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "TimeElapsedTipTrigger".
 */
export interface TimeElapsedTipTrigger {
  type: 'time-elapsed'
  ticks: Uint32
}
/**
 * https://lua-api.factorio.com/stable/types/TimeSinceLastTipActivationTipTrigger.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "TimeSinceLastTipActivationTipTrigger".
 */
export interface TimeSinceLastTipActivationTipTrigger {
  type: 'time-since-last-tip-activation'
  ticks: MapTick
}
/**
 * https://lua-api.factorio.com/stable/types/ResearchTechnologyTipTrigger.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "ResearchTechnologyTipTrigger".
 */
export interface ResearchTechnologyTipTrigger {
  type: 'research'
  technology: TechnologyID
}
/**
 * https://lua-api.factorio.com/stable/types/ResearchWithSciencePackTipTrigger.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "ResearchWithSciencePackTipTrigger".
 */
export interface ResearchWithSciencePackTipTrigger {
  type: 'research-with-science-pack'
  science_pack: ItemID
}
/**
 * https://lua-api.factorio.com/stable/types/UnlockRecipeTipTrigger.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "UnlockRecipeTipTrigger".
 */
export interface UnlockRecipeTipTrigger {
  type: 'unlock-recipe'
  recipe: RecipeID
}
/**
 * https://lua-api.factorio.com/stable/types/PlanTrainPathTipTrigger.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "PlanTrainPathTipTrigger".
 */
export interface PlanTrainPathTipTrigger {
  type: 'plan-train-path'
  distance: Double
}
/**
 * https://lua-api.factorio.com/stable/types/AnimatedVector.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "AnimatedVector".
 */
export interface AnimatedVector {
  rotations:
    | {
        frames: Vector[] | {}
        render_layer?: RenderLayer
      }[]
    | {}
  render_layer?: RenderLayer
  direction_shift?: {
    north?: Vector
    east?: Vector
    south?: Vector
    west?: Vector
  }
}
/**
 * https://lua-api.factorio.com/stable/types/AnimationElement.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "AnimationElement".
 */
export interface AnimationElement {
  render_layer?: RenderLayer
  secondary_draw_order?: Int8
  apply_tint?: Bool
  always_draw?: Bool
  animation?: Animation
}
/**
 * https://lua-api.factorio.com/stable/types/AnyPrototype.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "AnyPrototype".
 */
export interface AnyPrototype {
  [k: string]: unknown
}
/**
 * https://lua-api.factorio.com/stable/types/AsteroidGraphicsSet.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "AsteroidGraphicsSet".
 */
export interface AsteroidGraphicsSet {
  rotation_speed?: Float
  normal_strength?: Float
  light_width?: Float
  brightness?: Float
  specular_strength?: Float
  specular_power?: Float
  specular_purity?: Float
  sss_contrast?: Float
  sss_amount?: Float
  sprite?: Sprite
  variations?: AsteroidVariation | AsteroidVariation[] | {}
  lights?: LightProperties | LightProperties[] | {}
  ambient_light?: Color
}
/**
 * https://lua-api.factorio.com/stable/types/AsteroidVariation.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "AsteroidVariation".
 */
export interface AsteroidVariation {
  color_texture: Sprite
  normal_map: Sprite
  roughness_map: Sprite
  shadow_shift?: Vector
}
/**
 * https://lua-api.factorio.com/stable/types/LightProperties.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "LightProperties".
 */
export interface LightProperties {
  color?: Color
  direction?: Vector3D
}
/**
 * https://lua-api.factorio.com/stable/types/AsteroidSettings.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "AsteroidSettings".
 */
export interface AsteroidSettings {
  spawning_rate: Double
  max_ray_portals_expanded_per_tick: Uint32
}
/**
 * https://lua-api.factorio.com/stable/types/AsteroidSpawnPoint.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "AsteroidSpawnPoint".
 */
export interface AsteroidSpawnPoint {
  probability: Double
  speed: Double
  angle_when_stopped?: Double
}
/**
 * https://lua-api.factorio.com/stable/types/AutoplaceSettings.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "AutoplaceSettings".
 */
export interface AutoplaceSettings {
  treat_missing_as_default?: Bool
  settings?: {
    [k: string]: FrequencySizeRichness
  }
}
/**
 * https://lua-api.factorio.com/stable/types/FrequencySizeRichness.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "FrequencySizeRichness".
 */
export interface FrequencySizeRichness {
  frequency?: MapGenSize
  size?: MapGenSize
  richness?: MapGenSize
}
/**
 * https://lua-api.factorio.com/stable/types/BeaconGraphicsSet.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "BeaconGraphicsSet".
 */
export interface BeaconGraphicsSet {
  draw_animation_when_idle?: Bool
  draw_light_when_idle?: Bool
  random_animation_offset?: Bool
  module_icons_suppressed?: Bool
  reset_animation_when_frozen?: Bool
  base_layer?: RenderLayer
  animation_layer?: RenderLayer
  top_layer?: RenderLayer
  animation_progress?: Float
  apply_module_tint?: ModuleTint
  no_modules_tint?: Color
  animation_list?: AnimationElement[] | {}
  frozen_patch?: Sprite
  light?: LightDefinition
  module_visualisations?: BeaconModuleVisualizations[] | {}
  module_tint_mode?: 'single-module' | 'mix'
}
/**
 * https://lua-api.factorio.com/stable/types/BeaconModuleVisualizations.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "BeaconModuleVisualizations".
 */
export interface BeaconModuleVisualizations {
  art_style: String
  use_for_empty_slots?: Bool
  tier_offset?: Int32
  slots?: (BeaconModuleVisualization[] | {})[] | {}
}
/**
 * https://lua-api.factorio.com/stable/types/BeaconModuleVisualization.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "BeaconModuleVisualization".
 */
export interface BeaconModuleVisualization {
  has_empty_slot?: Bool
  secondary_draw_order?: Int8
  apply_module_tint?: ModuleTint
  render_layer?: RenderLayer
  pictures?: SpriteVariations
}
/**
 * https://lua-api.factorio.com/stable/types/BeamAnimationSet.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "BeamAnimationSet".
 */
export interface BeamAnimationSet {
  start?: Animation
  ending?: Animation
  head?: Animation
  tail?: Animation
  body?: AnimationVariations
  render_layer?: RenderLayer
}
/**
 * https://lua-api.factorio.com/stable/types/BeamGraphicsSet.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "BeamGraphicsSet".
 */
export interface BeamGraphicsSet {
  beam?: BeamAnimationSet
  ground?: BeamAnimationSet
  desired_segment_length?: Float
  random_end_animation_rotation?: Bool
  transparent_start_end_animations?: Bool
  randomize_animation_per_segment?: Bool
}
/**
 * https://lua-api.factorio.com/stable/types/BeltReaderLayer.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "BeltReaderLayer".
 */
export interface BeltReaderLayer {
  render_layer?: RenderLayer
  sprites: RotatedAnimation
}
/**
 * https://lua-api.factorio.com/stable/types/BoilerPictures.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "BoilerPictures".
 */
export interface BoilerPictures {
  structure: Animation
  patch?: Sprite
  fire?: Animation
  fire_glow?: Animation
}
/**
 * https://lua-api.factorio.com/stable/types/BorderImageSet.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "BorderImageSet".
 */
export interface BorderImageSet {
  scale?: Double
  border_width?: Int32
  vertical_line?: Sprite
  horizontal_line?: Sprite
  top_right_corner?: Sprite
  bottom_right_corner?: Sprite
  bottom_left_corner?: Sprite
  top_left_coner?: Sprite
  top_t?: Sprite
  right_t?: Sprite
  bottom_t?: Sprite
  left_t?: Sprite
  cross?: Sprite
  top_end?: Sprite
  right_end?: Sprite
  bottom_end?: Sprite
  left_end?: Sprite
}
/**
 * https://lua-api.factorio.com/stable/types/BoxSpecification.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "BoxSpecification".
 */
export interface BoxSpecification {
  sprite: Sprite
  is_whole_box?: Bool
  side_length?: Double
  side_height?: Double
  max_side_length?: Double
}
/**
 * https://lua-api.factorio.com/stable/types/BuildEntityTechnologyTrigger.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "BuildEntityTechnologyTrigger".
 */
export interface BuildEntityTechnologyTrigger {
  type: 'build-entity'
  entity: EntityIDFilter
}
/**
 * https://lua-api.factorio.com/stable/types/CaptureSpawnerTechnologyTrigger.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "CaptureSpawnerTechnologyTrigger".
 */
export interface CaptureSpawnerTechnologyTrigger {
  type: 'capture-spawner'
  entity?: EntityID
}
/**
 * https://lua-api.factorio.com/stable/types/CargoBayConnectableGraphicsSet.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "CargoBayConnectableGraphicsSet".
 */
export interface CargoBayConnectableGraphicsSet {
  picture?: LayeredSprite
  animation?: Animation
  animation_render_layer?: RenderLayer
  connections?: CargoBayConnections
}
/**
 * https://lua-api.factorio.com/stable/types/CargoBayConnections.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "CargoBayConnections".
 */
export interface CargoBayConnections {
  top_wall?: LayeredSpriteVariations
  right_wall?: LayeredSpriteVariations
  bottom_wall?: LayeredSpriteVariations
  left_wall?: LayeredSpriteVariations
  top_left_outer_corner?: LayeredSpriteVariations
  top_right_outer_corner?: LayeredSpriteVariations
  bottom_left_outer_corner?: LayeredSpriteVariations
  bottom_right_outer_corner?: LayeredSpriteVariations
  top_left_inner_corner?: LayeredSpriteVariations
  top_right_inner_corner?: LayeredSpriteVariations
  bottom_left_inner_corner?: LayeredSpriteVariations
  bottom_right_inner_corner?: LayeredSpriteVariations
  bridge_horizontal_narrow?: LayeredSpriteVariations
  bridge_horizontal_wide?: LayeredSpriteVariations
  bridge_vertical_narrow?: LayeredSpriteVariations
  bridge_vertical_wide?: LayeredSpriteVariations
  bridge_crossing?: LayeredSpriteVariations
}
/**
 * https://lua-api.factorio.com/stable/types/ChargableGraphics.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "ChargableGraphics".
 */
export interface ChargableGraphics {
  picture?: Sprite
  charge_animation?: Animation
  charge_animation_is_looped?: Bool
  charge_light?: LightDefinition
  charge_cooldown?: Uint16
  discharge_animation?: Animation
  discharge_light?: LightDefinition
  discharge_cooldown?: Uint16
}
/**
 * https://lua-api.factorio.com/stable/types/ChartUtilityConstants.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "ChartUtilityConstants".
 */
export interface ChartUtilityConstants {
  copper_wire_color: Color
  electric_power_pole_color: Color
  enabled_switch_color: Color
  disabled_switch_color: Color
  electric_line_width: Float
  electric_line_minimum_absolute_width: Float
  red_wire_color: Color
  green_wire_color: Color
  circuit_network_member_color: Color
  turret_range_color: Color
  artillery_range_color: Color
  default_friendly_color: Color
  default_enemy_color: Color
  default_enemy_territory_color: Color
  rail_color: Color
  elevated_rail_color: Color
  rail_ramp_color: Color
  entity_ghost_color: Color
  tile_ghost_color: Color
  vehicle_outer_color: Color
  vehicle_outer_color_selected: Color
  vehicle_inner_color: Color
  vehicle_wagon_connection_color: Color
  resource_outline_selection_color: Color
  chart_train_stop_text_color: Color
  chart_train_stop_disabled_text_color: Color
  chart_train_stop_full_text_color: Color
  red_signal_color: Color
  green_signal_color: Color
  blue_signal_color: Color
  yellow_signal_color: Color
  chart_deconstruct_tint: Color
  chart_deconstruct_active_color: Color
  chart_player_circle_size: Float
  default_friendly_color_by_type?: {
    [k: string]: Color
  }
  default_color_by_type?: {
    [k: string]: Color
  }
  explosion_visualization_duration: Uint32
  train_path_color: Color
  train_preview_path_outline_color: Color
  train_current_path_outline_color: Color
  chart_logistic_robot_color: Color
  chart_construction_robot_color: Color
  chart_mobile_construction_robot_color: Color
  chart_personal_construction_robot_color: Color
  chart_delivery_to_me_logistic_robot_color: Color
  zoom_threshold_to_draw_spider_path: Double
  custom_tag_scale?: Float
  custom_tag_max_scale?: Float
  custom_tag_selected_overlay_tint?: Color
}
/**
 * https://lua-api.factorio.com/stable/types/CliffPlacementSettings.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "CliffPlacementSettings".
 */
export interface CliffPlacementSettings {
  name?: EntityID
  control?: AutoplaceControlID
  cliff_elevation_0?: Float
  cliff_elevation_interval?: Float
  cliff_smoothing?: Float
  richness?: Float
}
/**
 * https://lua-api.factorio.com/stable/types/CloudsEffectProperties.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "CloudsEffectProperties".
 */
export interface CloudsEffectProperties {
  shape_noise_texture: EffectTexture
  detail_noise_texture: EffectTexture
  warp_sample_1: CloudsTextureCoordinateTransformation
  warp_sample_2: CloudsTextureCoordinateTransformation
  warped_shape_sample: CloudsTextureCoordinateTransformation
  additional_density_sample: CloudsTextureCoordinateTransformation
  detail_sample_1: CloudsTextureCoordinateTransformation
  detail_sample_2: CloudsTextureCoordinateTransformation
  scale?: Float
  movement_speed_multiplier?: Float
  shape_warp_strength?: Float
  shape_warp_weight?: Float
  opacity?: Float
  opacity_at_night?: Float
  density?: Float
  density_at_night?: Float
  detail_factor?: Float
  detail_factor_at_night?: Float
  shape_factor?: Float
  detail_exponent?: Float
  detail_sample_morph_duration?: Uint32
}
/**
 * https://lua-api.factorio.com/stable/types/CloudsTextureCoordinateTransformation.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "CloudsTextureCoordinateTransformation".
 */
export interface CloudsTextureCoordinateTransformation {
  scale: Float
  wind_speed_factor?: Float
}
/**
 * https://lua-api.factorio.com/stable/types/ColumnAlignment.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "ColumnAlignment".
 */
export interface ColumnAlignment {
  column: Uint32
  alignment:
    | 'center'
    | 'left'
    | 'right'
    | 'top-left'
    | 'middle-left'
    | 'bottom-left'
    | 'top-center'
    | 'middle-center'
    | 'bottom-center'
    | 'top-right'
    | 'middle-right'
    | 'bottom-right'
}
/**
 * https://lua-api.factorio.com/stable/types/ColumnWidthItem.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "ColumnWidthItem".
 */
export interface ColumnWidthItem {
  minimal_width?: Int32
  maximal_width?: Int32
  width?: Int32
}
/**
 * https://lua-api.factorio.com/stable/types/ConnectableEntityGraphics.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "ConnectableEntityGraphics".
 */
export interface ConnectableEntityGraphics {
  single: SpriteVariations
  straight_vertical: SpriteVariations
  straight_horizontal: SpriteVariations
  corner_right_down: SpriteVariations
  corner_left_down: SpriteVariations
  corner_right_up: SpriteVariations
  corner_left_up: SpriteVariations
  t_up: SpriteVariations
  t_right: SpriteVariations
  t_down: SpriteVariations
  t_left: SpriteVariations
  ending_up: SpriteVariations
  ending_right: SpriteVariations
  ending_down: SpriteVariations
  ending_left: SpriteVariations
  cross: SpriteVariations
}
/**
 * https://lua-api.factorio.com/stable/types/CoverGraphicEffectData.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "CoverGraphicEffectData".
 */
export interface CoverGraphicEffectData {
  style?: CloudEffectStyle
  relative_to?: EffectRelativeTo
  distance_traveled_strength?: Vector
  pod_movement_strength?: Vector
}
/**
 * https://lua-api.factorio.com/stable/types/CoverGraphicProcessionLayer.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "CoverGraphicProcessionLayer".
 */
export interface CoverGraphicProcessionLayer {
  type: 'cover-graphic'
  reference_group?: ProcessionLayerInheritanceGroupID
  inherit_from?: ProcessionLayerInheritanceGroupID
  graphic?: ProcessionGraphic
  mask_graphic?: ProcessionGraphic
  effect_graphic?: ProcessionGraphic
  render_layer?: RenderLayer
  secondary_draw_order?: Int8
  is_cloud_effect_advanced?: Bool
  is_quad_texture?: Bool
  rotate_with_pod?: Bool
  texture_relative_to?: EffectRelativeTo
  distance_traveled_strength?: Vector
  pod_movement_strength?: Vector
  world_size?: Vector
  effect?: CoverGraphicEffectData
  alt_effect?: CoverGraphicEffectData
  frames:
    | {
        timestamp?: MapTick
        opacity?: Double
        opacity_t?: Double
        rotation?: Double
        rotation_t?: Double
        effect_scale_min?: Double
        effect_scale_min_t?: Double
        effect_scale_max?: Double
        effect_scale_max_t?: Double
        alt_effect_scale_min?: Double
        alt_effect_scale_min_t?: Double
        alt_effect_scale_max?: Double
        alt_effect_scale_max_t?: Double
        effect_shift?: Vector
        effect_shift_t?: Vector
        effect_shift_rate?: Double
        effect_shift_rate_t?: Double
        alt_effect_shift?: Vector
        alt_effect_shift_t?: Vector
        alt_effect_shift_rate?: Double
        alt_effect_shift_rate_t?: Double
        offset?: Vector
        offset_t?: Vector
        offset_rate?: Double
        offset_rate_t?: Double
      }[]
    | {}
}
/**
 * https://lua-api.factorio.com/stable/types/ProcessionGraphic.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "ProcessionGraphic".
 */
export interface ProcessionGraphic {
  type: ProcessionGraphicType
  sprite?: Sprite
  animation?: Animation
  catalogue_id?: Uint32
}
/**
 * https://lua-api.factorio.com/stable/types/CraftFluidTechnologyTrigger.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "CraftFluidTechnologyTrigger".
 */
export interface CraftFluidTechnologyTrigger {
  type: 'craft-fluid'
  fluid: FluidID
  amount?: Double
}
/**
 * https://lua-api.factorio.com/stable/types/CraftItemTechnologyTrigger.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "CraftItemTechnologyTrigger".
 */
export interface CraftItemTechnologyTrigger {
  type: 'craft-item'
  item: ItemIDFilter
  count?: ItemCountType
}
/**
 * https://lua-api.factorio.com/stable/types/CraterPlacementDefinition.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "CraterPlacementDefinition".
 */
export interface CraterPlacementDefinition {
  minimum_segments_to_place?: Uint32
  segment_probability?: Float
  segments:
    | {
        orientation: Float
        offset: Vector
      }[]
    | {}
}
/**
 * https://lua-api.factorio.com/stable/types/CreateSpacePlatformTechnologyTrigger.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "CreateSpacePlatformTechnologyTrigger".
 */
export interface CreateSpacePlatformTechnologyTrigger {
  type: 'create-space-platform'
}
/**
 * https://lua-api.factorio.com/stable/types/DamageParameters.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "DamageParameters".
 */
export interface DamageParameters {
  amount: Float
  type: DamageTypeID
}
/**
 * https://lua-api.factorio.com/stable/types/Data.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "Data".
 */
export interface Data {
  [k: string]: unknown
}
/**
 * https://lua-api.factorio.com/stable/types/DataExtendMethod.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "DataExtendMethod".
 */
export interface DataExtendMethod {
  [k: string]: unknown
}
/**
 * https://lua-api.factorio.com/stable/types/DifficultySettings.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "DifficultySettings".
 */
export interface DifficultySettings {
  technology_price_multiplier?: Double
  spoil_time_modifier?: Double
}
/**
 * https://lua-api.factorio.com/stable/types/EnemyEvolutionSettings.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "EnemyEvolutionSettings".
 */
export interface EnemyEvolutionSettings {
  enabled: Bool
  time_factor: Double
  destroy_factor: Double
  pollution_factor: Double
}
/**
 * https://lua-api.factorio.com/stable/types/EnemyExpansionSettings.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "EnemyExpansionSettings".
 */
export interface EnemyExpansionSettings {
  enabled: Bool
  max_expansion_distance: Uint32
  friendly_base_influence_radius: Uint32
  enemy_building_influence_radius: Uint32
  building_coefficient: Double
  other_base_coefficient: Double
  neighbouring_chunk_coefficient: Double
  neighbouring_base_chunk_coefficient: Double
  max_colliding_tiles_coefficient: Double
  settler_group_min_size: Uint32
  settler_group_max_size: Uint32
  min_expansion_cooldown: Uint32
  max_expansion_cooldown: Uint32
}
/**
 * https://lua-api.factorio.com/stable/types/EnemySpawnerAbsorption.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "EnemySpawnerAbsorption".
 */
export interface EnemySpawnerAbsorption {
  absolute: Double
  proportional: Double
}
/**
 * https://lua-api.factorio.com/stable/types/EnemySpawnerGraphicsSet.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "EnemySpawnerGraphicsSet".
 */
export interface EnemySpawnerGraphicsSet {
  animations?: AnimationVariations
  underwater_animations?: AnimationVariations
  underwater_layer_offset?: Int8
  water_effect_map_animations?: AnimationVariations
  integration?: SpriteVariations
  random_animation_offset?: Bool
}
/**
 * https://lua-api.factorio.com/stable/types/EntityBuildAnimationPiece.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "EntityBuildAnimationPiece".
 */
export interface EntityBuildAnimationPiece {
  top: Animation
  body: Animation
}
/**
 * https://lua-api.factorio.com/stable/types/EquipmentShape.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "EquipmentShape".
 */
export interface EquipmentShape {
  width: Uint32
  height: Uint32
  type: 'full' | 'manual'
  points?: (Uint32[] | {})[] | {}
}
/**
 * https://lua-api.factorio.com/stable/types/FeatureFlags.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "FeatureFlags".
 */
export interface FeatureFlags {
  quality: Bool
  rail_bridges: Bool
  space_travel: Bool
  spoiling: Bool
  freezing: Bool
  segmented_units: Bool
  expansion_shaders: Bool
}
/**
 * https://lua-api.factorio.com/stable/types/FogEffectProperties.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "FogEffectProperties".
 */
export interface FogEffectProperties {
  fog_type?: 'vulcanus' | 'gleba'
  shape_noise_texture: EffectTexture
  detail_noise_texture: EffectTexture
  color1?: Color
  color2?: Color
  tick_factor?: Float
}
/**
 * https://lua-api.factorio.com/stable/types/FogMaskShapeDefinition.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "FogMaskShapeDefinition".
 */
export interface FogMaskShapeDefinition {
  rect: SimpleBoundingBox
  falloff?: Float
}
/**
 * https://lua-api.factorio.com/stable/types/FusionGeneratorDirectionGraphicsSet.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "FusionGeneratorDirectionGraphicsSet".
 */
export interface FusionGeneratorDirectionGraphicsSet {
  animation?: Animation
  working_light?: Animation
  fusion_effect_uv_map?: Sprite
  fluid_input_graphics?: FusionGeneratorFluidInputGraphics[] | {}
}
/**
 * https://lua-api.factorio.com/stable/types/FusionGeneratorFluidInputGraphics.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "FusionGeneratorFluidInputGraphics".
 */
export interface FusionGeneratorFluidInputGraphics {
  sprite?: Sprite
  working_light?: Sprite
  fusion_effect_uv_map?: Sprite
}
/**
 * https://lua-api.factorio.com/stable/types/FusionGeneratorGraphicsSet.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "FusionGeneratorGraphicsSet".
 */
export interface FusionGeneratorGraphicsSet {
  north_graphics_set: FusionGeneratorDirectionGraphicsSet
  east_graphics_set: FusionGeneratorDirectionGraphicsSet
  south_graphics_set: FusionGeneratorDirectionGraphicsSet
  west_graphics_set: FusionGeneratorDirectionGraphicsSet
  render_layer?: RenderLayer
  light?: LightDefinition
  glow_color?: Color
}
/**
 * https://lua-api.factorio.com/stable/types/FusionReactorConnectionGraphics.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "FusionReactorConnectionGraphics".
 */
export interface FusionReactorConnectionGraphics {
  pictures?: Animation
  working_light_pictures?: Animation
  fusion_effect_uv_map?: Sprite
}
/**
 * https://lua-api.factorio.com/stable/types/FusionReactorGraphicsSet.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "FusionReactorGraphicsSet".
 */
export interface FusionReactorGraphicsSet {
  structure?: Sprite4Way
  render_layer?: RenderLayer
  default_fuel_glow_color?: Color
  light?: LightDefinition
  working_light_pictures?: Sprite4Way
  use_fuel_glow_color?: Bool
  fusion_effect_uv_map?: Sprite
  connections_graphics?: FusionReactorConnectionGraphics[] | {}
  direction_to_connections_graphics?: {
    [k: string]: Uint8[] | {}
  }
  plasma_category: NeighbourConnectableConnectionCategory
}
/**
 * https://lua-api.factorio.com/stable/types/GameControllerVibrationData.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "GameControllerVibrationData".
 */
export interface GameControllerVibrationData {
  low_frequency_vibration_intensity?: Float
  high_frequency_vibration_intensity?: Float
  duration?: Uint32
  play_for?: 'character_actions' | 'everything'
}
/**
 * https://lua-api.factorio.com/stable/types/GhostShimmerConfig.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "GhostShimmerConfig".
 */
export interface GhostShimmerConfig {
  tint: Color
  distortion: Float
  blend_mode: Int32
  visualize_borders: Bool
  proportional_distortion: Bool
  world_uv_modulo: Int32
  overlay_layers: GhostShimmerOverlayData[] | {}
  distortion_layers: GhostShimmerDistortionData[] | {}
}
/**
 * https://lua-api.factorio.com/stable/types/GhostShimmerOverlayData.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "GhostShimmerOverlayData".
 */
export interface GhostShimmerOverlayData {
  blend_mode: Int32
  shape: Int32
  x: Float
  y: Float
  tint: Color
  cutoff: Float
}
/**
 * https://lua-api.factorio.com/stable/types/GhostShimmerDistortionData.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "GhostShimmerDistortionData".
 */
export interface GhostShimmerDistortionData {
  shape: Int32
  intensity: Float
  x: Float
  y: Float
}
/**
 * https://lua-api.factorio.com/stable/types/GhostTintSet.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "GhostTintSet".
 */
export interface GhostTintSet {
  ghost_tint: Color
  ghost_delivery_tint: Color
  tile_ghost_tint: Color
  tile_ghost_delivery_tint: Color
  wire_tint: Color
}
/**
 * https://lua-api.factorio.com/stable/types/GlobalTintEffectProperties.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "GlobalTintEffectProperties".
 */
export interface GlobalTintEffectProperties {
  noise_texture: EffectTexture
  offset: Vector4F
  intensity: Vector4F
  scale_u: Vector4F
  scale_v: Vector4F
  global_intensity: Float
  global_scale: Float
  zoom_factor: Float
  zoom_intensity: Float
}
/**
 * https://lua-api.factorio.com/stable/types/HeatBuffer.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "HeatBuffer".
 */
export interface HeatBuffer {
  max_temperature: Double
  specific_heat: Energy
  max_transfer: Energy
  default_temperature?: Double
  min_temperature_gradient?: Double
  min_working_temperature?: Double
  minimum_glow_temperature?: Float
  pipe_covers?: Sprite4Way
  heat_pipe_covers?: Sprite4Way
  heat_picture?: Sprite4Way
  heat_glow?: Sprite4Way
  connections?: HeatConnection[] | {}
}
/**
 * https://lua-api.factorio.com/stable/types/LightningGraphicsSet.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "LightningGraphicsSet".
 */
export interface LightningGraphicsSet {
  shader_configuration?:
    | {
        color: Color
        distortion: Float
        thickness: Float
        power: Float
      }[]
    | {}
  bolt_half_width?: Float
  bolt_midpoint_variance?: Float
  max_bolt_offset?: Float
  max_fork_probability?: Float
  min_relative_fork_length?: Float
  max_relative_fork_length?: Float
  fork_orientation_variance?: Float
  fork_intensity_multiplier?: Float
  relative_cloud_fork_length?: Float
  cloud_fork_orientation_variance?: Float
  min_ground_streamer_distance?: Float
  max_ground_streamer_distance?: Float
  ground_streamer_variance?: Float
  cloud_forks?: Uint8
  cloud_detail_level?: Uint8
  bolt_detail_level?: Uint8
  cloud_background?: Animation
  explosion?: AnimationVariations
  attractor_hit_animation?: Animation
  ground_streamers?: Animation[] | {}
  light?: LightDefinition
}
/**
 * https://lua-api.factorio.com/stable/types/LightningRuleBase.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "LightningRuleBase".
 */
export interface LightningRuleBase {
  type: 'impact-soundset' | 'prototype' | 'id' | 'countAsRockForFilteredDeconstruction'
  string: String
}
/**
 * https://lua-api.factorio.com/stable/types/LightningProperties.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "LightningProperties".
 */
export interface LightningProperties {
  lightnings_per_chunk_per_tick: Double
  search_radius: Double
  lightning_types: EntityID[] | {}
  priority_rules: LightningPriorityRule[] | {}
  exemption_rules: LightningRuleBase[] | {}
}
/**
 * https://lua-api.factorio.com/stable/types/LoaderStructure.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "LoaderStructure".
 */
export interface LoaderStructure {
  direction_in?: Sprite4Way
  direction_out?: Sprite4Way
  back_patch?: Sprite4Way
  front_patch?: Sprite4Way
  frozen_patch_in?: Sprite4Way
  frozen_patch_out?: Sprite4Way
}
/**
 * https://lua-api.factorio.com/stable/types/MainSound.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "MainSound".
 */
export interface MainSound {
  sound?: Sound
  audible_distance_modifier?: Double
  probability?: Double
  fade_in_ticks?: Uint32
  fade_out_ticks?: Uint32
  activity_to_volume_modifiers?: ActivityMatchingModifiers
  activity_to_speed_modifiers?: ActivityMatchingModifiers
  match_progress_to_activity?: Bool
  match_volume_to_activity?: Bool
  match_speed_to_activity?: Bool
  play_for_working_visualisations?: String[] | {}
  volume_smoothing_window_size?: Uint32
}
/**
 * https://lua-api.factorio.com/stable/types/MapGenPreset.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "MapGenPreset".
 */
export interface MapGenPreset {
  order: Order
  default?: Bool
  basic_settings?: MapGenSettings
  advanced_settings?: {
    asteroids?: MapGenPresetAsteroidSettings
    pollution?: MapGenPresetPollutionSettings
    enemy_evolution?: MapGenPresetEnemyEvolutionSettings
    enemy_expansion?: MapGenPresetEnemyExpansionSettings
    difficulty_settings?: MapGenPresetDifficultySettings
  }
}
/**
 * https://lua-api.factorio.com/stable/types/MapGenSettings.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "MapGenSettings".
 */
export interface MapGenSettings {
  default_enable_all_autoplace_controls?: Bool
  autoplace_controls?: {
    [k: string]: FrequencySizeRichness
  }
  autoplace_settings?: {
    [k: string]: AutoplaceSettings
  }
  property_expression_names?: {
    [k: string]: String | Bool | Double
  }
  starting_points?: MapPosition[] | {}
  seed?: Uint32
  width?: Uint32
  height?: Uint32
  starting_area?: MapGenSize
  peaceful_mode?: Bool
  no_enemies_mode?: Bool
  cliff_settings?: CliffPlacementSettings
  territory_settings?: TerritorySettings
}
/**
 * https://lua-api.factorio.com/stable/types/TerritorySettings.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "TerritorySettings".
 */
export interface TerritorySettings {
  units?: EntityID[] | {}
  territory_index_expression?: String
  territory_variation_expression?: String
  minimum_territory_size?: Uint32
}
/**
 * https://lua-api.factorio.com/stable/types/MapGenPresetAsteroidSettings.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "MapGenPresetAsteroidSettings".
 */
export interface MapGenPresetAsteroidSettings {
  spawning_rate?: Double
  max_ray_portals_expanded_per_tick?: Uint32
}
/**
 * https://lua-api.factorio.com/stable/types/MapGenPresetPollutionSettings.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "MapGenPresetPollutionSettings".
 */
export interface MapGenPresetPollutionSettings {
  enabled?: Bool
  diffusion_ratio?: Double
  ageing?: Double
  min_pollution_to_damage_trees?: Double
  enemy_attack_pollution_consumption_modifier?: Double
  pollution_restored_per_tree_damage?: Double
}
/**
 * https://lua-api.factorio.com/stable/types/MapGenPresetEnemyEvolutionSettings.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "MapGenPresetEnemyEvolutionSettings".
 */
export interface MapGenPresetEnemyEvolutionSettings {
  enabled?: Bool
  time_factor?: Double
  destroy_factor?: Double
  pollution_factor?: Double
}
/**
 * https://lua-api.factorio.com/stable/types/MapGenPresetEnemyExpansionSettings.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "MapGenPresetEnemyExpansionSettings".
 */
export interface MapGenPresetEnemyExpansionSettings {
  enabled?: Bool
  max_expansion_distance?: Uint32
  settler_group_min_size?: Uint32
  settler_group_max_size?: Uint32
  min_expansion_cooldown?: Uint32
  max_expansion_cooldown?: Uint32
}
/**
 * https://lua-api.factorio.com/stable/types/MapGenPresetDifficultySettings.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "MapGenPresetDifficultySettings".
 */
export interface MapGenPresetDifficultySettings {
  technology_price_multiplier?: Double
}
/**
 * https://lua-api.factorio.com/stable/types/MaterialTextureParameters.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "MaterialTextureParameters".
 */
export interface MaterialTextureParameters {
  count: Uint32
  picture: FileName
  scale?: Float
  x?: SpriteSizeType
  y?: SpriteSizeType
  line_length?: Uint32
}
/**
 * https://lua-api.factorio.com/stable/types/MineEntityTechnologyTrigger.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "MineEntityTechnologyTrigger".
 */
export interface MineEntityTechnologyTrigger {
  type: 'mine-entity'
  entity: EntityID
}
/**
 * https://lua-api.factorio.com/stable/types/ModSetting.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "ModSetting".
 */
export interface ModSetting {
  value: Int32 | Double | Bool | String | Color
}
/**
 * https://lua-api.factorio.com/stable/types/Mods.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "Mods".
 */
export interface Mods {
  [k: string]: String
}
/**
 * https://lua-api.factorio.com/stable/types/NeighbourConnectable.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "NeighbourConnectable".
 */
export interface NeighbourConnectable {
  affected_by_direction?: Bool
  neighbour_search_distance?: Float
  connections: NeighbourConnectableConnectionDefinition[] | {}
}
/**
 * https://lua-api.factorio.com/stable/types/NeighbourConnectableConnectionDefinition.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "NeighbourConnectableConnectionDefinition".
 */
export interface NeighbourConnectableConnectionDefinition {
  location: {
    position: MapPosition
    direction: MapPosition
  }
  category: NeighbourConnectableConnectionCategory
  neighbour_category?: NeighbourConnectableConnectionCategory[] | {}
}
/**
 * https://lua-api.factorio.com/stable/types/OffshorePumpGraphicsSet.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "OffshorePumpGraphicsSet".
 */
export interface OffshorePumpGraphicsSet {
  animation?: Animation4Way
  base_render_layer?: RenderLayer
  underwater_layer_offset?: Int8
  fluid_animation?: Animation4Way
  glass_pictures?: Sprite4Way
  base_pictures?: Sprite4Way
  underwater_pictures?: Sprite4Way
}
/**
 * https://lua-api.factorio.com/stable/types/OrientedCliffPrototype.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "OrientedCliffPrototype".
 */
export interface OrientedCliffPrototype {
  render_layer?: RenderLayer
  collision_bounding_box: BoundingBox
  pictures?: SpriteVariations
  pictures_lower?: SpriteVariations
}
/**
 * https://lua-api.factorio.com/stable/types/PathFinderSettings.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "PathFinderSettings".
 */
export interface PathFinderSettings {
  fwd2bwd_ratio: Uint32
  goal_pressure_ratio: Double
  use_path_cache: Bool
  max_steps_worked_per_tick: Double
  max_work_done_per_tick: Uint32
  short_cache_size: Uint32
  long_cache_size: Uint32
  short_cache_min_cacheable_distance: Double
  short_cache_min_algo_steps_to_cache: Uint32
  long_cache_min_cacheable_distance: Double
  cache_max_connect_to_cache_steps_multiplier: Uint32
  cache_accept_path_start_distance_ratio: Double
  cache_accept_path_end_distance_ratio: Double
  negative_cache_accept_path_start_distance_ratio: Double
  negative_cache_accept_path_end_distance_ratio: Double
  cache_path_start_distance_rating_multiplier: Double
  cache_path_end_distance_rating_multiplier: Double
  stale_enemy_with_same_destination_collision_penalty: Double
  ignore_moving_enemy_collision_distance: Double
  enemy_with_different_destination_collision_penalty: Double
  general_entity_collision_penalty: Double
  general_entity_subsequent_collision_penalty: Double
  extended_collision_penalty: Double
  max_clients_to_accept_any_new_request: Uint32
  max_clients_to_accept_short_new_request: Uint32
  direct_distance_to_consider_short_request: Uint32
  short_request_max_steps: Uint32
  short_request_ratio: Double
  min_steps_to_check_path_find_termination: Uint32
  start_to_goal_cost_multiplier_to_terminate_path_find: Double
  overload_levels: Uint32[] | {}
  overload_multipliers: Double[] | {}
  negative_path_cache_delay_interval: Uint32
}
/**
 * https://lua-api.factorio.com/stable/types/PersistentWorldAmbientSoundsDefinition.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "PersistentWorldAmbientSoundsDefinition".
 */
export interface PersistentWorldAmbientSoundsDefinition {
  base_ambience?:
    | PersistentWorldAmbientSoundDefinition
    | PersistentWorldAmbientSoundDefinition[]
    | {}
  wind?: PersistentWorldAmbientSoundDefinition | PersistentWorldAmbientSoundDefinition[] | {}
  crossfade?: PersistentWorldAmbientSoundsDefinitionCrossfade
  semi_persistent?:
    | SemiPersistentWorldAmbientSoundDefinition
    | SemiPersistentWorldAmbientSoundDefinition[]
    | {}
}
/**
 * https://lua-api.factorio.com/stable/types/PipePictures.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "PipePictures".
 */
export interface PipePictures {
  straight_vertical_single?: Sprite
  straight_vertical?: Sprite
  straight_vertical_window?: Sprite
  straight_horizontal?: Sprite
  straight_horizontal_window?: Sprite
  corner_up_right?: Sprite
  corner_up_left?: Sprite
  corner_down_right?: Sprite
  corner_down_left?: Sprite
  t_up?: Sprite
  t_down?: Sprite
  t_right?: Sprite
  t_left?: Sprite
  cross?: Sprite
  ending_up?: Sprite
  ending_down?: Sprite
  ending_right?: Sprite
  ending_left?: Sprite
  straight_vertical_single_frozen?: Sprite
  straight_vertical_frozen?: Sprite
  straight_vertical_window_frozen?: Sprite
  straight_horizontal_frozen?: Sprite
  straight_horizontal_window_frozen?: Sprite
  corner_up_right_frozen?: Sprite
  corner_up_left_frozen?: Sprite
  corner_down_right_frozen?: Sprite
  corner_down_left_frozen?: Sprite
  t_up_frozen?: Sprite
  t_down_frozen?: Sprite
  t_right_frozen?: Sprite
  t_left_frozen?: Sprite
  cross_frozen?: Sprite
  ending_up_frozen?: Sprite
  ending_down_frozen?: Sprite
  ending_right_frozen?: Sprite
  ending_left_frozen?: Sprite
  straight_vertical_single_visualization?: Sprite
  straight_vertical_visualization?: Sprite
  straight_vertical_window_visualization?: Sprite
  straight_horizontal_visualization?: Sprite
  straight_horizontal_window_visualization?: Sprite
  corner_up_right_visualization?: Sprite
  corner_up_left_visualization?: Sprite
  corner_down_right_visualization?: Sprite
  corner_down_left_visualization?: Sprite
  t_up_visualization?: Sprite
  t_down_visualization?: Sprite
  t_right_visualization?: Sprite
  t_left_visualization?: Sprite
  cross_visualization?: Sprite
  ending_up_visualization?: Sprite
  ending_down_visualization?: Sprite
  ending_right_visualization?: Sprite
  ending_left_visualization?: Sprite
  straight_vertical_single_disabled_visualization?: Sprite
  straight_vertical_disabled_visualization?: Sprite
  straight_vertical_window_disabled_visualization?: Sprite
  straight_horizontal_disabled_visualization?: Sprite
  straight_horizontal_window_disabled_visualization?: Sprite
  corner_up_right_disabled_visualization?: Sprite
  corner_up_left_disabled_visualization?: Sprite
  corner_down_right_disabled_visualization?: Sprite
  corner_down_left_disabled_visualization?: Sprite
  t_up_disabled_visualization?: Sprite
  t_down_disabled_visualization?: Sprite
  t_right_disabled_visualization?: Sprite
  t_left_disabled_visualization?: Sprite
  cross_disabled_visualization?: Sprite
  ending_up_disabled_visualization?: Sprite
  ending_down_disabled_visualization?: Sprite
  ending_right_disabled_visualization?: Sprite
  ending_left_disabled_visualization?: Sprite
  horizontal_window_background?: Sprite
  vertical_window_background?: Sprite
  fluid_background?: Sprite
  low_temperature_flow?: Sprite
  middle_temperature_flow?: Sprite
  high_temperature_flow?: Sprite
  gas_flow?: Animation
}
/**
 * https://lua-api.factorio.com/stable/types/PlanetPrototypeMapGenSettings.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "PlanetPrototypeMapGenSettings".
 */
export interface PlanetPrototypeMapGenSettings {
  cliff_settings?: CliffPlacementSettings
  territory_settings?: TerritorySettings
  autoplace_controls?: {
    [k: string]: FrequencySizeRichness
  }
  autoplace_settings?: {
    [k: string]: AutoplaceSettings
  }
  property_expression_names?: {
    [k: string]: String | Bool | Double
  }
  moisture_climate_control?: Bool
  aux_climate_control?: Bool
}
/**
 * https://lua-api.factorio.com/stable/types/PlumesSpecification.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "PlumesSpecification".
 */
export interface PlumesSpecification {
  min_probability?: Float
  max_probability?: Float
  min_y_offset?: Float
  max_y_offset?: Float
  stateless_visualisations?: PlumeEffect | PlumeEffect[] | {}
}
/**
 * https://lua-api.factorio.com/stable/types/PodAnimationProcessionLayer.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "PodAnimationProcessionLayer".
 */
export interface PodAnimationProcessionLayer {
  type: 'pod-animation'
  graphic?: ProcessionGraphic
  frames:
    | {
        timestamp: MapTick
        frame: Float
      }[]
    | {}
}
/**
 * https://lua-api.factorio.com/stable/types/PodDistanceTraveledProcessionLayer.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "PodDistanceTraveledProcessionLayer".
 */
export interface PodDistanceTraveledProcessionLayer {
  type: 'pod-distance-traveled'
  reference_group?: ProcessionLayerInheritanceGroupID
  contribute_to_distance_traveled?: Bool
  distance_traveled_contribution?: Float
  frames:
    | {
        timestamp?: MapTick
        distance?: Double
        distance_t?: Double
      }[]
    | {}
}
/**
 * https://lua-api.factorio.com/stable/types/PodMovementProcessionLayer.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "PodMovementProcessionLayer".
 */
export interface PodMovementProcessionLayer {
  type: 'pod-movement'
  reference_group?: ProcessionLayerInheritanceGroupID
  inherit_from?: ProcessionLayerInheritanceGroupID
  contribute_to_distance_traveled?: Bool
  distance_traveled_contribution?: Float
  frames:
    | {
        timestamp?: MapTick
        tilt?: Double
        tilt_t?: Double
        offset?: Vector
        offset_t?: Vector
        offset_rate?: Double
        offset_rate_t?: Double
      }[]
    | {}
}
/**
 * https://lua-api.factorio.com/stable/types/PodOpacityProcessionLayer.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "PodOpacityProcessionLayer".
 */
export interface PodOpacityProcessionLayer {
  type: 'pod-opacity'
  lut: ColorLookupTable
  frames:
    | {
        timestamp?: MapTick
        cutscene_opacity?: Double
        cutscene_opacity_t?: Double
        outside_opacity?: Double
        outside_opacity_t?: Double
        lut_blend?: Double
        lut_blend_t?: Double
      }[]
    | {}
}
/**
 * https://lua-api.factorio.com/stable/types/PollutionSettings.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "PollutionSettings".
 */
export interface PollutionSettings {
  enabled: Bool
  diffusion_ratio: Double
  min_to_diffuse: Double
  ageing: Double
  expected_max_per_chunk: Double
  min_to_show_per_chunk: Double
  min_pollution_to_damage_trees: Double
  pollution_with_max_forest_damage: Double
  pollution_restored_per_tree_damage: Double
  pollution_per_tree_damage: Double
  max_pollution_to_restore_trees: Double
  enemy_attack_pollution_consumption_modifier: Double
}
/**
 * https://lua-api.factorio.com/stable/types/ProcessionAudio.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "ProcessionAudio".
 */
export interface ProcessionAudio {
  type: ProcessionAudioType
  sound?: Sound
  looped_sound?: InterruptibleSound
  catalogue_id?: Uint32
}
/**
 * https://lua-api.factorio.com/stable/types/ProcessionAudioCatalogueItem.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "ProcessionAudioCatalogueItem".
 */
export interface ProcessionAudioCatalogueItem {
  index: Uint32
  sound?: Sound
  looped_sound?: InterruptibleSound
}
/**
 * https://lua-api.factorio.com/stable/types/ProcessionAudioEvent.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "ProcessionAudioEvent".
 */
export interface ProcessionAudioEvent {
  type: ProcessionAudioEventType
  usage?: ProcessionAudioUsage
  audio?: ProcessionAudio
  loop_id?: Uint32
}
/**
 * https://lua-api.factorio.com/stable/types/ProcessionGraphicCatalogueItem.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "ProcessionGraphicCatalogueItem".
 */
export interface ProcessionGraphicCatalogueItem {
  index: Uint32
  animation?: Animation
  picture?: Sprite
}
/**
 * https://lua-api.factorio.com/stable/types/SingleGraphicProcessionLayer.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "SingleGraphicProcessionLayer".
 */
export interface SingleGraphicProcessionLayer {
  type: 'single-graphic'
  graphic: ProcessionGraphic
  render_layer?: RenderLayer
  secondary_draw_order?: Int8
  relative_to?: EffectRelativeTo
  compensated_pivot?: Bool
  rotates_with_pod?: Bool
  shift_rotates_with_pod?: Bool
  is_passenger_only?: Bool
  clip_with_hatches?: Bool
  animation_driven_by_curve?: Bool
  frames:
    | {
        timestamp?: MapTick
        opacity?: Double
        opacity_t?: Double
        tint?: Color
        tint_t?: Color
        rotation?: Double
        rotation_t?: Double
        scale?: Double
        scale_t?: Double
        shift?: Vector
        shift_t?: Vector
        shift_rate?: Double
        shift_rate_t?: Double
        frame: Float
      }[]
    | {}
}
/**
 * https://lua-api.factorio.com/stable/types/TintProcessionLayer.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "TintProcessionLayer".
 */
export interface TintProcessionLayer {
  type: 'tint'
  render_layer?: RenderLayer
  frames:
    | {
        timestamp?: MapTick
        opacity?: Double
        opacity_t?: Double
        tint_upper?: Color
        tint_upper_t?: Color
        tint_lower?: Color
        tint_lower_t?: Color
      }[]
    | {}
}
/**
 * https://lua-api.factorio.com/stable/types/ProcessionSet.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "ProcessionSet".
 */
export interface ProcessionSet {
  arrival: ProcessionID[] | {}
  departure: ProcessionID[] | {}
}
/**
 * https://lua-api.factorio.com/stable/types/ProcessionTimeline.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "ProcessionTimeline".
 */
export interface ProcessionTimeline {
  duration: MapTick
  special_action_tick?: MapTick
  draw_switch_tick?: MapTick
  intermezzo_min_duration?: MapTick
  intermezzo_max_duration?: MapTick
  layers: ProcessionLayer[] | {}
  audio_events: ProcessionAudioEvent[] | {}
}
/**
 * https://lua-api.factorio.com/stable/types/ProgrammableSpeakerNote.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "ProgrammableSpeakerNote".
 */
export interface ProgrammableSpeakerNote {
  name: String
  sound: Sound
}
/**
 * https://lua-api.factorio.com/stable/types/PrototypeStrafeSettings.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "PrototypeStrafeSettings".
 */
export interface PrototypeStrafeSettings {
  max_distance?: Double
  ideal_distance?: Double
  ideal_distance_tolerance?: Double
  ideal_distance_variance?: Double
  ideal_distance_importance?: Float
  ideal_distance_importance_variance?: Float
  clockwise_chance?: Float
  face_target?: Bool
}
/**
 * https://lua-api.factorio.com/stable/types/PuddleTileEffectParameters.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "PuddleTileEffectParameters".
 */
export interface PuddleTileEffectParameters {
  puddle_noise_texture: EffectTexture
  water_effect_parameters?: WaterTileEffectParameters
  water_effect?: TileEffectDefinitionID
}
/**
 * https://lua-api.factorio.com/stable/types/WaterTileEffectParameters.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "WaterTileEffectParameters".
 */
export interface WaterTileEffectParameters {
  specular_lightness: Color
  foam_color: Color
  foam_color_multiplier: Float
  tick_scale: Float
  animation_speed: Float
  animation_scale: Float | [Float, Float]
  dark_threshold: Float | [Float, Float]
  reflection_threshold: Float | [Float, Float]
  specular_threshold: Float | [Float, Float]
  textures: EffectTexture[] | {}
  near_zoom?: Float
  far_zoom?: Float
  shader_variation?: EffectVariation
  texture_variations_rows?: Uint8
  texture_variations_columns?: Uint8
  secondary_texture_variations_rows?: Uint8
  secondary_texture_variations_columns?: Uint8
}
/**
 * https://lua-api.factorio.com/stable/types/PumpConnectorGraphics.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "PumpConnectorGraphics".
 */
export interface PumpConnectorGraphics {
  north: PumpConnectorGraphicsAnimation[] | {}
  east: PumpConnectorGraphicsAnimation[] | {}
  south: PumpConnectorGraphicsAnimation[] | {}
  west: PumpConnectorGraphicsAnimation[] | {}
}
/**
 * https://lua-api.factorio.com/stable/types/PumpConnectorGraphicsAnimation.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "PumpConnectorGraphicsAnimation".
 */
export interface PumpConnectorGraphicsAnimation {
  standup_base?: Animation
  standup_top?: Animation
  standup_shadow?: Animation
  connector?: Animation
  connector_shadow?: Animation
}
/**
 * https://lua-api.factorio.com/stable/types/RailFenceDirectionSet.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "RailFenceDirectionSet".
 */
export interface RailFenceDirectionSet {
  north?: SpriteVariations
  northeast?: SpriteVariations
  east?: SpriteVariations
  southeast?: SpriteVariations
  south?: SpriteVariations
  southwest?: SpriteVariations
  west?: SpriteVariations
  northwest?: SpriteVariations
}
/**
 * https://lua-api.factorio.com/stable/types/RailFenceGraphicsSet.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "RailFenceGraphicsSet".
 */
export interface RailFenceGraphicsSet {
  segment_count: Uint8
  back_fence_render_layer?: RenderLayer
  front_fence_render_layer?: RenderLayer
  back_fence_render_layer_secondary?: RenderLayer
  front_fence_render_layer_secondary?: RenderLayer
  side_A: RailFencePictureSet
  side_B: RailFencePictureSet
}
/**
 * https://lua-api.factorio.com/stable/types/RailFencePictureSet.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "RailFencePictureSet".
 */
export interface RailFencePictureSet {
  /**
   * @minItems 4
   * @maxItems 4
   */
  ends: [RailFenceDirectionSet, RailFenceDirectionSet, RailFenceDirectionSet, RailFenceDirectionSet]
  fence: RailFenceDirectionSet
  /**
   * @minItems 4
   * @maxItems 4
   */
  ends_upper?: [
    RailFenceDirectionSet,
    RailFenceDirectionSet,
    RailFenceDirectionSet,
    RailFenceDirectionSet,
  ]
  fence_upper?: RailFenceDirectionSet
}
/**
 * https://lua-api.factorio.com/stable/types/RailPictureSet.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "RailPictureSet".
 */
export interface RailPictureSet {
  north: RailPieceLayers
  northeast: RailPieceLayers
  east: RailPieceLayers
  southeast: RailPieceLayers
  south: RailPieceLayers
  southwest: RailPieceLayers
  west: RailPieceLayers
  northwest: RailPieceLayers
  front_rail_endings?: Sprite16Way
  back_rail_endings?: Sprite16Way
  rail_endings: Sprite16Way
  segment_visualisation_endings?: RotatedAnimation
  render_layers: RailRenderLayers
  secondary_render_layers?: RailRenderLayers
  slice_origin?: {
    north?: Vector
    east?: Vector
    south?: Vector
    west?: Vector
  }
  fog_mask?: {
    north?: FogMaskShapeDefinition
    east?: FogMaskShapeDefinition
    south?: FogMaskShapeDefinition
    west?: FogMaskShapeDefinition
  }
}
/**
 * https://lua-api.factorio.com/stable/types/RailPieceLayers.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "RailPieceLayers".
 */
export interface RailPieceLayers {
  metals?: SpriteVariations
  backplates?: SpriteVariations
  ties?: SpriteVariations
  stone_path?: SpriteVariations
  stone_path_background?: SpriteVariations
  segment_visualisation_middle?: Sprite
  water_reflection?: Sprite
  underwater_structure?: Sprite
  shadow_subtract_mask?: Sprite
  shadow_mask?: Sprite
}
/**
 * https://lua-api.factorio.com/stable/types/Sprite16Way.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "Sprite16Way".
 */
export interface Sprite16Way {
  sheets?: SpriteNWaySheet[] | {}
  sheet?: SpriteNWaySheet
  north?: Sprite
  north_north_east?: Sprite
  north_east?: Sprite
  east_north_east?: Sprite
  east?: Sprite
  east_south_east?: Sprite
  south_east?: Sprite
  south_south_east?: Sprite
  south?: Sprite
  south_south_west?: Sprite
  south_west?: Sprite
  west_south_west?: Sprite
  west?: Sprite
  west_north_west?: Sprite
  north_west?: Sprite
  north_north_west?: Sprite
}
/**
 * https://lua-api.factorio.com/stable/types/RailRenderLayers.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "RailRenderLayers".
 */
export interface RailRenderLayers {
  stone_path_lower?: RenderLayer
  stone_path?: RenderLayer
  tie?: RenderLayer
  screw?: RenderLayer
  metal?: RenderLayer
  front_end?: RenderLayer
  back_end?: RenderLayer
  underwater_layer_offset?: Int8
}
/**
 * https://lua-api.factorio.com/stable/types/RailSignalColorToFrameIndex.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "RailSignalColorToFrameIndex".
 */
export interface RailSignalColorToFrameIndex {
  none?: Uint8
  red?: Uint8
  green?: Uint8
  blue?: Uint8
  yellow?: Uint8
}
/**
 * https://lua-api.factorio.com/stable/types/RailSignalLightDefinition.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "RailSignalLightDefinition".
 */
export interface RailSignalLightDefinition {
  light: LightDefinition
  shift?: Vector
}
/**
 * https://lua-api.factorio.com/stable/types/RailSignalLights.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "RailSignalLights".
 */
export interface RailSignalLights {
  red?: RailSignalLightDefinition
  green?: RailSignalLightDefinition
  blue?: RailSignalLightDefinition
  yellow?: RailSignalLightDefinition
}
/**
 * https://lua-api.factorio.com/stable/types/RailSignalPictureSet.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "RailSignalPictureSet".
 */
export interface RailSignalPictureSet {
  structure: RotatedAnimation
  structure_render_layer?: RenderLayer
  signal_color_to_structure_frame_index: RailSignalColorToFrameIndex
  rail_piece?: RailSignalStaticSpriteLayer
  upper_rail_piece?: RailSignalStaticSpriteLayer
  lights: RailSignalLights
  circuit_connector?: CircuitConnectorDefinition[] | {}
  circuit_connector_render_layer?: RenderLayer
  structure_align_to_animation_index?: Uint8[] | {}
  selection_box_shift?: Vector[] | {}
}
/**
 * https://lua-api.factorio.com/stable/types/RailSignalStaticSpriteLayer.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "RailSignalStaticSpriteLayer".
 */
export interface RailSignalStaticSpriteLayer {
  sprites: Animation
  render_layer?: RenderLayer
  hide_if_simulation?: Bool
  hide_if_not_connected_to_rails?: Bool
  shifts?: MapPosition[] | {}
  align_to_frame_index?: Uint8[] | {}
}
/**
 * https://lua-api.factorio.com/stable/types/RollingStockRotatedSlopedGraphics.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "RollingStockRotatedSlopedGraphics".
 */
export interface RollingStockRotatedSlopedGraphics {
  rotated: RotatedSprite
  sloped?: RotatedSprite
  slope_back_equals_front?: Bool
  slope_angle_between_frames?: Double
}
/**
 * https://lua-api.factorio.com/stable/types/SegmentEngineSpecification.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "SegmentEngineSpecification".
 */
export interface SegmentEngineSpecification {
  segments: SegmentSpecification[] | {}
}
/**
 * https://lua-api.factorio.com/stable/types/SegmentSpecification.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "SegmentSpecification".
 */
export interface SegmentSpecification {
  segment: EntityID
}
/**
 * https://lua-api.factorio.com/stable/types/SendItemToOrbitTechnologyTrigger.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "SendItemToOrbitTechnologyTrigger".
 */
export interface SendItemToOrbitTechnologyTrigger {
  type: 'send-item-to-orbit'
  item: ItemIDFilter
}
/**
 * https://lua-api.factorio.com/stable/types/Settings.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "Settings".
 */
export interface Settings {
  startup: {
    [k: string]: ModSetting
  }
}
/**
 * https://lua-api.factorio.com/stable/types/SoundAccent.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "SoundAccent".
 */
export interface SoundAccent {
  sound?: Sound
  frame?: Uint16
  audible_distance_modifier?: Float
  play_for_working_visualisations?: String[] | {}
}
/**
 * https://lua-api.factorio.com/stable/types/SoundModifier.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "SoundModifier".
 */
export interface SoundModifier {
  type: SoundModifierType
  volume_multiplier: Float
}
/**
 * https://lua-api.factorio.com/stable/types/SpaceDustEffectProperties.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "SpaceDustEffectProperties".
 */
export interface SpaceDustEffectProperties {
  noise_texture: EffectTexture
  asteroid_texture: EffectTexture
  asteroid_normal_texture: EffectTexture
  animation_speed?: Float
}
/**
 * https://lua-api.factorio.com/stable/types/SpaceTileEffectParameters.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "SpaceTileEffectParameters".
 */
export interface SpaceTileEffectParameters {
  scroll_factor?: Float
  zoom_base_factor?: Float
  zoom_base_offset?: Float
  zoom_exponent?: Float
  zoom_factor?: Float
  zoom_offset?: Float
  nebula_scale?: Float
  nebula_brightness?: Float
  nebula_saturation?: Float
  star_density?: Float
  star_scale?: Float
  star_parallax?: Float
  star_shape?: Float
  star_brightness?: Float
  star_saturations?: Float
}
/**
 * https://lua-api.factorio.com/stable/types/SpacingItem.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "SpacingItem".
 */
export interface SpacingItem {
  index: Uint32
  spacing: Int32
}
/**
 * https://lua-api.factorio.com/stable/types/SpiderEngineSpecification.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "SpiderEngineSpecification".
 */
export interface SpiderEngineSpecification {
  legs: SpiderLegSpecification | SpiderLegSpecification[] | {}
  walking_group_overlap?: Float
}
/**
 * https://lua-api.factorio.com/stable/types/SpiderLegSpecification.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "SpiderLegSpecification".
 */
export interface SpiderLegSpecification {
  leg: EntityID
  mount_position: Vector
  ground_position: Vector
  leg_hit_the_ground_trigger?: TriggerEffect
  leg_hit_the_ground_when_attacking_trigger?: TriggerEffect
  walking_group: Uint8
}
/**
 * https://lua-api.factorio.com/stable/types/SpiderLegPart.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "SpiderLegPart".
 */
export interface SpiderLegPart {
  top_end?: RotatedSprite
  middle?: RotatedSprite
  bottom_end?: RotatedSprite
  middle_offset_from_top?: Float
  middle_offset_from_bottom?: Float
  top_end_length?: Float
  bottom_end_length?: Float
  top_end_offset?: Float
  bottom_end_offset?: Float
  render_layer?: RenderLayer
}
/**
 * https://lua-api.factorio.com/stable/types/SpiderLegTriggerEffect.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "SpiderLegTriggerEffect".
 */
export interface SpiderLegTriggerEffect {
  position: Float
  effect: TriggerEffect
}
/**
 * https://lua-api.factorio.com/stable/types/SpiderTorsoGraphicsSet.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "SpiderTorsoGraphicsSet".
 */
export interface SpiderTorsoGraphicsSet {
  base_animation?: RotatedAnimation
  shadow_base_animation?: RotatedAnimation
  animation?: RotatedAnimation
  shadow_animation?: RotatedAnimation
  base_render_layer?: RenderLayer
  render_layer?: RenderLayer
}
/**
 * https://lua-api.factorio.com/stable/types/StateSteeringSettings.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "StateSteeringSettings".
 */
export interface StateSteeringSettings {
  radius: Double
  separation_factor: Double
  separation_force: Double
  force_unit_fuzzy_goto_behavior: Bool
}
/**
 * https://lua-api.factorio.com/stable/types/SurfaceRenderParameters.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "SurfaceRenderParameters".
 */
export interface SurfaceRenderParameters {
  day_night_cycle_color_lookup?: DaytimeColorLookupTable
  shadow_opacity?: Float
  draw_sprite_clouds?: Bool
  clouds?: CloudsEffectProperties
  fog?: FogEffectProperties
  terrain_tint_effect?: GlobalTintEffectProperties
  space_dust_background?: SpaceDustEffectProperties
  space_dust_foreground?: SpaceDustEffectProperties
}
/**
 * https://lua-api.factorio.com/stable/types/TechnologyUnit.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "TechnologyUnit".
 */
export interface TechnologyUnit {
  count?: Uint64
  count_formula?: MathExpression
  time: Double
  ingredients: ResearchIngredient[] | {}
}
/**
 * https://lua-api.factorio.com/stable/types/TileBasedParticleTints.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "TileBasedParticleTints".
 */
export interface TileBasedParticleTints {
  primary?: Color
  secondary?: Color
}
/**
 * https://lua-api.factorio.com/stable/types/TileSpriteLayout.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "TileSpriteLayout".
 */
export interface TileSpriteLayout {
  picture: FileName
  scale?: Float
  x?: SpriteSizeType
  y?: SpriteSizeType
  line_length?: Uint8
  count?: Uint8
}
/**
 * https://lua-api.factorio.com/stable/types/TileSpriteLayoutVariant.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "TileSpriteLayoutVariant".
 */
export interface TileSpriteLayoutVariant {
  spritesheet?: FileName
  scale?: Float
  x?: SpriteSizeType
  y?: SpriteSizeType
  tile_height?: Uint8
  line_length?: Uint8
  count?: Uint8
}
/**
 * https://lua-api.factorio.com/stable/types/TileTransitions.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "TileTransitions".
 */
export interface TileTransitions {
  layout?: TileTransitionSpritesheetLayout
  spritesheet?: FileName
  overlay_enabled?: Bool
  mask_enabled?: Bool
  background_enabled?: Bool
  background_mask_enabled?: Bool
  effect_map_enabled?: Bool
  lightmap_enabled?: Bool
  auxiliary_effect_mask_enabled?: Bool
  overlay_layout?: TileTransitionVariantLayout
  mask_layout?: TileTransitionVariantLayout
  background_layout?: TileTransitionVariantLayout
  background_mask_layout?: TileTransitionVariantLayout
  effect_map_layout?: TileTransitionVariantLayout
  lightmap_layout?: TileTransitionVariantLayout
  auxiliary_effect_mask_layout?: TileTransitionVariantLayout
  mask_spritesheet?: FileName
  background_spritesheet?: FileName
  background_mask_spritesheet?: FileName
  effect_map_spritesheet?: FileName
  lightmap_spritesheet?: FileName
  auxiliary_effect_mask_spritesheet?: FileName
  water_patch?: Sprite
  overlay_layer_group?: TileRenderLayer
  background_layer_group?: TileRenderLayer
  waving_effect_time_scale?: Float
  overlay_layer_offset?: Int8
  masked_overlay_layer_offset?: Int8
  background_layer_offset?: Int8
  masked_background_layer_offset?: Int8
  draw_background_layer_under_tiles?: Bool
  apply_effect_color_to_overlay?: Bool
  apply_waving_effect_on_masks?: Bool
  apply_waving_effect_on_background_mask?: Bool
  draw_simple_outer_corner_over_diagonal?: Bool
  offset_background_layer_by_tile_layer?: Bool
  inner_corner_weights?: Float[] | {}
  outer_corner_weights?: Float[] | {}
  side_weights?: Float[] | {}
  side_variations_in_group?: Uint8
  double_side_weights?: Float[] | {}
  double_side_variations_in_group?: Uint8
  u_transition_weights?: Float[] | {}
}
/**
 * https://lua-api.factorio.com/stable/types/TileTransitionsVariants.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "TileTransitionsVariants".
 */
export interface TileTransitionsVariants {
  main?: TileMainPictures[] | {}
  material_texture_width_in_tiles?: Uint8
  material_texture_height_in_tiles?: Uint8
  material_background?: MaterialTextureParameters
  light?: TileLightPictures[] | {}
  material_light?: MaterialTextureParameters
  empty_transitions?: Bool
  transition?: TileTransitions
}
/**
 * https://lua-api.factorio.com/stable/types/TrainStopLight.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "TrainStopLight".
 */
export interface TrainStopLight {
  picture: Sprite4Way
  red_picture: Sprite4Way
  light: LightDefinition
}
/**
 * https://lua-api.factorio.com/stable/types/TrainVisualizationConstants.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "TrainVisualizationConstants".
 */
export interface TrainVisualizationConstants {
  not_last_box_color: Color
  last_box_color: Color
  box_width: Float
  box_length: Float
  joint_distance: Float
  connection_distance: Float
  final_margin: Float
  stock_number_scale: Float
}
/**
 * https://lua-api.factorio.com/stable/types/TransitionApplication.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "TransitionApplication".
 */
export interface TransitionApplication {
  offset?: Bool
  pod_offset?: Bool
  rotation?: Bool
}
/**
 * https://lua-api.factorio.com/stable/types/TransportBeltAnimationSet.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "TransportBeltAnimationSet".
 */
export interface TransportBeltAnimationSet {
  animation_set: RotatedAnimation
  east_index?: Uint8
  west_index?: Uint8
  north_index?: Uint8
  south_index?: Uint8
  starting_south_index?: Uint8
  ending_south_index?: Uint8
  starting_west_index?: Uint8
  ending_west_index?: Uint8
  starting_north_index?: Uint8
  ending_north_index?: Uint8
  starting_east_index?: Uint8
  ending_east_index?: Uint8
  frozen_patch?: RotatedSprite
  east_index_frozen?: Uint8
  west_index_frozen?: Uint8
  north_index_frozen?: Uint8
  south_index_frozen?: Uint8
  starting_south_index_frozen?: Uint8
  ending_south_index_frozen?: Uint8
  starting_west_index_frozen?: Uint8
  ending_west_index_frozen?: Uint8
  starting_north_index_frozen?: Uint8
  ending_north_index_frozen?: Uint8
  starting_east_index_frozen?: Uint8
  ending_east_index_frozen?: Uint8
  alternate?: Bool
  belt_reader?: BeltReaderLayer[] | {}
}
/**
 * https://lua-api.factorio.com/stable/types/TransportBeltConnectorFrame.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "TransportBeltConnectorFrame".
 */
export interface TransportBeltConnectorFrame {
  frame_main: AnimationVariations
  frame_shadow: AnimationVariations
  frame_main_scanner: Animation
  frame_main_scanner_movement_speed: Float
  frame_main_scanner_horizontal_start_shift: Vector
  frame_main_scanner_horizontal_end_shift: Vector
  frame_main_scanner_horizontal_y_scale: Float
  frame_main_scanner_horizontal_rotation: RealOrientation
  frame_main_scanner_vertical_start_shift: Vector
  frame_main_scanner_vertical_end_shift: Vector
  frame_main_scanner_vertical_y_scale: Float
  frame_main_scanner_vertical_rotation: RealOrientation
  frame_main_scanner_cross_horizontal_start_shift: Vector
  frame_main_scanner_cross_horizontal_end_shift: Vector
  frame_main_scanner_cross_horizontal_y_scale: Float
  frame_main_scanner_cross_horizontal_rotation: RealOrientation
  frame_main_scanner_cross_vertical_start_shift: Vector
  frame_main_scanner_cross_vertical_end_shift: Vector
  frame_main_scanner_cross_vertical_y_scale: Float
  frame_main_scanner_cross_vertical_rotation: RealOrientation
  frame_main_scanner_nw_ne: Animation
  frame_main_scanner_sw_se: Animation
  frame_back_patch?: SpriteVariations
  frame_front_patch?: SpriteVariations
}
/**
 * https://lua-api.factorio.com/stable/types/TreeVariation.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "TreeVariation".
 */
export interface TreeVariation {
  trunk: Animation
  leaves: Animation
  leaf_generation: CreateParticleTriggerEffectItem
  branch_generation: CreateParticleTriggerEffectItem
  shadow?: Animation
  disable_shadow_distortion_beginning_at_frame?: Uint32
  normal?: Animation
  overlay?: Animation
  underwater?: Animation
  underwater_layer_offset?: Int8
  water_reflection?: WaterReflectionDefinition
}
/**
 * https://lua-api.factorio.com/stable/types/TriggerEffectWithCooldown.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "TriggerEffectWithCooldown".
 */
export interface TriggerEffectWithCooldown {
  distance_cooldown?: Double
  initial_distance_cooldown?: Double
  time_cooldown?: MapTick
  initial_time_cooldown?: MapTick
  effect: TriggerEffect
}
/**
 * https://lua-api.factorio.com/stable/types/TurretBaseVisualisation.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "TurretBaseVisualisation".
 */
export interface TurretBaseVisualisation {
  render_layer?: RenderLayer
  secondary_draw_order?: Int8
  enabled_states?: TurretState[] | {}
  draw_when_has_energy?: Bool
  draw_when_no_energy?: Bool
  draw_when_has_ammo?: Bool
  draw_when_no_ammo?: Bool
  draw_when_frozen?: Bool
  draw_when_not_frozen?: Bool
  animation: Animation4Way
}
/**
 * https://lua-api.factorio.com/stable/types/TurretGraphicsSet.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "TurretGraphicsSet".
 */
export interface TurretGraphicsSet {
  base_visualisation?: TurretBaseVisualisation | TurretBaseVisualisation[] | {}
}
/**
 * https://lua-api.factorio.com/stable/types/TurretSpecialEffect.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "TurretSpecialEffect".
 */
export interface TurretSpecialEffect {
  type: 'mask-by-circle'
  center?: TurretSpecialEffectCenter
  min_radius?: Float
  max_radius?: Float
  falloff?: Float
  attacking_min_radius?: Float
  attacking_max_radius?: Float
  attacking_falloff?: Float
}
/**
 * https://lua-api.factorio.com/stable/types/UnitAISettings.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "UnitAISettings".
 */
export interface UnitAISettings {
  destroy_when_commands_fail?: Bool
  allow_try_return_to_spawner?: Bool
  do_separation?: Bool
  path_resolution_modifier?: Int8
  strafe_settings?: PrototypeStrafeSettings
  size_in_group?: Float
  join_attacks?: Bool
}
/**
 * https://lua-api.factorio.com/stable/types/UnitAlternativeFrameSequence.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "UnitAlternativeFrameSequence".
 */
export interface UnitAlternativeFrameSequence {
  warmup_frame_sequence: Uint16[] | {}
  warmup2_frame_sequence: Uint16[] | {}
  attacking_frame_sequence: Uint16[] | {}
  cooldown_frame_sequence: Uint16[] | {}
  prepared_frame_sequence: Uint16[] | {}
  back_to_walk_frame_sequence: Uint16[] | {}
  warmup_animation_speed: Float
  attacking_animation_speed: Float
  cooldown_animation_speed: Float
  prepared_animation_speed: Float
  back_to_walk_animation_speed: Float
}
/**
 * https://lua-api.factorio.com/stable/types/UnitGroupSettings.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "UnitGroupSettings".
 */
export interface UnitGroupSettings {
  min_group_gathering_time: Uint32
  max_group_gathering_time: Uint32
  max_wait_time_for_late_members: Uint32
  max_group_radius: Double
  min_group_radius: Double
  max_member_speedup_when_behind: Double
  max_member_slowdown_when_ahead: Double
  max_group_slowdown_factor: Double
  max_group_member_fallback_factor: Double
  member_disown_distance: Double
  tick_tolerance_when_member_arrives: Uint32
  max_gathering_unit_groups: Uint32
  max_unit_group_size: Uint32
}
/**
 * https://lua-api.factorio.com/stable/types/VariableAmbientSoundLayer.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "VariableAmbientSoundLayer".
 */
export interface VariableAmbientSoundLayer {
  name: String
  variants: Sound[] | {}
  composition_mode: VariableAmbientSoundCompositionMode
  control_layer?: String
  control_layer_sample_mapping?: (Uint8[] | {})[] | {}
  has_start_sample?: Bool
  has_end_sample?: Bool
  number_of_sublayers?: Uint8
  sublayer_starting_offset?: RandomRange | ProbabilityTable
  sublayer_offset?: RandomRange | ProbabilityTable
  sample_length?: RandomRange
}
/**
 * https://lua-api.factorio.com/stable/types/VariableAmbientSoundLayerStateProperties.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "VariableAmbientSoundLayerStateProperties".
 */
export interface VariableAmbientSoundLayerStateProperties {
  enabled?: Bool
  variant?: Uint8
  sequence_length?: RandomRange
  number_of_repetitions?: RandomRange | ProbabilityTable
  start_pause?: RandomRange
  pause_between_samples?: RandomRange
  pause_between_repetitions?: RandomRange
  end_pause?: RandomRange
  silence_instead_of_sample_probability?: Float
}
/**
 * https://lua-api.factorio.com/stable/types/VariableAmbientSoundNextStateConditions.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "VariableAmbientSoundNextStateConditions".
 */
export interface VariableAmbientSoundNextStateConditions {
  weight: Uint32
  layer_sample?: VariableAmbientSoundLayerSample
  previous_state?: String
}
/**
 * https://lua-api.factorio.com/stable/types/VariableAmbientSoundNextStateItem.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "VariableAmbientSoundNextStateItem".
 */
export interface VariableAmbientSoundNextStateItem {
  state: String
  conditions: VariableAmbientSoundNextStateConditions
}
/**
 * https://lua-api.factorio.com/stable/types/VariableAmbientSoundState.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "VariableAmbientSoundState".
 */
export interface VariableAmbientSoundState {
  name: String
  type?: VariableAmbientSoundStateType
  next_state?: String
  next_states?: VariableAmbientSoundNextStateItem[] | {}
  next_state_trigger?: VariableAmbientSoundNextStateTrigger
  next_state_layers_finished_layers?: String[] | {}
  state_duration_seconds?: Uint32
  layers_properties?: VariableAmbientSoundLayerStateProperties[] | {}
  start_pause?: RandomRange
  end_pause?: RandomRange
  number_of_enabled_layers?: RandomRange
}
/**
 * https://lua-api.factorio.com/stable/types/VariableAmbientSoundVariableSound.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "VariableAmbientSoundVariableSound".
 */
export interface VariableAmbientSoundVariableSound {
  layers: VariableAmbientSoundLayer[] | {}
  intermezzo?: Sound
  states: VariableAmbientSoundState[] | {}
  length_seconds: Uint32
  alignment_samples?: Uint32
}
/**
 * https://lua-api.factorio.com/stable/types/WorkingVisualisation.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "WorkingVisualisation".
 */
export interface WorkingVisualisation {
  render_layer?: RenderLayer
  fadeout?: Bool
  synced_fadeout?: Bool
  constant_speed?: Bool
  always_draw?: Bool
  animated_shift?: Bool
  align_to_waypoint?: Bool
  mining_drill_scorch_mark?: Bool
  secondary_draw_order?: Int8
  light?: LightDefinition
  effect?: 'flicker' | 'uranium-glow' | 'none'
  apply_recipe_tint?: 'primary' | 'secondary' | 'tertiary' | 'quaternary' | 'none'
  apply_tint?:
    | 'resource-color'
    | 'input-fluid-base-color'
    | 'input-fluid-flow-color'
    | 'status'
    | 'none'
    | 'visual-state-color'
  north_animation?: Animation
  east_animation?: Animation
  south_animation?: Animation
  west_animation?: Animation
  north_position?: Vector
  east_position?: Vector
  south_position?: Vector
  west_position?: Vector
  north_secondary_draw_order?: Int8
  east_secondary_draw_order?: Int8
  south_secondary_draw_order?: Int8
  west_secondary_draw_order?: Int8
  north_fog_mask?: FogMaskShapeDefinition
  east_fog_mask?: FogMaskShapeDefinition
  south_fog_mask?: FogMaskShapeDefinition
  west_fog_mask?: FogMaskShapeDefinition
  fog_mask?: FogMaskShapeDefinition
  animation?: Animation
  draw_in_states?: String[] | {}
  draw_when_state_filter_matches?: Bool
  enabled_by_name?: Bool
  name?: String
  enabled_in_animated_shift_during_waypoint_stop?: Bool
  enabled_in_animated_shift_during_transition?: Bool
  frame_based_on_shift_animation_progress?: Bool
  scorch_mark_fade_out_duration?: Uint16
  scorch_mark_lifetime?: Uint16
  scorch_mark_fade_in_frames?: Uint8
}
/**
 * https://lua-api.factorio.com/stable/prototypes/AmbientSound.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "AmbientSound".
 */
export interface AmbientSound {
  type: 'ambient-sound'
  name: String
  weight?: Double
  track_type: AmbientSoundType
  planet?: SpaceLocationID
  sound?: Sound
  variable_sound?: VariableAmbientSoundVariableSound
}
/**
 * https://lua-api.factorio.com/stable/prototypes/AnimationPrototype.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "AnimationPrototype".
 */
export interface AnimationPrototype {
  type: 'animation'
  name: String
  layers?: Animation[] | {}
  filename?: FileName
  priority?: SpritePriority
  flags?: SpriteFlags
  size?: SpriteSizeType | [SpriteSizeType, SpriteSizeType]
  width?: SpriteSizeType
  height?: SpriteSizeType
  x?: SpriteSizeType
  y?: SpriteSizeType
  /**
   * @minItems 2
   * @maxItems 2
   */
  position?: [SpriteSizeType, SpriteSizeType]
  shift?: Vector
  rotate_shift?: Bool
  apply_special_effect?: Bool
  scale?: Double
  draw_as_shadow?: Bool
  draw_as_glow?: Bool
  draw_as_light?: Bool
  mipmap_count?: Uint8
  apply_runtime_tint?: Bool
  tint_as_overlay?: Bool
  invert_colors?: Bool
  tint?: Color
  blend_mode?: BlendMode
  load_in_minimal_mode?: Bool
  premul_alpha?: Bool
  allow_forced_downscale?: Bool
  generate_sdf?: Bool
  surface?: SpriteUsageSurfaceHint
  usage?: SpriteUsageHint
  run_mode?: AnimationRunMode
  frame_count?: Uint32
  line_length?: Uint32
  animation_speed?: Float
  max_advance?: Float
  repeat_count?: Uint8
  dice?: Uint8
  dice_x?: Uint8
  dice_y?: Uint8
  frame_sequence?: AnimationFrameSequence
  stripes?: Stripe[] | {}
  filenames?: FileName[] | {}
  slice?: Uint32
  lines_per_file?: Uint32
}
/**
 * https://lua-api.factorio.com/stable/prototypes/DeliverCategory.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "DeliverCategory".
 */
export interface DeliverCategory {
  type: 'deliver-category'
  name: String
}
/**
 * https://lua-api.factorio.com/stable/prototypes/DeliverImpactCombination.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "DeliverImpactCombination".
 */
export interface DeliverImpactCombination {
  type: 'deliver-impact-combination'
  name: String
  impact_category: String
  deliver_category: String
  trigger_effect_item: TriggerEffectItem
}
/**
 * https://lua-api.factorio.com/stable/prototypes/EditorControllerPrototype.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "EditorControllerPrototype".
 */
export interface EditorControllerPrototype {
  type: 'editor-controller'
  name: String
  inventory_size: ItemStackIndex
  gun_inventory_size: ItemStackIndex
  movement_speed: Double
  item_pickup_distance: Double
  loot_pickup_distance: Double
  mining_speed: Double
  enable_flash_light: Bool
  adjust_speed_based_off_zoom: Bool
  render_as_day: Bool
  instant_blueprint_building: Bool
  instant_deconstruction: Bool
  instant_upgrading: Bool
  instant_rail_planner: Bool
  show_status_icons: Bool
  show_hidden_entities: Bool
  show_entity_tags: Bool
  show_entity_health_bars: Bool
  show_additional_entity_info_gui: Bool
  generate_neighbor_chunks: Bool
  fill_built_entity_energy_buffers: Bool
  show_character_tab_in_controller_gui: Bool
  show_infinity_filters_in_controller_gui: Bool
  placed_corpses_never_expire: Bool
  ignore_surface_conditions: Bool
  ignore_tile_conditions: Bool
}
/**
 * https://lua-api.factorio.com/stable/prototypes/FontPrototype.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "FontPrototype".
 */
export interface FontPrototype {
  type: 'font'
  name: String
  size: Int32
  from: String
  spacing?: Float
  border?: Bool
  filtered?: Bool
  border_color?: Color
}
/**
 * https://lua-api.factorio.com/stable/prototypes/GodControllerPrototype.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "GodControllerPrototype".
 */
export interface GodControllerPrototype {
  type: 'god-controller'
  name: String
  inventory_size: ItemStackIndex
  movement_speed: Double
  item_pickup_distance: Double
  loot_pickup_distance: Double
  mining_speed: Double
  crafting_categories?: RecipeCategoryID[] | {}
  mining_categories?: ResourceCategoryID[] | {}
}
/**
 * https://lua-api.factorio.com/stable/prototypes/ImpactCategory.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "ImpactCategory".
 */
export interface ImpactCategory {
  type: 'impact-category'
  name: String
}
/**
 * https://lua-api.factorio.com/stable/prototypes/MapGenPresets.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "MapGenPresets".
 */
export interface MapGenPresets {
  type: 'map-gen-presets'
  name: String
}
/**
 * https://lua-api.factorio.com/stable/prototypes/MapSettings.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "MapSettings".
 */
export interface MapSettings {
  type: 'map-settings'
  name: String
  pollution: PollutionSettings
  steering: {
    default: StateSteeringSettings
    moving: StateSteeringSettings
  }
  enemy_evolution: EnemyEvolutionSettings
  enemy_expansion: EnemyExpansionSettings
  unit_group: UnitGroupSettings
  path_finder: PathFinderSettings
  max_failed_behavior_count: Uint32
  difficulty_settings: DifficultySettings
  asteroids: AsteroidSettings
}
/**
 * https://lua-api.factorio.com/stable/prototypes/MouseCursor.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "MouseCursor".
 */
export interface MouseCursor {
  type: 'mouse-cursor'
  name: String
  system_cursor?: 'arrow' | 'i-beam' | 'crosshair' | 'wait-arrow' | 'size-all' | 'no' | 'hand'
  filename?: FileName
  hot_pixel_x?: Int16
  hot_pixel_y?: Int16
}
/**
 * https://lua-api.factorio.com/stable/prototypes/RemoteControllerPrototype.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "RemoteControllerPrototype".
 */
export interface RemoteControllerPrototype {
  type: 'remote-controller'
  name: String
  movement_speed: Double
}
/**
 * https://lua-api.factorio.com/stable/prototypes/SoundPrototype.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "SoundPrototype".
 */
export interface SoundPrototype {
  type: 'sound'
  name: String
  category?: SoundType
  priority?: Uint8
  aggregation?: AggregationSpecification
  allow_random_repeat?: Bool
  audible_distance_modifier?: Double
  game_controller_vibration_data?: GameControllerVibrationData
  advanced_volume_control?: AdvancedVolumeControl
  speed_smoothing_window_size?: Uint32
  variations?: SoundDefinition | SoundDefinition[] | {}
  filename?: FileName
  volume?: Float
  min_volume?: Float
  max_volume?: Float
  preload?: Bool
  speed?: Float
  min_speed?: Float
  max_speed?: Float
  modifiers?: SoundModifier | SoundModifier[] | {}
}
/**
 * https://lua-api.factorio.com/stable/prototypes/SpectatorControllerPrototype.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "SpectatorControllerPrototype".
 */
export interface SpectatorControllerPrototype {
  type: 'spectator-controller'
  name: String
  movement_speed: Double
}
/**
 * https://lua-api.factorio.com/stable/prototypes/SpritePrototype.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "SpritePrototype".
 */
export interface SpritePrototype {
  type: 'sprite'
  name: String
  layers?: Sprite[] | {}
  filename?: FileName
  dice?: SpriteSizeType
  dice_x?: SpriteSizeType
  dice_y?: SpriteSizeType
  priority?: SpritePriority
  flags?: SpriteFlags
  size?: SpriteSizeType | [SpriteSizeType, SpriteSizeType]
  width?: SpriteSizeType
  height?: SpriteSizeType
  x?: SpriteSizeType
  y?: SpriteSizeType
  /**
   * @minItems 2
   * @maxItems 2
   */
  position?: [SpriteSizeType, SpriteSizeType]
  shift?: Vector
  rotate_shift?: Bool
  apply_special_effect?: Bool
  scale?: Double
  draw_as_shadow?: Bool
  draw_as_glow?: Bool
  draw_as_light?: Bool
  mipmap_count?: Uint8
  apply_runtime_tint?: Bool
  tint_as_overlay?: Bool
  invert_colors?: Bool
  tint?: Color
  blend_mode?: BlendMode
  load_in_minimal_mode?: Bool
  premul_alpha?: Bool
  allow_forced_downscale?: Bool
  generate_sdf?: Bool
  surface?: SpriteUsageSurfaceHint
  usage?: SpriteUsageHint
}
/**
 * https://lua-api.factorio.com/stable/prototypes/TileEffectDefinition.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "TileEffectDefinition".
 */
export interface TileEffectDefinition {
  type: 'tile-effect'
  name: String
  shader: 'water' | 'space' | 'puddle'
  water?: WaterTileEffectParameters
  space?: SpaceTileEffectParameters
  puddle?: PuddleTileEffectParameters
}
/**
 * https://lua-api.factorio.com/stable/prototypes/TipsAndTricksItemCategory.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "TipsAndTricksItemCategory".
 */
export interface TipsAndTricksItemCategory {
  type: 'tips-and-tricks-item-category'
  name: String
  order: Order
}
/**
 * https://lua-api.factorio.com/stable/prototypes/TriggerTargetType.html
 *
 * This interface was referenced by `FactorioDataRaw`'s JSON-Schema
 * via the `definition` "TriggerTargetType".
 */
export interface TriggerTargetType {
  type: 'trigger-target-type'
  name: String
}
